define(["exports","../@polymer/polymer/lib/legacy/polymer.dom.js"],function(_exports,polymerDom){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.a11ySuite=void 0;polymerDom=babelHelpers.interopRequireWildcard(polymerDom);const Polymer={dom:polymerDom};var a11ySuiteExport;_exports.a11ySuite=a11ySuiteExport;(function(Mocha,chai,axs){Object.keys(Mocha.interfaces).forEach(function(iface){var orig=Mocha.interfaces[iface];Mocha.interfaces[iface]=function(suite){orig.apply(this,arguments);var Suite=Mocha.Suite,Test=Mocha.Test;suite.on("pre-require",function(context,file,mocha){_exports.a11ySuite=a11ySuiteExport=context.a11ySuite=function(fixtureId,ignoredRules,beforeEach){var fixtureElement=document.getElementById(fixtureId);if(!fixtureElement){return}var axsConfig=new axs.AuditConfiguration;axsConfig.scope=document.body;axsConfig.showUnsupportedRulesWarning=!1;axsConfig.auditRulesToIgnore=ignoredRules;var a11ySuite=Suite.create(suite,"A11y Audit - Fixture: "+fixtureId);a11ySuite.eachTest=function(){fixtureElement.create();Polymer.dom.flush();if(beforeEach){beforeEach()}var auditResults=axs.Audit.run(axsConfig);auditResults.forEach(function(result,index){if("NA"!==result.result){var title=result.rule.heading,error="FAIL"===result.result?axs.Audit.accessibilityErrorMessage(result):null,test=new Test(title,function(){if(error){throw new Error(error)}});test.file=file;a11ySuite.addTest(test)}});fixtureElement.restore();suite.eachTest.apply(a11ySuite,arguments);this.eachTest=suite.eachTest};return a11ySuite}})}});chai.use(function(chai,util){var Assertion=chai.Assertion;chai.assert.a11yLabel=function(node,exp,msg){new Assertion(node).to.have.a11yLabel(exp,msg)};Assertion.addMethod("a11yLabel",function(str,msg){if(msg){util.flag(this,"message",msg)}var node=this._obj;new Assertion(node).to.be.instanceOf(Node);var textAlternative=axs.properties.findTextAlternatives(node,{});this.assert(textAlternative===str,"expected #{this} to have text alternative #{exp} but got #{act}","expected #{this} to not have text alternative #{act}",str,textAlternative,!0)})})})(window.Mocha,window.chai,window.axs)});