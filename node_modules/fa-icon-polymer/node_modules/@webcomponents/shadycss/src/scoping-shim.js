define(["exports","./css-parse.js","./style-settings.js","./style-transformer.js","./style-util.js","./style-properties.js","./style-placeholder.js","./style-info.js","./style-cache.js","./document-watcher.js","./template-map.js","./apply-shim-utils.js","./common-utils.js","./custom-style-interface.js"],function(_exports,_cssParse,_styleSettings,_styleTransformer,StyleUtil,_styleProperties,_stylePlaceholder,_styleInfo,_styleCache,_documentWatcher,_templateMap,ApplyShimUtils,_commonUtils,_customStyleInterface){'use strict';Object.defineProperty(_exports,"__esModule",{value:!0});_exports.default=void 0;_styleTransformer=babelHelpers.interopRequireDefault(_styleTransformer);StyleUtil=babelHelpers.interopRequireWildcard(StyleUtil);_styleProperties=babelHelpers.interopRequireDefault(_styleProperties);_stylePlaceholder=babelHelpers.interopRequireDefault(_stylePlaceholder);_styleInfo=babelHelpers.interopRequireDefault(_styleInfo);_styleCache=babelHelpers.interopRequireDefault(_styleCache);_templateMap=babelHelpers.interopRequireDefault(_templateMap);ApplyShimUtils=babelHelpers.interopRequireWildcard(ApplyShimUtils);const styleCache=new _styleCache.default;class ScopingShim{constructor(){this._scopeCounter={};this._documentOwner=document.documentElement;let ast=new _cssParse.StyleNode;ast.rules=[];this._documentOwnerStyleInfo=_styleInfo.default.set(this._documentOwner,new _styleInfo.default(ast));this._elementsHaveApplied=!1;this._applyShim=null;this._customStyleInterface=null}flush(){(0,_documentWatcher.flush)()}_generateScopeSelector(name){let id=this._scopeCounter[name]=(this._scopeCounter[name]||0)+1;return`${name}-${id}`}getStyleAst(style){return StyleUtil.rulesForStyle(style)}styleAstToString(ast){return StyleUtil.toCssText(ast)}_gatherStyles(template){return StyleUtil.gatherStyleText(template.content)}_getCssBuild(template){let style=template.content.querySelector("style");if(!style){return""}return style.getAttribute("css-build")||""}prepareTemplate(template,elementName,typeExtension){if(template._prepared){return}template._prepared=!0;template.name=elementName;template.extends=typeExtension;_templateMap.default[elementName]=template;let cssBuild=this._getCssBuild(template),cssText=this._gatherStyles(template),info={is:elementName,extends:typeExtension,__cssBuild:cssBuild};if(!_styleSettings.nativeShadow){_styleTransformer.default.dom(template.content,elementName)}this._ensure();let hasMixins=(0,_commonUtils.detectMixin)(cssText),ast=(0,_cssParse.parse)(cssText);if(hasMixins&&_styleSettings.nativeCssVariables&&this._applyShim){this._applyShim.transformRules(ast,elementName)}template._styleAst=ast;template._cssBuild=cssBuild;let ownPropertyNames=[];if(!_styleSettings.nativeCssVariables){ownPropertyNames=_styleProperties.default.decorateStyles(template._styleAst)}if(!ownPropertyNames.length||_styleSettings.nativeCssVariables){let root=_styleSettings.nativeShadow?template.content:null,placeholder=_stylePlaceholder.default[elementName],style=this._generateStaticStyle(info,template._styleAst,root,placeholder);template._style=style}template._ownPropertyNames=ownPropertyNames}_generateStaticStyle(info,rules,shadowroot,placeholder){let cssText=_styleTransformer.default.elementStyles(info,rules);if(cssText.length){return StyleUtil.applyCss(cssText,info.is,shadowroot,placeholder)}}_prepareHost(host){let{is,typeExtension}=StyleUtil.getIsExtends(host),placeholder=_stylePlaceholder.default[is],template=_templateMap.default[is],ast,ownStylePropertyNames,cssBuild;if(template){ast=template._styleAst;ownStylePropertyNames=template._ownPropertyNames;cssBuild=template._cssBuild}return _styleInfo.default.set(host,new _styleInfo.default(ast,placeholder,ownStylePropertyNames,is,typeExtension,cssBuild))}_ensureApplyShim(){if(this._applyShim){return}else if(window.ShadyCSS&&window.ShadyCSS.ApplyShim){this._applyShim=window.ShadyCSS.ApplyShim;this._applyShim.invalidCallback=ApplyShimUtils.invalidate}}_ensureCustomStyleInterface(){if(this._customStyleInterface){return}else if(window.ShadyCSS&&window.ShadyCSS.CustomStyleInterface){this._customStyleInterface=window.ShadyCSS.CustomStyleInterface;this._customStyleInterface.transformCallback=style=>{this.transformCustomStyleForDocument(style)};this._customStyleInterface.validateCallback=()=>{requestAnimationFrame(()=>{if(this._customStyleInterface.enqueued||this._elementsHaveApplied){this.flushCustomStyles()}})}}}_ensure(){this._ensureApplyShim();this._ensureCustomStyleInterface()}flushCustomStyles(){this._ensure();if(!this._customStyleInterface){return}let customStyles=this._customStyleInterface.processStyles();if(!this._customStyleInterface.enqueued){return}if(!_styleSettings.nativeCssVariables){this._updateProperties(this._documentOwner,this._documentOwnerStyleInfo);this._applyCustomStyles(customStyles)}else{this._revalidateCustomStyleApplyShim(customStyles)}this._customStyleInterface.enqueued=!1;if(this._elementsHaveApplied&&!_styleSettings.nativeCssVariables){this.styleDocument()}}styleElement(host,overrideProps){let{is}=StyleUtil.getIsExtends(host),styleInfo=_styleInfo.default.get(host);if(!styleInfo){styleInfo=this._prepareHost(host)}if(!this._isRootOwner(host)){this._elementsHaveApplied=!0}if(overrideProps){styleInfo.overrideStyleProperties=styleInfo.overrideStyleProperties||{};Object.assign(styleInfo.overrideStyleProperties,overrideProps)}if(!_styleSettings.nativeCssVariables){this._updateProperties(host,styleInfo);if(styleInfo.ownStylePropertyNames&&styleInfo.ownStylePropertyNames.length){this._applyStyleProperties(host,styleInfo)}}else{if(styleInfo.overrideStyleProperties){(0,_commonUtils.updateNativeProperties)(host,styleInfo.overrideStyleProperties)}let template=_templateMap.default[is];if(!template&&!this._isRootOwner(host)){return}if(template&&template._style&&!ApplyShimUtils.templateIsValid(template)){if(!ApplyShimUtils.templateIsValidating(template)){this._ensure();this._applyShim&&this._applyShim.transformRules(template._styleAst,is);template._style.textContent=_styleTransformer.default.elementStyles(host,styleInfo.styleRules);ApplyShimUtils.startValidatingTemplate(template)}if(_styleSettings.nativeShadow){let root=host.shadowRoot;if(root){let style=root.querySelector("style");style.textContent=_styleTransformer.default.elementStyles(host,styleInfo.styleRules)}}styleInfo.styleRules=template._styleAst}}}_styleOwnerForNode(node){let root=node.getRootNode(),host=root.host;if(host){if(_styleInfo.default.get(host)){return host}else{return this._styleOwnerForNode(host)}}return this._documentOwner}_isRootOwner(node){return node===this._documentOwner}_applyStyleProperties(host,styleInfo){let is=StyleUtil.getIsExtends(host).is,cacheEntry=styleCache.fetch(is,styleInfo.styleProperties,styleInfo.ownStylePropertyNames),cachedScopeSelector=cacheEntry&&cacheEntry.scopeSelector,cachedStyle=cacheEntry?cacheEntry.styleElement:null,oldScopeSelector=styleInfo.scopeSelector;styleInfo.scopeSelector=cachedScopeSelector||this._generateScopeSelector(is);let style=_styleProperties.default.applyElementStyle(host,styleInfo.styleProperties,styleInfo.scopeSelector,cachedStyle);if(!_styleSettings.nativeShadow){_styleProperties.default.applyElementScopeSelector(host,styleInfo.scopeSelector,oldScopeSelector)}if(!cacheEntry){styleCache.store(is,styleInfo.styleProperties,style,styleInfo.scopeSelector)}return style}_updateProperties(host,styleInfo){let owner=this._styleOwnerForNode(host),ownerStyleInfo=_styleInfo.default.get(owner),ownerProperties=ownerStyleInfo.styleProperties,props=Object.create(ownerProperties||null),hostAndRootProps=_styleProperties.default.hostAndRootPropertiesForScope(host,styleInfo.styleRules),propertyData=_styleProperties.default.propertyDataFromStyles(ownerStyleInfo.styleRules,host),propertiesMatchingHost=propertyData.properties;Object.assign(props,hostAndRootProps.hostProps,propertiesMatchingHost,hostAndRootProps.rootProps);this._mixinOverrideStyles(props,styleInfo.overrideStyleProperties);_styleProperties.default.reify(props);styleInfo.styleProperties=props}_mixinOverrideStyles(props,overrides){for(let p in overrides){let v=overrides[p];if(v||0===v){props[p]=v}}}styleDocument(properties){this.styleSubtree(this._documentOwner,properties)}styleSubtree(host,properties){let root=host.shadowRoot;if(root||this._isRootOwner(host)){this.styleElement(host,properties)}let shadowChildren=root&&(root.children||root.childNodes);if(shadowChildren){for(let i=0,c;i<shadowChildren.length;i++){c=shadowChildren[i];this.styleSubtree(c)}}else{let children=host.children||host.childNodes;if(children){for(let i=0,c;i<children.length;i++){c=children[i];this.styleSubtree(c)}}}}_revalidateCustomStyleApplyShim(customStyles){for(let i=0;i<customStyles.length;i++){let c=customStyles[i],s=this._customStyleInterface.getStyleForCustomStyle(c);if(s){this._revalidateApplyShim(s)}}}_applyCustomStyles(customStyles){for(let i=0;i<customStyles.length;i++){let c=customStyles[i],s=this._customStyleInterface.getStyleForCustomStyle(c);if(s){_styleProperties.default.applyCustomStyle(s,this._documentOwnerStyleInfo.styleProperties)}}}transformCustomStyleForDocument(style){let ast=StyleUtil.rulesForStyle(style);StyleUtil.forEachRule(ast,rule=>{if(_styleSettings.nativeShadow){_styleTransformer.default.normalizeRootSelector(rule)}else{_styleTransformer.default.documentRule(rule)}if(_styleSettings.nativeCssVariables){this._ensure();this._applyShim&&this._applyShim.transformRule(rule)}});if(_styleSettings.nativeCssVariables){style.textContent=StyleUtil.toCssText(ast)}else{this._documentOwnerStyleInfo.styleRules.rules.push(ast)}}_revalidateApplyShim(style){if(_styleSettings.nativeCssVariables&&this._applyShim){let ast=StyleUtil.rulesForStyle(style);this._ensure();this._applyShim.transformRules(ast);style.textContent=StyleUtil.toCssText(ast)}}getComputedStyleValue(element,property){let value;if(!_styleSettings.nativeCssVariables){let styleInfo=_styleInfo.default.get(element)||_styleInfo.default.get(this._styleOwnerForNode(element));value=styleInfo.styleProperties[property]}value=value||window.getComputedStyle(element).getPropertyValue(property);return value?value.trim():""}setElementClass(element,classString){let root=element.getRootNode(),classes=classString?classString.split(/\s/):[],scopeName=root.host&&root.host.localName;if(!scopeName){var classAttr=element.getAttribute("class");if(classAttr){let k$=classAttr.split(/\s/);for(let i=0;i<k$.length;i++){if(k$[i]===_styleTransformer.default.SCOPE_NAME){scopeName=k$[i+1];break}}}}if(scopeName){classes.push(_styleTransformer.default.SCOPE_NAME,scopeName)}if(!_styleSettings.nativeCssVariables){let styleInfo=_styleInfo.default.get(element);if(styleInfo&&styleInfo.scopeSelector){classes.push(_styleProperties.default.XSCOPE_NAME,styleInfo.scopeSelector)}}StyleUtil.setElementClassRaw(element,classes.join(" "))}_styleInfoForNode(node){return _styleInfo.default.get(node)}}_exports.default=ScopingShim;ScopingShim.prototype.flush=ScopingShim.prototype.flush;ScopingShim.prototype.prepareTemplate=ScopingShim.prototype.prepareTemplate;ScopingShim.prototype.styleElement=ScopingShim.prototype.styleElement;ScopingShim.prototype.styleDocument=ScopingShim.prototype.styleDocument;ScopingShim.prototype.styleSubtree=ScopingShim.prototype.styleSubtree;ScopingShim.prototype.getComputedStyleValue=ScopingShim.prototype.getComputedStyleValue;ScopingShim.prototype.setElementClass=ScopingShim.prototype.setElementClass;ScopingShim.prototype._styleInfoForNode=ScopingShim.prototype._styleInfoForNode;ScopingShim.prototype.transformCustomStyleForDocument=ScopingShim.prototype.transformCustomStyleForDocument;ScopingShim.prototype.getStyleAst=ScopingShim.prototype.getStyleAst;ScopingShim.prototype.styleAstToString=ScopingShim.prototype.styleAstToString;ScopingShim.prototype.flushCustomStyles=ScopingShim.prototype.flushCustomStyles;Object.defineProperties(ScopingShim.prototype,{nativeShadow:{get(){return _styleSettings.nativeShadow}},nativeCss:{get(){return _styleSettings.nativeCssVariables}}})});