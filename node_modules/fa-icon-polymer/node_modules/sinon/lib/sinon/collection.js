(function(sinonGlobal){"use strict";var push=[].push,hasOwnProperty=Object.prototype.hasOwnProperty;function getFakes(fakeCollection){if(!fakeCollection.fakes){fakeCollection.fakes=[]}return fakeCollection.fakes}function each(fakeCollection,method){for(var fakes=getFakes(fakeCollection),i=0,l=fakes.length;i<l;i+=1){if("function"===typeof fakes[i][method]){fakes[i][method]()}}}function compact(fakeCollection){var fakes=getFakes(fakeCollection),i=0;while(i<fakes.length){fakes.splice(i,1)}}function makeApi(sinon){var collection={verify:function resolve(){each(this,"verify")},restore:function restore(){each(this,"restore");compact(this)},reset:function restore(){each(this,"reset")},verifyAndRestore:function verifyAndRestore(){var exception;try{this.verify()}catch(e){exception=e}this.restore();if(exception){throw exception}},add:function add(fake){push.call(getFakes(this),fake);return fake},spy:function spy(){return this.add(sinon.spy.apply(sinon,arguments))},stub:function stub(object,property,value){if(property){var original=object[property];if("function"!==typeof original){if(!hasOwnProperty.call(object,property)){throw new TypeError("Cannot stub non-existent own property "+property)}object[property]=value;return this.add({restore:function(){object[property]=original}})}}if(!property&&!!object&&"object"===typeof object){var stubbedObj=sinon.stub.apply(sinon,arguments);for(var prop in stubbedObj){if("function"===typeof stubbedObj[prop]){this.add(stubbedObj[prop])}}return stubbedObj}return this.add(sinon.stub.apply(sinon,arguments))},mock:function mock(){return this.add(sinon.mock.apply(sinon,arguments))},inject:function inject(obj){var col=this;obj.spy=function(){return col.spy.apply(col,arguments)};obj.stub=function(){return col.stub.apply(col,arguments)};obj.mock=function(){return col.mock.apply(col,arguments)};return obj}};sinon.collection=collection;return collection}var isNode="undefined"!==typeof module&&module.exports&&"function"===typeof require,isAMD="function"===typeof define&&"object"===typeof define.amd&&define.amd;function loadDependencies(require,exports,module){var sinon=require("./util/core");require("./mock");require("./spy");require("./stub");module.exports=makeApi(sinon)}if(isAMD){define(loadDependencies);return}if(isNode){loadDependencies(require,module.exports,module);return}if(sinonGlobal){makeApi(sinonGlobal)}})("object"===typeof sinon&&sinon);