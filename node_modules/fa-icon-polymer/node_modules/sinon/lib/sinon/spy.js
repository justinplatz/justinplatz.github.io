(function(sinonGlobal){"use strict";function makeApi(sinon){var push=Array.prototype.push,slice=Array.prototype.slice,callId=0;function spy(object,property,types){if(!property&&"function"===typeof object){return spy.create(object)}if(!object&&!property){return spy.create(function(){})}if(types){for(var descriptor={},methodDesc=sinon.getPropertyDescriptor(object,property),i=0;i<types.length;i++){descriptor[types[i]]=spy.create(methodDesc[types[i]])}return sinon.wrapMethod(object,property,descriptor)}return sinon.wrapMethod(object,property,spy.create(object[property]))}function matchingFake(fakes,args,strict){if(!fakes){return}for(var i=0,l=fakes.length;i<l;i++){if(fakes[i].matches(args,strict)){return fakes[i]}}}function incrementCallCount(){this.called=!0;this.callCount+=1;this.notCalled=!1;this.calledOnce=1===this.callCount;this.calledTwice=2===this.callCount;this.calledThrice=3===this.callCount}function createCallProperties(){this.firstCall=this.getCall(0);this.secondCall=this.getCall(1);this.thirdCall=this.getCall(2);this.lastCall=this.getCall(this.callCount-1)}var vars="a,b,c,d,e,f,g,h,i,j,k,l";function createProxy(func,proxyLength){var p;if(proxyLength){eval("p = (function proxy("+vars.substring(0,2*proxyLength-1)+") { return p.invoke(func, this, slice.call(arguments)); });")}else{p=function proxy(){return p.invoke(func,this,slice.call(arguments))}}p.isSinonProxy=!0;return p}var uuid=0,spyApi={reset:function(){if(this.invoking){var err=new Error("Cannot reset Sinon function while invoking it. "+"Move the call to .reset outside of the callback.");err.name="InvalidResetException";throw err}this.called=!1;this.notCalled=!0;this.calledOnce=!1;this.calledTwice=!1;this.calledThrice=!1;this.callCount=0;this.firstCall=null;this.secondCall=null;this.thirdCall=null;this.lastCall=null;this.args=[];this.returnValues=[];this.thisValues=[];this.exceptions=[];this.callIds=[];this.stacks=[];if(this.fakes){for(var i=0;i<this.fakes.length;i++){this.fakes[i].reset()}}return this},create:function create(func,spyLength){var name;if("function"!==typeof func){func=function(){}}else{name=sinon.functionName(func)}if(!spyLength){spyLength=func.length}var proxy=createProxy(func,spyLength);sinon.extend(proxy,spy);delete proxy.create;sinon.extend(proxy,func);proxy.reset();proxy.prototype=func.prototype;proxy.displayName=name||"spy";proxy.toString=sinon.functionToString;proxy.instantiateFake=sinon.spy.create;proxy.id="spy#"+uuid++;return proxy},invoke:function invoke(func,thisValue,args){var matching=matchingFake(this.fakes,args),exception,returnValue;incrementCallCount.call(this);push.call(this.thisValues,thisValue);push.call(this.args,args);push.call(this.callIds,callId++);createCallProperties.call(this);try{this.invoking=!0;if(matching){returnValue=matching.invoke(func,thisValue,args)}else{returnValue=(this.func||func).apply(thisValue,args)}var thisCall=this.getCall(this.callCount-1);if(thisCall.calledWithNew()&&"object"!==typeof returnValue){returnValue=thisValue}}catch(e){exception=e}finally{delete this.invoking}push.call(this.exceptions,exception);push.call(this.returnValues,returnValue);push.call(this.stacks,new Error().stack);createCallProperties.call(this);if(exception!==void 0){throw exception}return returnValue},named:function named(name){this.displayName=name;return this},getCall:function getCall(i){if(0>i||i>=this.callCount){return null}return sinon.spyCall(this,this.thisValues[i],this.args[i],this.returnValues[i],this.exceptions[i],this.callIds[i],this.stacks[i])},getCalls:function(){var calls=[],i;for(i=0;i<this.callCount;i++){calls.push(this.getCall(i))}return calls},calledBefore:function calledBefore(spyFn){if(!this.called){return!1}if(!spyFn.called){return!0}return this.callIds[0]<spyFn.callIds[spyFn.callIds.length-1]},calledAfter:function calledAfter(spyFn){if(!this.called||!spyFn.called){return!1}return this.callIds[this.callCount-1]>spyFn.callIds[spyFn.callCount-1]},withArgs:function(){var args=slice.call(arguments);if(this.fakes){var match=matchingFake(this.fakes,args,!0);if(match){return match}}else{this.fakes=[]}var original=this,fake=this.instantiateFake();fake.matchingAguments=args;fake.parent=this;push.call(this.fakes,fake);fake.withArgs=function(){return original.withArgs.apply(original,arguments)};for(var i=0;i<this.args.length;i++){if(fake.matches(this.args[i])){incrementCallCount.call(fake);push.call(fake.thisValues,this.thisValues[i]);push.call(fake.args,this.args[i]);push.call(fake.returnValues,this.returnValues[i]);push.call(fake.exceptions,this.exceptions[i]);push.call(fake.callIds,this.callIds[i])}}createCallProperties.call(fake);return fake},matches:function(args,strict){var margs=this.matchingAguments;if(margs.length<=args.length&&sinon.deepEqual(margs,args.slice(0,margs.length))){return!strict||margs.length===args.length}},printf:function(format){var spyInstance=this,args=slice.call(arguments,1),formatter;return(format||"").replace(/%(.)/g,function(match,specifyer){formatter=spyApi.formatters[specifyer];if("function"===typeof formatter){return formatter.call(null,spyInstance,args)}else if(!isNaN(parseInt(specifyer,10))){return sinon.format(args[specifyer-1])}return"%"+specifyer})}};function delegateToCalls(method,matchAny,actual,notCalled){spyApi[method]=function(){if(!this.called){if(notCalled){return notCalled.apply(this,arguments)}return!1}for(var currentCall,matches=0,i=0,l=this.callCount;i<l;i+=1){currentCall=this.getCall(i);if(currentCall[actual||method].apply(currentCall,arguments)){matches+=1;if(matchAny){return!0}}}return matches===this.callCount}}delegateToCalls("calledOn",!0);delegateToCalls("alwaysCalledOn",!1,"calledOn");delegateToCalls("calledWith",!0);delegateToCalls("calledWithMatch",!0);delegateToCalls("alwaysCalledWith",!1,"calledWith");delegateToCalls("alwaysCalledWithMatch",!1,"calledWithMatch");delegateToCalls("calledWithExactly",!0);delegateToCalls("alwaysCalledWithExactly",!1,"calledWithExactly");delegateToCalls("neverCalledWith",!1,"notCalledWith",function(){return!0});delegateToCalls("neverCalledWithMatch",!1,"notCalledWithMatch",function(){return!0});delegateToCalls("threw",!0);delegateToCalls("alwaysThrew",!1,"threw");delegateToCalls("returned",!0);delegateToCalls("alwaysReturned",!1,"returned");delegateToCalls("calledWithNew",!0);delegateToCalls("alwaysCalledWithNew",!1,"calledWithNew");delegateToCalls("callArg",!1,"callArgWith",function(){throw new Error(this.toString()+" cannot call arg since it was not yet invoked.")});spyApi.callArgWith=spyApi.callArg;delegateToCalls("callArgOn",!1,"callArgOnWith",function(){throw new Error(this.toString()+" cannot call arg since it was not yet invoked.")});spyApi.callArgOnWith=spyApi.callArgOn;delegateToCalls("yield",!1,"yield",function(){throw new Error(this.toString()+" cannot yield since it was not yet invoked.")});spyApi.invokeCallback=spyApi.yield;delegateToCalls("yieldOn",!1,"yieldOn",function(){throw new Error(this.toString()+" cannot yield since it was not yet invoked.")});delegateToCalls("yieldTo",!1,"yieldTo",function(property){throw new Error(this.toString()+" cannot yield to '"+property+"' since it was not yet invoked.")});delegateToCalls("yieldToOn",!1,"yieldToOn",function(property){throw new Error(this.toString()+" cannot yield to '"+property+"' since it was not yet invoked.")});spyApi.formatters={c:function(spyInstance){return sinon.timesInWords(spyInstance.callCount)},n:function(spyInstance){return spyInstance.toString()},C:function(spyInstance){for(var calls=[],i=0,l=spyInstance.callCount,stringifiedCall;i<l;++i){stringifiedCall="    "+spyInstance.getCall(i).toString();if(/\n/.test(calls[i-1])){stringifiedCall="\n"+stringifiedCall}push.call(calls,stringifiedCall)}return 0<calls.length?"\n"+calls.join("\n"):""},t:function(spyInstance){for(var objects=[],i=0,l=spyInstance.callCount;i<l;++i){push.call(objects,sinon.format(spyInstance.thisValues[i]))}return objects.join(", ")},"*":function(spyInstance,args){for(var formatted=[],i=0,l=args.length;i<l;++i){push.call(formatted,sinon.format(args[i]))}return formatted.join(", ")}};sinon.extend(spy,spyApi);spy.spyCall=sinon.spyCall;sinon.spy=spy;return spy}var isNode="undefined"!==typeof module&&module.exports&&"function"===typeof require,isAMD="function"===typeof define&&"object"===typeof define.amd&&define.amd;function loadDependencies(require,exports,module){var core=require("./util/core");require("./call");require("./extend");require("./times_in_words");require("./format");module.exports=makeApi(core)}if(isAMD){define(loadDependencies);return}if(isNode){loadDependencies(require,module.exports,module);return}if(sinonGlobal){makeApi(sinonGlobal)}})("object"===typeof sinon&&sinon);