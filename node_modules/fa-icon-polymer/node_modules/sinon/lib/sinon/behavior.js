(function(sinonGlobal){"use strict";var slice=Array.prototype.slice,join=Array.prototype.join,useLeftMostCallback=-1,useRightMostCallback=-2,nextTick=function(){if("object"===typeof process&&"function"===typeof process.nextTick){return process.nextTick}if("function"===typeof setImmediate){return setImmediate}return function(callback){setTimeout(callback,0)}}();function throwsException(error,message){if("string"===typeof error){this.exception=new Error(message||"");this.exception.name=error}else if(!error){this.exception=new Error("Error")}else{this.exception=error}return this}function getCallback(behavior,args){var callArgAt=behavior.callArgAt;if(0<=callArgAt){return args[callArgAt]}var argumentList;if(callArgAt===useLeftMostCallback){argumentList=args}if(callArgAt===useRightMostCallback){argumentList=slice.call(args).reverse()}for(var callArgProp=behavior.callArgProp,i=0,l=argumentList.length;i<l;++i){if(!callArgProp&&"function"===typeof argumentList[i]){return argumentList[i]}if(callArgProp&&argumentList[i]&&"function"===typeof argumentList[i][callArgProp]){return argumentList[i][callArgProp]}}return null}function makeApi(sinon){function getCallbackError(behavior,func,args){if(0>behavior.callArgAt){var msg;if(behavior.callArgProp){msg=sinon.functionName(behavior.stub)+" expected to yield to '"+behavior.callArgProp+"', but no object with such a property was passed."}else{msg=sinon.functionName(behavior.stub)+" expected to yield, but no callback was passed."}if(0<args.length){msg+=" Received ["+join.call(args,", ")+"]"}return msg}return"argument at index "+behavior.callArgAt+" is not a function: "+func}function callCallback(behavior,args){if("number"===typeof behavior.callArgAt){var func=getCallback(behavior,args);if("function"!==typeof func){throw new TypeError(getCallbackError(behavior,func,args))}if(behavior.callbackAsync){nextTick(function(){func.apply(behavior.callbackContext,behavior.callbackArguments)})}else{func.apply(behavior.callbackContext,behavior.callbackArguments)}}}var proto={create:function create(stub){var behavior=sinon.extend({},sinon.behavior);delete behavior.create;behavior.stub=stub;return behavior},isPresent:function isPresent(){return"number"===typeof this.callArgAt||this.exception||"number"===typeof this.returnArgAt||this.returnThis||this.returnValueDefined},invoke:function invoke(context,args){callCallback(this,args);if(this.exception){throw this.exception}else if("number"===typeof this.returnArgAt){return args[this.returnArgAt]}else if(this.returnThis){return context}return this.returnValue},onCall:function onCall(index){return this.stub.onCall(index)},onFirstCall:function onFirstCall(){return this.stub.onFirstCall()},onSecondCall:function onSecondCall(){return this.stub.onSecondCall()},onThirdCall:function onThirdCall(){return this.stub.onThirdCall()},withArgs:function withArgs(){throw new Error("Defining a stub by invoking \"stub.onCall(...).withArgs(...)\" "+"is not supported. Use \"stub.withArgs(...).onCall(...)\" "+"to define sequential behavior for calls with certain arguments.")},callsArg:function callsArg(pos){if("number"!==typeof pos){throw new TypeError("argument index is not number")}this.callArgAt=pos;this.callbackArguments=[];this.callbackContext=void 0;this.callArgProp=void 0;this.callbackAsync=!1;return this},callsArgOn:function callsArgOn(pos,context){if("number"!==typeof pos){throw new TypeError("argument index is not number")}if("object"!==typeof context){throw new TypeError("argument context is not an object")}this.callArgAt=pos;this.callbackArguments=[];this.callbackContext=context;this.callArgProp=void 0;this.callbackAsync=!1;return this},callsArgWith:function callsArgWith(pos){if("number"!==typeof pos){throw new TypeError("argument index is not number")}this.callArgAt=pos;this.callbackArguments=slice.call(arguments,1);this.callbackContext=void 0;this.callArgProp=void 0;this.callbackAsync=!1;return this},callsArgOnWith:function callsArgWith(pos,context){if("number"!==typeof pos){throw new TypeError("argument index is not number")}if("object"!==typeof context){throw new TypeError("argument context is not an object")}this.callArgAt=pos;this.callbackArguments=slice.call(arguments,2);this.callbackContext=context;this.callArgProp=void 0;this.callbackAsync=!1;return this},yields:function(){this.callArgAt=useLeftMostCallback;this.callbackArguments=slice.call(arguments,0);this.callbackContext=void 0;this.callArgProp=void 0;this.callbackAsync=!1;return this},yieldsRight:function(){this.callArgAt=useRightMostCallback;this.callbackArguments=slice.call(arguments,0);this.callbackContext=void 0;this.callArgProp=void 0;this.callbackAsync=!1;return this},yieldsOn:function(context){if("object"!==typeof context){throw new TypeError("argument context is not an object")}this.callArgAt=useLeftMostCallback;this.callbackArguments=slice.call(arguments,1);this.callbackContext=context;this.callArgProp=void 0;this.callbackAsync=!1;return this},yieldsTo:function(prop){this.callArgAt=useLeftMostCallback;this.callbackArguments=slice.call(arguments,1);this.callbackContext=void 0;this.callArgProp=prop;this.callbackAsync=!1;return this},yieldsToOn:function(prop,context){if("object"!==typeof context){throw new TypeError("argument context is not an object")}this.callArgAt=useLeftMostCallback;this.callbackArguments=slice.call(arguments,2);this.callbackContext=context;this.callArgProp=prop;this.callbackAsync=!1;return this},throws:throwsException,throwsException:throwsException,returns:function returns(value){this.returnValue=value;this.returnValueDefined=!0;this.exception=void 0;return this},returnsArg:function returnsArg(pos){if("number"!==typeof pos){throw new TypeError("argument index is not number")}this.returnArgAt=pos;return this},returnsThis:function returnsThis(){this.returnThis=!0;return this}};function createAsyncVersion(syncFnName){return function(){var result=this[syncFnName].apply(this,arguments);this.callbackAsync=!0;return result}}for(var method in proto){if(proto.hasOwnProperty(method)&&method.match(/^(callsArg|yields)/)&&!method.match(/Async/)){proto[method+"Async"]=createAsyncVersion(method)}}sinon.behavior=proto;return proto}var isNode="undefined"!==typeof module&&module.exports&&"function"===typeof require,isAMD="function"===typeof define&&"object"===typeof define.amd&&define.amd;function loadDependencies(require,exports,module){var sinon=require("./util/core");require("./extend");module.exports=makeApi(sinon)}if(isAMD){define(loadDependencies);return}if(isNode){loadDependencies(require,module.exports,module);return}if(sinonGlobal){makeApi(sinonGlobal)}})("object"===typeof sinon&&sinon);