(function(sinonGlobal){"use strict";var slice=Array.prototype.slice;function makeApi(sinon){function throwYieldError(proxy,text,args){var msg=sinon.functionName(proxy)+text;if(args.length){msg+=" Received ["+slice.call(args).join(", ")+"]"}throw new Error(msg)}var callProto={calledOn:function calledOn(thisValue){if(sinon.match&&sinon.match.isMatcher(thisValue)){return thisValue.test(this.thisValue)}return this.thisValue===thisValue},calledWith:function calledWith(){var l=arguments.length;if(l>this.args.length){return!1}for(var i=0;i<l;i+=1){if(!sinon.deepEqual(arguments[i],this.args[i])){return!1}}return!0},calledWithMatch:function calledWithMatch(){var l=arguments.length;if(l>this.args.length){return!1}for(var i=0;i<l;i+=1){var actual=this.args[i],expectation=arguments[i];if(!sinon.match||!sinon.match(expectation).test(actual)){return!1}}return!0},calledWithExactly:function calledWithExactly(){return arguments.length===this.args.length&&this.calledWith.apply(this,arguments)},notCalledWith:function notCalledWith(){return!this.calledWith.apply(this,arguments)},notCalledWithMatch:function notCalledWithMatch(){return!this.calledWithMatch.apply(this,arguments)},returned:function returned(value){return sinon.deepEqual(value,this.returnValue)},threw:function threw(error){if("undefined"===typeof error||!this.exception){return!!this.exception}return this.exception===error||this.exception.name===error},calledWithNew:function calledWithNew(){return this.proxy.prototype&&this.thisValue instanceof this.proxy},calledBefore:function(other){return this.callId<other.callId},calledAfter:function(other){return this.callId>other.callId},callArg:function(pos){this.args[pos]()},callArgOn:function(pos,thisValue){this.args[pos].apply(thisValue)},callArgWith:function(pos){this.callArgOnWith.apply(this,[pos,null].concat(slice.call(arguments,1)))},callArgOnWith:function(pos,thisValue){var args=slice.call(arguments,2);this.args[pos].apply(thisValue,args)},yield:function(){this.yieldOn.apply(this,[null].concat(slice.call(arguments,0)))},yieldOn:function(thisValue){for(var args=this.args,i=0,l=args.length;i<l;++i){if("function"===typeof args[i]){args[i].apply(thisValue,slice.call(arguments,1));return}}throwYieldError(this.proxy," cannot yield since no callback was passed.",args)},yieldTo:function(prop){this.yieldToOn.apply(this,[prop,null].concat(slice.call(arguments,1)))},yieldToOn:function(prop,thisValue){for(var args=this.args,i=0,l=args.length;i<l;++i){if(args[i]&&"function"===typeof args[i][prop]){args[i][prop].apply(thisValue,slice.call(arguments,2));return}}throwYieldError(this.proxy," cannot yield to '"+prop+"' since no callback was passed.",args)},getStackFrames:function(){return this.stack&&this.stack.split("\n").slice(3)},toString:function(){var callStr=this.proxy?this.proxy.toString()+"(":"",args=[];if(!this.args){return":("}for(var i=0,l=this.args.length;i<l;++i){args.push(sinon.format(this.args[i]))}callStr=callStr+args.join(", ")+")";if("undefined"!==typeof this.returnValue){callStr+=" => "+sinon.format(this.returnValue)}if(this.exception){callStr+=" !"+this.exception.name;if(this.exception.message){callStr+="("+this.exception.message+")"}}if(this.stack){callStr+=this.getStackFrames()[0].replace(/^\s*(?:at\s+|@)?/," at ")}return callStr}};callProto.invokeCallback=callProto.yield;function createSpyCall(spy,thisValue,args,returnValue,exception,id,stack){if("number"!==typeof id){throw new TypeError("Call id is not a number")}var proxyCall=sinon.create(callProto);proxyCall.proxy=spy;proxyCall.thisValue=thisValue;proxyCall.args=args;proxyCall.returnValue=returnValue;proxyCall.exception=exception;proxyCall.callId=id;proxyCall.stack=stack;return proxyCall}createSpyCall.toString=callProto.toString;sinon.spyCall=createSpyCall;return createSpyCall}var isNode="undefined"!==typeof module&&module.exports&&"function"===typeof require,isAMD="function"===typeof define&&"object"===typeof define.amd&&define.amd;function loadDependencies(require,exports,module){var sinon=require("./util/core");require("./match");require("./format");module.exports=makeApi(sinon)}if(isAMD){define(loadDependencies);return}if(isNode){loadDependencies(require,module.exports,module);return}if(sinonGlobal){makeApi(sinonGlobal)}})("object"===typeof sinon&&sinon);