(function(sinonGlobal){"use strict";function makeApi(sinon){var push=[].push,match=sinon.match;function mock(object){if(!object){return sinon.expectation.create("Anonymous mock")}return mock.create(object)}function each(collection,callback){if(!collection){return}for(var i=0,l=collection.length;i<l;i+=1){callback(collection[i])}}function arrayEquals(arr1,arr2,compareLength){if(compareLength&&arr1.length!==arr2.length){return!1}for(var i=0,l=arr1.length;i<l;i++){if(!sinon.deepEqual(arr1[i],arr2[i])){return!1}}return!0}sinon.extend(mock,{create:function create(object){if(!object){throw new TypeError("object is null")}var mockObject=sinon.extend({},mock);mockObject.object=object;delete mockObject.create;return mockObject},expects:function expects(method){if(!method){throw new TypeError("method is falsy")}if(!this.expectations){this.expectations={};this.proxies=[]}if(!this.expectations[method]){this.expectations[method]=[];var mockObject=this;sinon.wrapMethod(this.object,method,function(){return mockObject.invokeMethod(method,this,arguments)});push.call(this.proxies,method)}var expectation=sinon.expectation.create(method);push.call(this.expectations[method],expectation);return expectation},restore:function restore(){var object=this.object;each(this.proxies,function(proxy){if("function"===typeof object[proxy].restore){object[proxy].restore()}})},verify:function verify(){var expectations=this.expectations||{},messages=[],met=[];each(this.proxies,function(proxy){each(expectations[proxy],function(expectation){if(!expectation.met()){push.call(messages,expectation.toString())}else{push.call(met,expectation.toString())}})});this.restore();if(0<messages.length){sinon.expectation.fail(messages.concat(met).join("\n"))}else if(0<met.length){sinon.expectation.pass(messages.concat(met).join("\n"))}return!0},invokeMethod:function invokeMethod(method,thisValue,args){var expectations=this.expectations&&this.expectations[method]?this.expectations[method]:[],expectationsWithMatchingArgs=[],currentArgs=args||[],i,available;for(i=0;i<expectations.length;i+=1){var expectedArgs=expectations[i].expectedArguments||[];if(arrayEquals(expectedArgs,currentArgs,expectations[i].expectsExactArgCount)){expectationsWithMatchingArgs.push(expectations[i])}}for(i=0;i<expectationsWithMatchingArgs.length;i+=1){if(!expectationsWithMatchingArgs[i].met()&&expectationsWithMatchingArgs[i].allowsCall(thisValue,args)){return expectationsWithMatchingArgs[i].apply(thisValue,args)}}var messages=[],exhausted=0;for(i=0;i<expectationsWithMatchingArgs.length;i+=1){if(expectationsWithMatchingArgs[i].allowsCall(thisValue,args)){available=available||expectationsWithMatchingArgs[i]}else{exhausted+=1}}if(available&&0===exhausted){return available.apply(thisValue,args)}for(i=0;i<expectations.length;i+=1){push.call(messages,"    "+expectations[i].toString())}messages.unshift("Unexpected call: "+sinon.spyCall.toString.call({proxy:method,args:args}));sinon.expectation.fail(messages.join("\n"))}});var times=sinon.timesInWords,slice=Array.prototype.slice;function callCountInWords(callCount){if(0===callCount){return"never called"}return"called "+times(callCount)}function expectedCallCountInWords(expectation){var min=expectation.minCalls,max=expectation.maxCalls;if("number"===typeof min&&"number"===typeof max){var str=times(min);if(min!==max){str="at least "+str+" and at most "+times(max)}return str}if("number"===typeof min){return"at least "+times(min)}return"at most "+times(max)}function receivedMinCalls(expectation){var hasMinLimit="number"===typeof expectation.minCalls;return!hasMinLimit||expectation.callCount>=expectation.minCalls}function receivedMaxCalls(expectation){if("number"!==typeof expectation.maxCalls){return!1}return expectation.callCount===expectation.maxCalls}function verifyMatcher(possibleMatcher,arg){var isMatcher=match&&match.isMatcher(possibleMatcher);return isMatcher&&possibleMatcher.test(arg)||!0}sinon.expectation={minCalls:1,maxCalls:1,create:function create(methodName){var expectation=sinon.extend(sinon.stub.create(),sinon.expectation);delete expectation.create;expectation.method=methodName;return expectation},invoke:function invoke(func,thisValue,args){this.verifyCallAllowed(thisValue,args);return sinon.spy.invoke.apply(this,arguments)},atLeast:function atLeast(num){if("number"!==typeof num){throw new TypeError("'"+num+"' is not number")}if(!this.limitsSet){this.maxCalls=null;this.limitsSet=!0}this.minCalls=num;return this},atMost:function atMost(num){if("number"!==typeof num){throw new TypeError("'"+num+"' is not number")}if(!this.limitsSet){this.minCalls=null;this.limitsSet=!0}this.maxCalls=num;return this},never:function never(){return this.exactly(0)},once:function once(){return this.exactly(1)},twice:function twice(){return this.exactly(2)},thrice:function thrice(){return this.exactly(3)},exactly:function exactly(num){if("number"!==typeof num){throw new TypeError("'"+num+"' is not a number")}this.atLeast(num);return this.atMost(num)},met:function met(){return!this.failed&&receivedMinCalls(this)},verifyCallAllowed:function verifyCallAllowed(thisValue,args){if(receivedMaxCalls(this)){this.failed=!0;sinon.expectation.fail(this.method+" already called "+times(this.maxCalls))}if("expectedThis"in this&&this.expectedThis!==thisValue){sinon.expectation.fail(this.method+" called with "+thisValue+" as thisValue, expected "+this.expectedThis)}if(!("expectedArguments"in this)){return}if(!args){sinon.expectation.fail(this.method+" received no arguments, expected "+sinon.format(this.expectedArguments))}if(args.length<this.expectedArguments.length){sinon.expectation.fail(this.method+" received too few arguments ("+sinon.format(args)+"), expected "+sinon.format(this.expectedArguments))}if(this.expectsExactArgCount&&args.length!==this.expectedArguments.length){sinon.expectation.fail(this.method+" received too many arguments ("+sinon.format(args)+"), expected "+sinon.format(this.expectedArguments))}for(var i=0,l=this.expectedArguments.length;i<l;i+=1){if(!verifyMatcher(this.expectedArguments[i],args[i])){sinon.expectation.fail(this.method+" received wrong arguments "+sinon.format(args)+", didn't match "+this.expectedArguments.toString())}if(!sinon.deepEqual(this.expectedArguments[i],args[i])){sinon.expectation.fail(this.method+" received wrong arguments "+sinon.format(args)+", expected "+sinon.format(this.expectedArguments))}}},allowsCall:function allowsCall(thisValue,args){if(this.met()&&receivedMaxCalls(this)){return!1}if("expectedThis"in this&&this.expectedThis!==thisValue){return!1}if(!("expectedArguments"in this)){return!0}args=args||[];if(args.length<this.expectedArguments.length){return!1}if(this.expectsExactArgCount&&args.length!==this.expectedArguments.length){return!1}for(var i=0,l=this.expectedArguments.length;i<l;i+=1){if(!verifyMatcher(this.expectedArguments[i],args[i])){return!1}if(!sinon.deepEqual(this.expectedArguments[i],args[i])){return!1}}return!0},withArgs:function withArgs(){this.expectedArguments=slice.call(arguments);return this},withExactArgs:function withExactArgs(){this.withArgs.apply(this,arguments);this.expectsExactArgCount=!0;return this},on:function on(thisValue){this.expectedThis=thisValue;return this},toString:function(){var args=(this.expectedArguments||[]).slice();if(!this.expectsExactArgCount){push.call(args,"[...]")}var callStr=sinon.spyCall.toString.call({proxy:this.method||"anonymous mock expectation",args:args}),message=callStr.replace(", [...","[, ...")+" "+expectedCallCountInWords(this);if(this.met()){return"Expectation met: "+message}return"Expected "+message+" ("+callCountInWords(this.callCount)+")"},verify:function verify(){if(!this.met()){sinon.expectation.fail(this.toString())}else{sinon.expectation.pass(this.toString())}return!0},pass:function pass(message){sinon.assert.pass(message)},fail:function fail(message){var exception=new Error(message);exception.name="ExpectationError";throw exception}};sinon.mock=mock;return mock}var isNode="undefined"!==typeof module&&module.exports&&"function"===typeof require,isAMD="function"===typeof define&&"object"===typeof define.amd&&define.amd;function loadDependencies(require,exports,module){var sinon=require("./util/core");require("./times_in_words");require("./call");require("./extend");require("./match");require("./spy");require("./stub");require("./format");module.exports=makeApi(sinon)}if(isAMD){define(loadDependencies);return}if(isNode){loadDependencies(require,module.exports,module);return}if(sinonGlobal){makeApi(sinonGlobal)}})("object"===typeof sinon&&sinon);