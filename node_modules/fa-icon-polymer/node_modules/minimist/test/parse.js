var parse=require("../"),test=require("tape");test("parse args",function(t){t.deepEqual(parse(["--no-moo"]),{moo:!1,_:[]},"no");t.deepEqual(parse(["-v","a","-v","b","-v","c"]),{v:["a","b","c"],_:[]},"multi");t.end()});test("comprehensive",function(t){t.deepEqual(parse(["--name=meowmers","bare","-cats","woo","-h","awesome","--multi=quux","--key","value","-b","--bool","--no-meep","--multi=baz","--","--not-a-flag","eek"]),{c:!0,a:!0,t:!0,s:"woo",h:"awesome",b:!0,bool:!0,key:"value",multi:["quux","baz"],meep:!1,name:"meowmers",_:["bare","--not-a-flag","eek"]});t.end()});test("nums",function(t){var argv=parse(["-x","1234","-y","5.67","-z","1e7","-w","10f","--hex","0xdeadbeef","789"]);t.deepEqual(argv,{x:1234,y:5.67,z:1e7,w:"10f",hex:3735928559,_:[789]});t.deepEqual(typeof argv.x,"number");t.deepEqual(typeof argv.y,"number");t.deepEqual(typeof argv.z,"number");t.deepEqual(typeof argv.w,"string");t.deepEqual(typeof argv.hex,"number");t.deepEqual(typeof argv._[0],"number");t.end()});test("flag boolean",function(t){var argv=parse(["-t","moo"],{boolean:"t"});t.deepEqual(argv,{t:!0,_:["moo"]});t.deepEqual(typeof argv.t,"boolean");t.end()});test("flag boolean value",function(t){var argv=parse(["--verbose","false","moo","-t","true"],{boolean:["t","verbose"],default:{verbose:!0}});t.deepEqual(argv,{verbose:!1,t:!0,_:["moo"]});t.deepEqual(typeof argv.verbose,"boolean");t.deepEqual(typeof argv.t,"boolean");t.end()});test("flag boolean default false",function(t){var argv=parse(["moo"],{boolean:["t","verbose"],default:{verbose:!1,t:!1}});t.deepEqual(argv,{verbose:!1,t:!1,_:["moo"]});t.deepEqual(typeof argv.verbose,"boolean");t.deepEqual(typeof argv.t,"boolean");t.end()});test("boolean groups",function(t){var argv=parse(["-x","-z","one","two","three"],{boolean:["x","y","z"]});t.deepEqual(argv,{x:!0,y:!1,z:!0,_:["one","two","three"]});t.deepEqual(typeof argv.x,"boolean");t.deepEqual(typeof argv.y,"boolean");t.deepEqual(typeof argv.z,"boolean");t.end()});test("newlines in params",function(t){var args=parse(["-s","X\nX"]);t.deepEqual(args,{_:[],s:"X\nX"});args=parse(["--s=X\nX"]);t.deepEqual(args,{_:[],s:"X\nX"});t.end()});test("strings",function(t){var s=parse(["-s","0001234"],{string:"s"}).s;t.equal(s,"0001234");t.equal(typeof s,"string");var x=parse(["-x","56"],{string:"x"}).x;t.equal(x,"56");t.equal(typeof x,"string");t.end()});test("stringArgs",function(t){var s=parse(["  ","  "],{string:"_"})._;t.same(s.length,2);t.same(typeof s[0],"string");t.same(s[0],"  ");t.same(typeof s[1],"string");t.same(s[1],"  ");t.end()});test("empty strings",function(t){var s=parse(["-s"],{string:"s"}).s;t.equal(s,"");t.equal(typeof s,"string");var str=parse(["--str"],{string:"str"}).str;t.equal(str,"");t.equal(typeof str,"string");var letters=parse(["-art"],{string:["a","t"]});t.equal(letters.a,"");t.equal(letters.r,!0);t.equal(letters.t,"");t.end()});test("slashBreak",function(t){t.same(parse(["-I/foo/bar/baz"]),{I:"/foo/bar/baz",_:[]});t.same(parse(["-xyz/foo/bar/baz"]),{x:!0,y:!0,z:"/foo/bar/baz",_:[]});t.end()});test("alias",function(t){var argv=parse(["-f","11","--zoom","55"],{alias:{z:"zoom"}});t.equal(argv.zoom,55);t.equal(argv.z,argv.zoom);t.equal(argv.f,11);t.end()});test("multiAlias",function(t){var argv=parse(["-f","11","--zoom","55"],{alias:{z:["zm","zoom"]}});t.equal(argv.zoom,55);t.equal(argv.z,argv.zoom);t.equal(argv.z,argv.zm);t.equal(argv.f,11);t.end()});test("nested dotted objects",function(t){var argv=parse(["--foo.bar","3","--foo.baz","4","--foo.quux.quibble","5","--foo.quux.o_O","--beep.boop"]);t.same(argv.foo,{bar:3,baz:4,quux:{quibble:5,o_O:!0}});t.same(argv.beep,{boop:!0});t.end()});test("boolean and alias with chainable api",function(t){var aliased=["-h","derp"],regular=["--herp","derp"],opts={herp:{alias:"h",boolean:!0}},aliasedArgv=parse(aliased,{boolean:"herp",alias:{h:"herp"}}),propertyArgv=parse(regular,{boolean:"herp",alias:{h:"herp"}}),expected={herp:!0,h:!0,_:["derp"]};t.same(aliasedArgv,expected);t.same(propertyArgv,expected);t.end()});test("boolean and alias with options hash",function(t){var aliased=["-h","derp"],regular=["--herp","derp"],opts={alias:{h:"herp"},boolean:"herp"},aliasedArgv=parse(aliased,opts),propertyArgv=parse(regular,opts),expected={herp:!0,h:!0,_:["derp"]};t.same(aliasedArgv,expected);t.same(propertyArgv,expected);t.end()});test("boolean and alias using explicit true",function(t){var aliased=["-h","true"],regular=["--herp","true"],opts={alias:{h:"herp"},boolean:"h"},aliasedArgv=parse(aliased,opts),propertyArgv=parse(regular,opts),expected={herp:!0,h:!0,_:[]};t.same(aliasedArgv,expected);t.same(propertyArgv,expected);t.end()});test("boolean and --x=true",function(t){var parsed=parse(["--boool","--other=true"],{boolean:"boool"});t.same(parsed.boool,!0);t.same(parsed.other,"true");parsed=parse(["--boool","--other=false"],{boolean:"boool"});t.same(parsed.boool,!0);t.same(parsed.other,"false");t.end()});