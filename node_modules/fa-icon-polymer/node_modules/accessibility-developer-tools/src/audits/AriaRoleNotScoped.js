goog.require("axs.AuditRules");goog.require("axs.browserUtils");goog.require("axs.constants");goog.require("axs.dom");goog.require("axs.utils");axs.AuditRules.addRule({name:"ariaRoleNotScoped",heading:"Elements with ARIA roles must be in the correct scope",url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_09",severity:axs.constants.Severity.SEVERE,relevantElementMatcher:function(element){return axs.browserUtils.matchSelector(element,"[role]")},test:function(element){var elementRole=axs.utils.getRoles(element);if(!elementRole||!elementRole.applied)return!1;var appliedRole=elementRole.applied,ariaRole=appliedRole.details,requiredScope=ariaRole.scope;if(!requiredScope||0===requiredScope.length){return!1}var parent=element;while(parent=axs.dom.parentElement(parent)){var parentRole=axs.utils.getRoles(parent,!0);if(parentRole&&parentRole.applied){var appliedParentRole=parentRole.applied;if(0<=requiredScope.indexOf(appliedParentRole.name))return!1}}var owners=axs.utils.getAriaIdReferrers(element,"aria-owns");if(owners){for(var i=0,ownerRole;i<owners.length;i++){ownerRole=axs.utils.getRoles(owners[i],!0);if(ownerRole&&ownerRole.applied&&0<=requiredScope.indexOf(ownerRole.applied.name))return!1}}return!0},code:"AX_ARIA_09"});