goog.provide("goog.labs.net.webChannel.BaseTestChannel");goog.require("goog.labs.net.webChannel.Channel");goog.require("goog.labs.net.webChannel.ChannelRequest");goog.require("goog.labs.net.webChannel.WebChannelDebug");goog.require("goog.labs.net.webChannel.requestStats");goog.require("goog.labs.net.webChannel.requestStats.Stat");goog.require("goog.net.WebChannel");goog.labs.net.webChannel.BaseTestChannel=function(channel,channelDebug){this.channel_=channel;this.channelDebug_=channelDebug;this.extraHeaders_=null;this.request_=null;this.receivedIntermediateResult_=!1;this.path_=null;this.lastStatusCode_=-1;this.hostPrefix_=null;this.clientProtocol_=null};goog.scope(function(){var WebChannel=goog.net.WebChannel,BaseTestChannel=goog.labs.net.webChannel.BaseTestChannel,WebChannelDebug=goog.labs.net.webChannel.WebChannelDebug,ChannelRequest=goog.labs.net.webChannel.ChannelRequest,requestStats=goog.labs.net.webChannel.requestStats,Channel=goog.labs.net.webChannel.Channel;BaseTestChannel.State_={INIT:0,CONNECTION_TESTING:1};BaseTestChannel.prototype.state_=null;BaseTestChannel.prototype.setExtraHeaders=function(extraHeaders){this.extraHeaders_=extraHeaders};BaseTestChannel.prototype.connect=function(path){this.path_=path;var sendDataUri=this.channel_.getForwardChannelUri(this.path_);requestStats.notifyStatEvent(requestStats.Stat.TEST_STAGE_ONE_START);var handshakeResult=this.channel_.getConnectionState().handshakeResult;if(goog.isDefAndNotNull(handshakeResult)){this.hostPrefix_=this.channel_.correctHostPrefix(handshakeResult[0]);this.state_=BaseTestChannel.State_.CONNECTION_TESTING;this.checkBufferingProxy_();return}sendDataUri.setParameterValues("MODE","init");if(this.channel_.getHttpSessionIdParam()){sendDataUri.setParameterValues(WebChannel.X_HTTP_SESSION_ID,this.channel_.getHttpSessionIdParam())}this.request_=ChannelRequest.createChannelRequest(this,this.channelDebug_);this.request_.setExtraHeaders(this.extraHeaders_);this.request_.xmlHttpGet(sendDataUri,!1,null,!0);this.state_=BaseTestChannel.State_.INIT};BaseTestChannel.prototype.checkBufferingProxy_=function(){this.channelDebug_.debug("TestConnection: starting stage 2");var bufferingProxyResult=this.channel_.getConnectionState().bufferingProxyResult;if(goog.isDefAndNotNull(bufferingProxyResult)){this.channelDebug_.debug("TestConnection: skipping stage 2, precomputed result is "+bufferingProxyResult?"Buffered":"Unbuffered");requestStats.notifyStatEvent(requestStats.Stat.TEST_STAGE_TWO_START);if(bufferingProxyResult){requestStats.notifyStatEvent(requestStats.Stat.PROXY);this.channel_.testConnectionFinished(this,!1)}else{requestStats.notifyStatEvent(requestStats.Stat.NOPROXY);this.channel_.testConnectionFinished(this,!0)}return}this.request_=ChannelRequest.createChannelRequest(this,this.channelDebug_);this.request_.setExtraHeaders(this.extraHeaders_);var recvDataUri=this.channel_.getBackChannelUri(this.hostPrefix_,this.path_);requestStats.notifyStatEvent(requestStats.Stat.TEST_STAGE_TWO_START);recvDataUri.setParameterValues("TYPE","xmlhttp");var param=this.channel_.getHttpSessionIdParam(),value=this.channel_.getHttpSessionId();if(param&&value){recvDataUri.setParameterValue(param,value)}this.request_.xmlHttpGet(recvDataUri,!1,this.hostPrefix_,!1)};BaseTestChannel.prototype.createXhrIo=function(hostPrefix){return this.channel_.createXhrIo(hostPrefix)};BaseTestChannel.prototype.abort=function(){if(this.request_){this.request_.cancel();this.request_=null}this.lastStatusCode_=-1};BaseTestChannel.prototype.isClosed=function(){return!1};BaseTestChannel.prototype.onRequestData=function(req,responseText){this.lastStatusCode_=req.getLastStatusCode();if(this.state_==BaseTestChannel.State_.INIT){this.channelDebug_.debug("TestConnection: Got data for stage 1");this.applyControlHeaders_(req);if(!responseText){this.channelDebug_.debug("TestConnection: Null responseText");this.channel_.testConnectionFailure(this,ChannelRequest.Error.BAD_DATA);return}try{var channel=this.channel_,respArray=channel.getWireCodec().decodeMessage(responseText)}catch(e){this.channelDebug_.dumpException(e);this.channel_.testConnectionFailure(this,ChannelRequest.Error.BAD_DATA);return}this.hostPrefix_=this.channel_.correctHostPrefix(respArray[0])}else if(this.state_==BaseTestChannel.State_.CONNECTION_TESTING){if(this.receivedIntermediateResult_){requestStats.notifyStatEvent(requestStats.Stat.TEST_STAGE_TWO_DATA_TWO)}else{if("11111"==responseText){requestStats.notifyStatEvent(requestStats.Stat.TEST_STAGE_TWO_DATA_ONE);this.receivedIntermediateResult_=!0;if(this.checkForEarlyNonBuffered_()){this.lastStatusCode_=200;this.request_.cancel();this.channelDebug_.debug("Test connection succeeded; using streaming connection");requestStats.notifyStatEvent(requestStats.Stat.NOPROXY);this.channel_.testConnectionFinished(this,!0)}}else{requestStats.notifyStatEvent(requestStats.Stat.TEST_STAGE_TWO_DATA_BOTH);this.receivedIntermediateResult_=!1}}}};BaseTestChannel.prototype.onRequestComplete=function(req){this.lastStatusCode_=this.request_.getLastStatusCode();if(!this.request_.getSuccess()){this.channelDebug_.debug("TestConnection: request failed, in state "+this.state_);if(this.state_==BaseTestChannel.State_.INIT){requestStats.notifyStatEvent(requestStats.Stat.TEST_STAGE_ONE_FAILED)}else if(this.state_==BaseTestChannel.State_.CONNECTION_TESTING){requestStats.notifyStatEvent(requestStats.Stat.TEST_STAGE_TWO_FAILED)}this.channel_.testConnectionFailure(this,this.request_.getLastError());return}if(this.state_==BaseTestChannel.State_.INIT){this.state_=BaseTestChannel.State_.CONNECTION_TESTING;this.channelDebug_.debug("TestConnection: request complete for initial check");this.checkBufferingProxy_()}else if(this.state_==BaseTestChannel.State_.CONNECTION_TESTING){this.channelDebug_.debug("TestConnection: request complete for stage 2");var goodConn=this.receivedIntermediateResult_;if(goodConn){this.channelDebug_.debug("Test connection succeeded; using streaming connection");requestStats.notifyStatEvent(requestStats.Stat.NOPROXY);this.channel_.testConnectionFinished(this,!0)}else{this.channelDebug_.debug("Test connection failed; not using streaming");requestStats.notifyStatEvent(requestStats.Stat.PROXY);this.channel_.testConnectionFinished(this,!1)}}};BaseTestChannel.prototype.applyControlHeaders_=function(req){var xhr=req.getXhr();if(xhr){var protocolHeader=xhr.getStreamingResponseHeader(WebChannel.X_CLIENT_WIRE_PROTOCOL);this.clientProtocol_=protocolHeader?protocolHeader:null;if(this.channel_.getHttpSessionIdParam()){var httpSessionIdHeader=xhr.getStreamingResponseHeader(WebChannel.X_HTTP_SESSION_ID);if(httpSessionIdHeader){this.channel_.setHttpSessionId(httpSessionIdHeader)}else{this.channelDebug_.warning("Missing X_HTTP_SESSION_ID in the handshake response")}}}};BaseTestChannel.prototype.getClientProtocol=function(){return this.clientProtocol_};BaseTestChannel.prototype.getLastStatusCode=function(){return this.lastStatusCode_};BaseTestChannel.prototype.shouldUseSecondaryDomains=function(){return this.channel_.shouldUseSecondaryDomains()};BaseTestChannel.prototype.isActive=function(){return this.channel_.isActive()};BaseTestChannel.prototype.checkForEarlyNonBuffered_=function(){return ChannelRequest.supportsXhrStreaming()};BaseTestChannel.prototype.getForwardChannelUri=goog.abstractMethod;BaseTestChannel.prototype.getBackChannelUri=goog.abstractMethod;BaseTestChannel.prototype.correctHostPrefix=goog.abstractMethod;BaseTestChannel.prototype.createDataUri=goog.abstractMethod;BaseTestChannel.prototype.testConnectionFinished=goog.abstractMethod;BaseTestChannel.prototype.testConnectionFailure=goog.abstractMethod;BaseTestChannel.prototype.getConnectionState=goog.abstractMethod;BaseTestChannel.prototype.setHttpSessionIdParam=goog.abstractMethod;BaseTestChannel.prototype.getHttpSessionIdParam=goog.abstractMethod;BaseTestChannel.prototype.setHttpSessionId=goog.abstractMethod;BaseTestChannel.prototype.getHttpSessionId=goog.abstractMethod});