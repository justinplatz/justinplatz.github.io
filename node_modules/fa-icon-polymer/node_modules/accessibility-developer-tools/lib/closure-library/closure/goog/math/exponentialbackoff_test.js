goog.provide("goog.math.ExponentialBackoffTest");goog.setTestOnly("goog.math.ExponentialBackoffTest");goog.require("goog.math.ExponentialBackoff");goog.require("goog.testing.jsunit");var INITIAL_VALUE=1,MAX_VALUE=10;function assertValueAndCounts(value,backoffCount,decayCount,backoff){assertEquals("Wrong value",value,backoff.getValue());assertEquals("Wrong backoff count",backoffCount,backoff.getBackoffCount());assertEquals("Wrong decay count",decayCount,backoff.getDecayCount())}function assertValueAndBackoffCount(value,count,backoff){assertEquals("Wrong value",value,backoff.getValue());assertEquals("Wrong backoff count",count,backoff.getBackoffCount())}function assertValueAndDecayCount(value,count,backoff){assertEquals("Wrong value",value,backoff.getValue());assertEquals("Wrong decay count",count,backoff.getDecayCount())}function assertValueRangeAndBackoffCount(minBackoffValue,maxBackoffValue,count,backoff){assertTrue("Value too small",backoff.getValue()>=minBackoffValue);assertTrue("Value too large",backoff.getValue()<=maxBackoffValue);assertEquals("Wrong backoff count",count,backoff.getBackoffCount())}function assertValueRangeAndDecayCount(minBackoffValue,maxBackoffValue,count,backoff){assertTrue("Value too small",backoff.getValue()>=minBackoffValue);assertTrue("Value too large",backoff.getValue()<=maxBackoffValue);assertEquals("Wrong decay count",count,backoff.getDecayCount())}function getMinBackoff(baseValue,randomFactor){return Math.round(baseValue-baseValue*randomFactor)}function getMaxBackoff(baseValue,randomFactor){return Math.round(baseValue+baseValue*randomFactor)}function createBackoff(){return new goog.math.ExponentialBackoff(INITIAL_VALUE,MAX_VALUE)}function testInitialState(){var backoff=createBackoff();assertValueAndCounts(INITIAL_VALUE,0,0,backoff)}function testBackoff(){var backoff=createBackoff();backoff.backoff();assertValueAndBackoffCount(2,1,backoff);backoff.backoff();assertValueAndBackoffCount(4,2,backoff);backoff.backoff();assertValueAndBackoffCount(8,3,backoff);backoff.backoff();assertValueAndBackoffCount(MAX_VALUE,4,backoff);backoff.backoff();assertValueAndBackoffCount(MAX_VALUE,5,backoff)}function testReset(){var backoff=createBackoff();backoff.backoff();backoff.decay();backoff.reset();assertValueAndCounts(INITIAL_VALUE,0,0,backoff);backoff.backoff();assertValueAndCounts(2,1,0,backoff);backoff.decay();assertValueAndCounts(INITIAL_VALUE,1,1,backoff)}function testRandomFactorBackoff(){var initialValue=1,maxValue=20,randomFactor=.5,backoff=new goog.math.ExponentialBackoff(initialValue,maxValue,randomFactor);assertValueAndBackoffCount(initialValue,0,backoff);backoff.backoff();assertValueRangeAndBackoffCount(getMinBackoff(2,randomFactor),getMaxBackoff(2,randomFactor),1,backoff);backoff.backoff();assertValueRangeAndBackoffCount(getMinBackoff(4,randomFactor),getMaxBackoff(4,randomFactor),2,backoff);backoff.backoff();assertValueRangeAndBackoffCount(getMinBackoff(8,randomFactor),getMaxBackoff(8,randomFactor),3,backoff);backoff.backoff();assertValueRangeAndBackoffCount(getMinBackoff(16,randomFactor),maxValue,4,backoff);backoff.backoff();assertValueRangeAndBackoffCount(getMinBackoff(maxValue,randomFactor),maxValue,5,backoff)}function testRandomFactorDecay(){var initialValue=1,maxValue=8,randomFactor=.5,backoff=new goog.math.ExponentialBackoff(initialValue,maxValue,randomFactor);backoff.backoff();backoff.backoff();backoff.backoff();backoff.backoff();backoff.backoff();assertValueRangeAndBackoffCount(getMinBackoff(maxValue,randomFactor),maxValue,5,backoff);backoff.decay();assertValueRangeAndDecayCount(getMinBackoff(4,randomFactor),getMaxBackoff(4,randomFactor),1,backoff);backoff.decay();assertValueRangeAndDecayCount(getMinBackoff(2,randomFactor),getMaxBackoff(2,randomFactor),2,backoff);backoff.decay();assertValueRangeAndDecayCount(initialValue,getMaxBackoff(initialValue,randomFactor),3,backoff)}function testBackoffFactor(){var initialValue=1,maxValue=30,randomFactor=void 0,backoffFactor=3,backoff=new goog.math.ExponentialBackoff(initialValue,maxValue,randomFactor,backoffFactor);backoff.backoff();assertValueAndBackoffCount(3,1,backoff);backoff.backoff();assertValueAndBackoffCount(9,2,backoff);backoff.backoff();assertValueAndBackoffCount(27,3,backoff);backoff.backoff();assertValueAndBackoffCount(maxValue,4,backoff);backoff.backoff();assertValueAndBackoffCount(maxValue,5,backoff)}function testDecayFactor(){var initialValue=1,maxValue=27,randomFactor=void 0,backoffFactor=void 0,decayFactor=3,backoff=new goog.math.ExponentialBackoff(initialValue,maxValue,randomFactor,backoffFactor,decayFactor);backoff.backoff();backoff.backoff();backoff.backoff();backoff.backoff();backoff.backoff();assertValueAndCounts(maxValue,5,0,backoff);backoff.decay();assertValueAndDecayCount(9,1,backoff);backoff.decay();assertValueAndDecayCount(3,2,backoff);backoff.decay();assertValueAndDecayCount(initialValue,3,backoff);backoff.decay();assertValueAndDecayCount(initialValue,4,backoff)}