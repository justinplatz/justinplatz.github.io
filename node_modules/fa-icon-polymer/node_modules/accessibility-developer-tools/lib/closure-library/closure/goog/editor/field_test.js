goog.provide("goog.editor.field_test");goog.require("goog.array");goog.require("goog.dom");goog.require("goog.dom.Range");goog.require("goog.dom.TagName");goog.require("goog.dom.classlist");goog.require("goog.editor.BrowserFeature");goog.require("goog.editor.Field");goog.require("goog.editor.Plugin");goog.require("goog.editor.range");goog.require("goog.events");goog.require("goog.events.BrowserEvent");goog.require("goog.events.EventType");goog.require("goog.events.KeyCodes");goog.require("goog.functions");goog.require("goog.testing.LooseMock");goog.require("goog.testing.MockClock");goog.require("goog.testing.dom");goog.require("goog.testing.events");goog.require("goog.testing.events.Event");goog.require("goog.testing.recordFunction");goog.require("goog.userAgent");goog.setTestOnly("Tests for goog.editor.*Field");var FieldConstructor,HTML="<div id=\"testField\">I am text.</div>";function setUp(){goog.dom.getElement("parent").innerHTML=HTML;assertTrue("FieldConstructor should be set by the test HTML file",goog.isFunction(FieldConstructor))}function tearDown(){try{}catch(e){}}function TestPlugin(){TestPlugin.base(this,"constructor");this.getTrogClassId=function(){return"TestPlugin"};this.handleKeyDown=goog.nullFunction;this.handleKeyPress=goog.nullFunction;this.handleKeyUp=goog.nullFunction;this.handleKeyboardShortcut=goog.nullFunction;this.isSupportedCommand=goog.nullFunction;this.execCommandInternal=goog.nullFunction;this.queryCommandValue=goog.nullFunction;this.activeOnUneditableFields=goog.nullFunction;this.handleSelectionChange=goog.nullFunction}goog.inherits(TestPlugin,goog.editor.Plugin);function testRegisterPlugin(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin;editableField.registerPlugin(plugin);assertEquals("Registered plugin must be in protected plugin map.",plugin,editableField.plugins_[plugin.getTrogClassId()]);assertEquals("Plugin has a keydown handler, should be in keydown map",plugin,editableField.indexedPlugins_[goog.editor.Plugin.Op.KEYDOWN][0]);assertEquals("Plugin has a keypress handler, should be in keypress map",plugin,editableField.indexedPlugins_[goog.editor.Plugin.Op.KEYPRESS][0]);assertEquals("Plugin has a keyup handler, should be in keuup map",plugin,editableField.indexedPlugins_[goog.editor.Plugin.Op.KEYUP][0]);assertEquals("Plugin has a selectionchange handler, should be in selectionchange map",plugin,editableField.indexedPlugins_[goog.editor.Plugin.Op.SELECTION][0]);assertEquals("Plugin has a shortcut handler, should be in shortcut map",plugin,editableField.indexedPlugins_[goog.editor.Plugin.Op.SHORTCUT][0]);assertEquals("Plugin has a execCommand, should be in execCommand map",plugin,editableField.indexedPlugins_[goog.editor.Plugin.Op.EXEC_COMMAND][0]);assertEquals("Plugin has a queryCommand, should be in queryCommand map",plugin,editableField.indexedPlugins_[goog.editor.Plugin.Op.QUERY_COMMAND][0]);assertEquals("Plugin does not have a prepareContentsHtml,"+"should not be in prepareContentsHtml map",void 0,editableField.indexedPlugins_[goog.editor.Plugin.Op.PREPARE_CONTENTS_HTML][0]);assertEquals("Plugin does not have a cleanContentsDom,"+"should not be in cleanContentsDom map",void 0,editableField.indexedPlugins_[goog.editor.Plugin.Op.CLEAN_CONTENTS_DOM][0]);assertEquals("Plugin does not have a cleanContentsHtml,"+"should not be in cleanContentsHtml map",void 0,editableField.indexedPlugins_[goog.editor.Plugin.Op.CLEAN_CONTENTS_HTML][0]);editableField.dispose()}function testUnregisterPlugin(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin;editableField.registerPlugin(plugin);editableField.unregisterPlugin(plugin);assertUndefined("Unregistered plugin must not be in protected plugin map.",editableField.plugins_[plugin.getTrogClassId()]);editableField.dispose()}function testGetPluginByClassId(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin;assertUndefined("Must not be able to get unregistered plugins by class id.",editableField.getPluginByClassId(plugin.getTrogClassId()));editableField.registerPlugin(plugin);assertEquals("Must be able to get registered plugins by class id.",plugin,editableField.getPluginByClassId(plugin.getTrogClassId()));editableField.dispose()}function testDisposed_PluginAutoDispose(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,noDisposePlugin=new goog.editor.Plugin;noDisposePlugin.getTrogClassId=function(){return"noDisposeId"};noDisposePlugin.setAutoDispose(!1);editableField.registerPlugin(plugin);editableField.registerPlugin(noDisposePlugin);editableField.dispose();assert(editableField.isDisposed());assertTrue(plugin.isDisposed());assertFalse(noDisposePlugin.isDisposed())}var STRING_KEY=String.fromCharCode(goog.events.KeyCodes.A).toLowerCase();function getBrowserEvent(){var e=new goog.events.BrowserEvent;e.ctrlKey=!0;e.metaKey=!0;e.charCode=goog.events.KeyCodes.A;return e}function createEditableFieldWithListeners(followLinkInNewWindow){var editableField=new FieldConstructor("testField");editableField.setFollowLinkInNewWindow(followLinkInNewWindow);var originalElement=editableField.getOriginalElement();editableField.setupFieldObject(originalElement);editableField.handleFieldLoad();return editableField}function getListenerTarget(editableField){var elt=editableField.getElement(),listenerTarget=goog.editor.BrowserFeature.USE_DOCUMENT_FOR_KEY_EVENTS&&editableField.usesIframe()?elt.ownerDocument:elt;return listenerTarget}function assertClickDefaultActionIsCanceled(editableField){var cancelClickDefaultActionListener=goog.events.getListener(getListenerTarget(editableField),goog.events.EventType.CLICK,goog.editor.Field.cancelLinkClick_,void 0,editableField);assertNotNull(cancelClickDefaultActionListener)}function assertClickDefaultActionIsNotCanceled(editableField){var cancelClickDefaultActionListener=goog.events.getListener(getListenerTarget(editableField),goog.events.EventType.CLICK,goog.editor.Field.cancelLinkClick_,void 0,editableField);assertNull(cancelClickDefaultActionListener)}function testMakeUneditableDisablesPlugins(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,calls=0;plugin.disable=function(field){assertEquals(editableField,field);assertTrue(field.isUneditable());calls++};editableField.registerPlugin(plugin);editableField.makeEditable();assertEquals(0,calls);editableField.makeUneditable();assertEquals(1,calls);editableField.dispose()}function testClickDefaultActionIsCanceledWhenBrowserFollowsClick(){var editableField=createEditableFieldWithListeners(!0);assertClickDefaultActionIsCanceled(editableField);editableField.dispose()}function testClickDefaultActionIsNotCanceledWhenBrowserDontFollowsClick(){var editableField=createEditableFieldWithListeners(!1);assertClickDefaultActionIsNotCanceled(editableField);editableField.dispose()}function testPluginKeyUp(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,e=getBrowserEvent(),mockPlugin=new goog.testing.LooseMock(plugin);mockPlugin.getTrogClassId().$returns("mockPlugin");mockPlugin.registerFieldObject(editableField);mockPlugin.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin.handleKeyUp(e);mockPlugin.$replay();editableField.registerPlugin(mockPlugin);editableField.handleKeyUp_(e);mockPlugin.$verify()}function testPluginKeyDown(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,e=getBrowserEvent(),mockPlugin=new goog.testing.LooseMock(plugin);mockPlugin.getTrogClassId().$returns("mockPlugin");mockPlugin.registerFieldObject(editableField);mockPlugin.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin.handleKeyDown(e).$returns(!0);mockPlugin.$replay();editableField.registerPlugin(mockPlugin);editableField.handleKeyDown_(e);mockPlugin.$verify()}function testPluginKeyPress(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,e=getBrowserEvent(),mockPlugin=new goog.testing.LooseMock(plugin);mockPlugin.getTrogClassId().$returns("mockPlugin");mockPlugin.registerFieldObject(editableField);mockPlugin.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin.handleKeyPress(e).$returns(!0);mockPlugin.$replay();editableField.registerPlugin(mockPlugin);editableField.handleKeyPress_(e);mockPlugin.$verify()}function testHandledKeyEvent(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,e=getBrowserEvent(),mockPlugin1=new goog.testing.LooseMock(plugin);mockPlugin1.getTrogClassId().$returns("mockPlugin1");mockPlugin1.registerFieldObject(editableField);mockPlugin1.isEnabled(editableField).$anyTimes().$returns(!0);if(goog.editor.BrowserFeature.USES_KEYDOWN){mockPlugin1.handleKeyDown(e).$returns(!0)}else{mockPlugin1.handleKeyPress(e).$returns(!0)}mockPlugin1.handleKeyUp(e).$returns(!0);mockPlugin1.$replay();var mockPlugin2=new goog.testing.LooseMock(plugin);mockPlugin2.getTrogClassId().$returns("mockPlugin2");mockPlugin2.registerFieldObject(editableField);mockPlugin2.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin2.$replay();editableField.registerPlugin(mockPlugin1);editableField.registerPlugin(mockPlugin2);editableField.handleKeyUp_(e);if(goog.editor.BrowserFeature.USES_KEYDOWN){editableField.handleKeyDown_(e)}else{editableField.handleKeyPress_(e)}mockPlugin1.$verify();mockPlugin2.$verify()}function testHandleCutAndPasteEvents(){if(goog.editor.BrowserFeature.USE_MUTATION_EVENTS){return}var editableField=new FieldConstructor("testField"),clock=new goog.testing.MockClock(!0),delayedChanges=goog.testing.recordFunction();goog.events.listen(editableField,goog.editor.Field.EventType.DELAYEDCHANGE,delayedChanges);editableField.makeEditable();goog.testing.events.fireBrowserEvent(new goog.testing.events.Event("cut",editableField.getElement()));assertEquals("Cut event should be on a timer",0,delayedChanges.getCallCount());clock.tick(1e3);assertEquals("delayed change event should fire within 1s after cut",1,delayedChanges.getCallCount());goog.testing.events.fireBrowserEvent(new goog.testing.events.Event("paste",editableField.getElement()));assertEquals("Paste event should be on a timer",1,delayedChanges.getCallCount());clock.tick(1e3);assertEquals("delayed change event should fire within 1s after paste",2,delayedChanges.getCallCount());clock.dispose();editableField.dispose()}function testNotHandledKeyEvent(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,e=getBrowserEvent(),mockPlugin1=new goog.testing.LooseMock(plugin);mockPlugin1.getTrogClassId().$returns("mockPlugin1");mockPlugin1.registerFieldObject(editableField);mockPlugin1.isEnabled(editableField).$anyTimes().$returns(!0);if(goog.editor.BrowserFeature.USES_KEYDOWN){mockPlugin1.handleKeyDown(e).$returns(!1)}else{mockPlugin1.handleKeyPress(e).$returns(!1)}mockPlugin1.handleKeyUp(e).$returns(!1);mockPlugin1.$replay();var mockPlugin2=new goog.testing.LooseMock(plugin);mockPlugin2.getTrogClassId().$returns("mockPlugin2");mockPlugin2.registerFieldObject(editableField);mockPlugin2.isEnabled(editableField).$anyTimes().$returns(!0);if(goog.editor.BrowserFeature.USES_KEYDOWN){mockPlugin2.handleKeyDown(e).$returns(!0)}else{mockPlugin2.handleKeyPress(e).$returns(!0)}mockPlugin2.handleKeyUp(e).$returns(!0);mockPlugin2.$replay();editableField.registerPlugin(mockPlugin1);editableField.registerPlugin(mockPlugin2);editableField.handleKeyUp_(e);if(goog.editor.BrowserFeature.USES_KEYDOWN){editableField.handleKeyDown_(e)}else{editableField.handleKeyPress_(e)}mockPlugin1.$verify();mockPlugin2.$verify()}function testKeyboardShortcutCalled(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,e=getBrowserEvent(),mockPlugin=new goog.testing.LooseMock(plugin);mockPlugin.getTrogClassId().$returns("mockPlugin");mockPlugin.registerFieldObject(editableField);mockPlugin.isEnabled(editableField).$anyTimes().$returns(!0);if(goog.editor.BrowserFeature.USES_KEYDOWN){mockPlugin.handleKeyDown(e).$returns(!1)}else{mockPlugin.handleKeyPress(e).$returns(!1)}mockPlugin.handleKeyboardShortcut(e,STRING_KEY,!0).$returns(!1);mockPlugin.$replay();editableField.registerPlugin(mockPlugin);if(goog.editor.BrowserFeature.USES_KEYDOWN){editableField.handleKeyDown_(e)}else{editableField.handleKeyPress_(e)}mockPlugin.$verify()}function testKeyboardShortcutNotCalled(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,e=getBrowserEvent(),mockPlugin=new goog.testing.LooseMock(plugin);mockPlugin.getTrogClassId().$returns("mockPlugin");mockPlugin.registerFieldObject(editableField);mockPlugin.isEnabled(editableField).$anyTimes().$returns(!0);if(goog.editor.BrowserFeature.USES_KEYDOWN){mockPlugin.handleKeyDown(e).$returns(!0)}else{mockPlugin.handleKeyPress(e).$returns(!0)}mockPlugin.$replay();editableField.registerPlugin(mockPlugin);if(goog.editor.BrowserFeature.USES_KEYDOWN){editableField.handleKeyDown_(e)}else{editableField.handleKeyPress_(e)}mockPlugin.$verify()}function testKeyHandlingAlt(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,e=getBrowserEvent();e.altKey=!0;var mockPlugin=new goog.testing.LooseMock(plugin);mockPlugin.getTrogClassId().$returns("mockPlugin");mockPlugin.registerFieldObject(editableField);mockPlugin.isEnabled(editableField).$anyTimes().$returns(!0);if(goog.editor.BrowserFeature.USES_KEYDOWN){mockPlugin.handleKeyDown(e).$returns(!1)}else{mockPlugin.handleKeyPress(e).$returns(!1)}mockPlugin.$replay();editableField.registerPlugin(mockPlugin);if(goog.editor.BrowserFeature.USES_KEYDOWN){editableField.handleKeyDown_(e)}else{editableField.handleKeyPress_(e)}mockPlugin.$verify()}function testPluginExecCommand(){var plugin=new TestPlugin,passedCommand,passedArg;plugin.execCommand=function(command,arg){passedCommand=command;passedArg=arg};var editableField=new FieldConstructor("testField");editableField.registerPlugin(plugin);plugin.enable(editableField);plugin.isSupportedCommand=goog.functions.constant(!0);editableField.execCommand("+indent",!0);assertEquals("+indent",passedCommand);assertTrue(passedArg);passedCommand=null;passedArg=null;plugin.isSupportedCommand=goog.functions.constant(!1);editableField.execCommand("+outdent",!1);assertNull(passedCommand);assertNull(passedArg);editableField.dispose();plugin.dispose()}function testSupportedExecCommand(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,mockPlugin1=new goog.testing.LooseMock(plugin);mockPlugin1.getTrogClassId().$returns("mockPlugin1");mockPlugin1.registerFieldObject(editableField);mockPlugin1.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin1.isSupportedCommand("+indent").$returns(!0);mockPlugin1.execCommandInternal("+indent").$returns(!0);mockPlugin1.execCommand("+indent").$does(function(){mockPlugin1.execCommandInternal("+indent")});mockPlugin1.$replay();var mockPlugin2=new goog.testing.LooseMock(plugin);mockPlugin2.getTrogClassId().$returns("mockPlugin2");mockPlugin2.registerFieldObject(editableField);mockPlugin2.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin2.$replay();editableField.registerPlugin(mockPlugin1);editableField.registerPlugin(mockPlugin2);editableField.execCommand("+indent");mockPlugin1.$verify();mockPlugin2.$verify()}function testNotSupportedExecCommand(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,mockPlugin1=new goog.testing.LooseMock(plugin);mockPlugin1.getTrogClassId().$returns("mockPlugin1");mockPlugin1.registerFieldObject(editableField);mockPlugin1.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin1.isSupportedCommand("+indent").$returns(!1);mockPlugin1.$replay();var mockPlugin2=new goog.testing.LooseMock(plugin);mockPlugin2.getTrogClassId().$returns("mockPlugin2");mockPlugin2.registerFieldObject(editableField);mockPlugin2.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin2.isSupportedCommand("+indent").$returns(!0);mockPlugin2.execCommandInternal("+indent").$returns(!0);mockPlugin2.execCommand("+indent").$does(function(){mockPlugin2.execCommandInternal("+indent")});mockPlugin2.$replay();editableField.registerPlugin(mockPlugin1);editableField.registerPlugin(mockPlugin2);editableField.execCommand("+indent");mockPlugin1.$verify();mockPlugin2.$verify()}function testSupportedQueryCommand(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,mockPlugin1=new goog.testing.LooseMock(plugin);mockPlugin1.getTrogClassId().$returns("mockPlugin1");mockPlugin1.registerFieldObject(editableField);mockPlugin1.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin1.isSupportedCommand("+indent").$returns(!0);mockPlugin1.queryCommandValue("+indent").$returns(!0);mockPlugin1.activeOnUneditableFields().$returns(!0);mockPlugin1.$replay();var mockPlugin2=new goog.testing.LooseMock(plugin);mockPlugin2.getTrogClassId().$returns("mockPlugin2");mockPlugin2.registerFieldObject(editableField);mockPlugin2.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin2.$replay();editableField.registerPlugin(mockPlugin1);editableField.registerPlugin(mockPlugin2);editableField.queryCommandValue("+indent");mockPlugin1.$verify();mockPlugin2.$verify()}function testNotSupportedQueryCommand(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,mockPlugin1=new goog.testing.LooseMock(plugin);mockPlugin1.getTrogClassId().$returns("mockPlugin1");mockPlugin1.registerFieldObject(editableField);mockPlugin1.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin1.isSupportedCommand("+indent").$returns(!1);mockPlugin1.$replay();var mockPlugin2=new goog.testing.LooseMock(plugin);mockPlugin2.getTrogClassId().$returns("mockPlugin2");mockPlugin2.registerFieldObject(editableField);mockPlugin2.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin2.isSupportedCommand("+indent").$returns(!0);mockPlugin2.queryCommandValue("+indent").$returns(!0);mockPlugin2.activeOnUneditableFields().$returns(!0);mockPlugin2.$replay();editableField.registerPlugin(mockPlugin1);editableField.registerPlugin(mockPlugin2);editableField.queryCommandValue("+indent");mockPlugin1.$verify();mockPlugin2.$verify()}function testHandledSelectionChange(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,e=getBrowserEvent(),mockPlugin1=new goog.testing.LooseMock(plugin);mockPlugin1.getTrogClassId().$returns("mockPlugin1");mockPlugin1.registerFieldObject(editableField);mockPlugin1.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin1.handleSelectionChange(e,void 0).$returns(!0);mockPlugin1.$replay();var mockPlugin2=new goog.testing.LooseMock(plugin);mockPlugin2.getTrogClassId().$returns("mockPlugin2");mockPlugin2.registerFieldObject(editableField);mockPlugin2.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin2.$replay();editableField.registerPlugin(mockPlugin1);editableField.registerPlugin(mockPlugin2);editableField.dispatchSelectionChangeEvent(e);mockPlugin1.$verify();mockPlugin2.$verify()}function testNotHandledSelectionChange(){var editableField=new FieldConstructor("testField"),plugin=new TestPlugin,e=getBrowserEvent(),mockPlugin1=new goog.testing.LooseMock(plugin);mockPlugin1.getTrogClassId().$returns("mockPlugin1");mockPlugin1.registerFieldObject(editableField);mockPlugin1.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin1.handleSelectionChange(e,void 0).$returns(!1);mockPlugin1.$replay();var mockPlugin2=new goog.testing.LooseMock(plugin);mockPlugin2.getTrogClassId().$returns("mockPlugin2");mockPlugin2.registerFieldObject(editableField);mockPlugin2.isEnabled(editableField).$anyTimes().$returns(!0);mockPlugin2.handleSelectionChange(e,void 0).$returns(!0);mockPlugin2.$replay();editableField.registerPlugin(mockPlugin1);editableField.registerPlugin(mockPlugin2);editableField.dispatchSelectionChangeEvent(e);mockPlugin1.$verify();mockPlugin2.$verify()}function testSelectionChange(){var editableField=new FieldConstructor("testField",document),clock=new goog.testing.MockClock(!0),beforeSelectionChanges=goog.testing.recordFunction();goog.events.listen(editableField,goog.editor.Field.EventType.BEFORESELECTIONCHANGE,beforeSelectionChanges);var selectionChanges=goog.testing.recordFunction();goog.events.listen(editableField,goog.editor.Field.EventType.SELECTIONCHANGE,selectionChanges);editableField.makeEditable();editableField.handleKeyUp_({keyCode:goog.events.KeyCodes.LEFT});assertEquals("Before selection change should fire immediately",1,beforeSelectionChanges.getCallCount());assertEquals("Selection change should be on a timer",0,selectionChanges.getCallCount());clock.tick(1e3);assertEquals("Selection change should fire within 1s",1,selectionChanges.getCallCount());editableField.placeCursorAtStart();assertEquals("Selection change should fire",2,selectionChanges.getCallCount());clock.dispose();editableField.dispose()}function testSelectionChangeOnMouseUp(){var fakeEvent=new goog.events.BrowserEvent({type:"mouseup",target:"fakeTarget"}),editableField=new FieldConstructor("testField",document),clock=new goog.testing.MockClock(!0),beforeSelectionChanges=goog.testing.recordFunction();goog.events.listen(editableField,goog.editor.Field.EventType.BEFORESELECTIONCHANGE,beforeSelectionChanges);var selectionChanges=goog.testing.recordFunction();goog.events.listen(editableField,goog.editor.Field.EventType.SELECTIONCHANGE,selectionChanges);var plugin=new TestPlugin;plugin.handleSelectionChange=goog.testing.recordFunction();editableField.registerPlugin(plugin);editableField.makeEditable();editableField.handleMouseUp_(fakeEvent);assertEquals("Before selection change should fire immediately",1,beforeSelectionChanges.getCallCount());assertEquals("Selection change should fire immediately",1,selectionChanges.getCallCount());assertEquals("Plugin should have handled selection change immediately",1,plugin.handleSelectionChange.getCallCount());assertEquals("Plugin should have received original browser event to handle",fakeEvent,plugin.handleSelectionChange.getLastCall().getArguments()[0]);editableField.dispatchSelectionChangeEvent();assertEquals("Second selection change should fire immediately",2,selectionChanges.getCallCount());assertEquals("Plugin should have handled second selection change immediately",2,plugin.handleSelectionChange.getCallCount());var args=plugin.handleSelectionChange.getLastCall().getArguments();assertTrue("Plugin should not have received data from extra firing",0==args.length||!args[0]&&(1==args.length||!args[1]));clock.tick(1e3);if(goog.userAgent.IE){assertEquals("Additional selection change should fire within 1s",3,selectionChanges.getCallCount());assertEquals("Plugin should have handled selection change within 1s",3,plugin.handleSelectionChange.getCallCount());assertEquals("Plugin should have received target of original browser event",fakeEvent.target,plugin.handleSelectionChange.getLastCall().getArguments().pop())}else{assertEquals("No additional selection change should fire",2,selectionChanges.getCallCount());assertEquals("Plugin should not have handled selection change again",2,plugin.handleSelectionChange.getCallCount())}clock.dispose();editableField.dispose()}function testSelectionChangeBeforeUneditable(){var editableField=new FieldConstructor("testField",document),clock=new goog.testing.MockClock(!0),selectionChanges=goog.testing.recordFunction();goog.events.listen(editableField,goog.editor.Field.EventType.SELECTIONCHANGE,selectionChanges);editableField.makeEditable();editableField.handleKeyUp_({keyCode:goog.events.KeyCodes.LEFT});assertEquals("Selection change should be on a timer",0,selectionChanges.getCallCount());editableField.makeUneditable();assertEquals("Selection change should fire during make uneditable",1,selectionChanges.getCallCount());clock.tick(1e3);assertEquals("No additional selection change should fire",1,selectionChanges.getCallCount());clock.dispose();editableField.dispose()}function testGetEditableDomHelper(){var editableField=new FieldConstructor("testField",document);assertNull("Before being made editable, we do not know the dom helper",editableField.getEditableDomHelper());editableField.makeEditable();assertNotNull("After being made editable, we know the dom helper",editableField.getEditableDomHelper());assertEquals("Document from domHelper should be the editable elements doc",goog.dom.getOwnerDocument(editableField.getElement()),editableField.getEditableDomHelper().getDocument());editableField.dispose()}function testQueryCommandValue(){var editableField=new FieldConstructor("testField",document);assertFalse(editableField.queryCommandValue("boo"));assertObjectEquals({boo:!1,aieee:!1},editableField.queryCommandValue(["boo","aieee"]));editableField.makeEditable();assertFalse(editableField.queryCommandValue("boo"));focusFieldSync(editableField);assertNull(editableField.queryCommandValue("boo"));assertObjectEquals({boo:null,aieee:null},editableField.queryCommandValue(["boo","aieee"]));editableField.dispose()}function focusFieldSync(field){field.focus();goog.testing.events.fireFocusEvent(field.getElement())}function testSetHtml(){var editableField=new FieldConstructor("testField",document),clock=new goog.testing.MockClock(!0);try{var delayedChangeCalled=!1;goog.events.listen(editableField,goog.editor.Field.EventType.DELAYEDCHANGE,function(){delayedChangeCalled=!0});editableField.makeEditable();clock.tick(1e3);assertFalse("Make editable must not fire delayed change.",delayedChangeCalled);editableField.setHtml(!1,"bar",!0);goog.testing.dom.assertHtmlContentsMatch("bar",editableField.getElement());clock.tick(1e3);assertFalse("setHtml must not fire delayed change if so configured.",delayedChangeCalled);editableField.setHtml(!1,"foo",!1);goog.testing.dom.assertHtmlContentsMatch("foo",editableField.getElement());clock.tick(1e3);assertTrue("setHtml must fire delayed change by default",delayedChangeCalled)}finally{clock.dispose();editableField.dispose()}}function doTestPlaceCursorAtStart(opt_html,opt_parentId){var editableField=new FieldConstructor("testField",document);editableField.makeEditable();var textNode=editableField.getElement().firstChild;goog.dom.Range.createFromNodes(textNode,1,textNode,2).select();if(null!=opt_html){editableField.getElement().innerHTML=opt_html}editableField.placeCursorAtStart();var range=editableField.getRange();assertNotNull("Placing the cursor should result in a range object being available",range);assertTrue("The range should be collapsed",range.isCollapsed());textNode=editableField.getElement().firstChild;if(textNode&&textNode.getAttribute&&textNode.getAttribute("_moz_editor_bogus_node")){textNode=null}var startNode=opt_parentId?editableField.getEditableDomHelper().getElement(opt_parentId).firstChild:textNode?textNode:editableField.getElement();if(goog.userAgent.WEBKIT&&!goog.userAgent.isVersionOrHigher("528")){startNode=editableField.getElement()}assertEquals("The range should start at the specified expected node",startNode,range.getStartNode());assertEquals("The range should start at the beginning of the node",0,range.getStartOffset())}function testRestoreSavedRange(){var editableField=new FieldConstructor("testField",document);editableField.makeEditable();var doc=goog.dom.getOwnerDocument(editableField.getElement()),dom=goog.dom.getDomHelper(editableField.getElement()),otherElem=dom.createElement(goog.dom.TagName.DIV);otherElem.tabIndex=1;editableField.getElement().parentNode.appendChild(otherElem);var textNode=editableField.getElement().firstChild,range=goog.dom.Range.createFromNodes(textNode,1,textNode,2);range.select();var savedRange=goog.editor.range.saveUsingNormalizedCarets(range);editableField.placeCursorAtStart();otherElem.focus();editableField.restoreSavedRange(savedRange);assertEquals("Field should be focused",editableField.getElement(),goog.dom.getActiveElement(doc));var newRange=editableField.getRange();assertEquals("Range startNode",textNode,newRange.getStartNode());assertEquals("Range startOffset",1,newRange.getStartOffset());assertEquals("Range endNode",textNode,newRange.getEndNode());assertEquals("Range endOffset",2,newRange.getEndOffset())}function testPlaceCursorAtStart(){doTestPlaceCursorAtStart()}function testPlaceCursorAtStartEmptyField(){doTestPlaceCursorAtStart("")}function testPlaceCursorAtStartNonImportantTextNode(){doTestPlaceCursorAtStart("\n<span id=\"important\">important text</span>","important")}function doTestPlaceCursorAtEnd(opt_html,opt_parentId,opt_offset){var editableField=new FieldConstructor("testField",document);editableField.makeEditable();var textNode=editableField.getElement().firstChild;goog.dom.Range.createFromNodes(textNode,0,textNode,1).select();if(null!=opt_html){editableField.getElement().innerHTML=opt_html}editableField.placeCursorAtEnd();var range=editableField.getRange();assertNotNull("Placing the cursor should result in a range object being available",range);assertTrue("The range should be collapsed",range.isCollapsed());textNode=editableField.getElement().firstChild;var hasBogusNode=textNode&&textNode.getAttribute&&textNode.getAttribute("_moz_editor_bogus_node");if(hasBogusNode){textNode=null}var endNode=opt_parentId?editableField.getEditableDomHelper().getElement(opt_parentId).lastChild:textNode?textNode:editableField.getElement();assertEquals("The range should end at the specified expected node",endNode,range.getEndNode());var offset=goog.isDefAndNotNull(opt_offset)?opt_offset:textNode?endNode.nodeValue.length:endNode.childNodes.length-1;if(hasBogusNode){assertEquals("The range should end at the ending of the bogus node "+"added by FF",offset+1,range.getEndOffset())}else{assertEquals("The range should end at the ending of the node",offset,range.getEndOffset())}}function testPlaceCursorAtEnd(){doTestPlaceCursorAtEnd()}function testPlaceCursorAtEndEmptyField(){doTestPlaceCursorAtEnd("",null,0)}function testPlaceCursorAtEndNonImportantTextNode(){doTestPlaceCursorAtStart("\n<span id=\"important\">important text</span>","important")}function testClearDelayedChange(){var clock=new goog.testing.MockClock(!0),editableField=new FieldConstructor("testField",document);editableField.makeEditable();var delayedChangeCalled=!1;goog.events.listen(editableField,goog.editor.Field.EventType.DELAYEDCHANGE,function(){delayedChangeCalled=!0});editableField.delayedChangeTimer_.start();editableField.clearDelayedChange();assertTrue(delayedChangeCalled);if(editableField.changeTimerGecko_){assertFalse(editableField.changeTimerGecko_.isActive())}assertFalse(editableField.delayedChangeTimer_.isActive());if(editableField.changeTimerGecko_){delayedChangeCalled=!1;editableField.changeTimerGecko_.start();editableField.clearDelayedChange();assertTrue(delayedChangeCalled);if(editableField.changeTimerGecko_){assertFalse(editableField.changeTimerGecko_.isActive())}assertFalse(editableField.delayedChangeTimer_.isActive())}clock.dispose()}function testHandleChange(){if(goog.editor.BrowserFeature.USE_MUTATION_EVENTS){var editableField=new FieldConstructor("testField",document);editableField.makeEditable();editableField.changeTimerGecko_.start();editableField.handleChange();assertFalse(editableField.changeTimerGecko_.isActive())}}function testDispatchDelayedChange(){var editableField=new FieldConstructor("testField",document);editableField.makeEditable();editableField.delayedChangeTimer_.start();editableField.dispatchDelayedChange_();assertFalse(editableField.delayedChangeTimer_.isActive())}function testHandleWindowLevelMouseUp(){var editableField=new FieldConstructor("testField",document);if(editableField.usesIframe()){return}editableField.setUseWindowMouseUp(!0);editableField.makeEditable();var selectionHasFired=!1;goog.events.listenOnce(editableField,goog.editor.Field.EventType.SELECTIONCHANGE,function(e){selectionHasFired=!0});var editableElement=editableField.getElement(),otherElement=goog.dom.createDom(goog.dom.TagName.DIV);goog.dom.insertSiblingAfter(otherElement,document.body.lastChild);goog.testing.events.fireMouseDownEvent(editableElement);assertFalse(selectionHasFired);goog.testing.events.fireMouseUpEvent(otherElement);assertTrue(selectionHasFired)}function testNoHandleWindowLevelMouseUp(){var editableField=new FieldConstructor("testField",document);editableField.setUseWindowMouseUp(!1);editableField.makeEditable();var selectionHasFired=!1;goog.events.listenOnce(editableField,goog.editor.Field.EventType.SELECTIONCHANGE,function(e){selectionHasFired=!0});var editableElement=editableField.getElement(),otherElement=goog.dom.createDom(goog.dom.TagName.DIV);goog.dom.insertSiblingAfter(otherElement,document.body.lastChild);goog.testing.events.fireMouseDownEvent(editableElement);assertFalse(selectionHasFired);goog.testing.events.fireMouseUpEvent(otherElement);assertFalse(selectionHasFired)}function testIsGeneratingKey(){var regularKeyEvent=new goog.events.BrowserEvent;regularKeyEvent.charCode=goog.events.KeyCodes.A;var ctrlKeyEvent=new goog.events.BrowserEvent;ctrlKeyEvent.ctrlKey=!0;ctrlKeyEvent.metaKey=!0;ctrlKeyEvent.charCode=goog.events.KeyCodes.A;var imeKeyEvent=new goog.events.BrowserEvent;imeKeyEvent.keyCode=229;assertTrue(goog.editor.Field.isGeneratingKey_(regularKeyEvent,!0));assertFalse(goog.editor.Field.isGeneratingKey_(ctrlKeyEvent,!0));if(goog.userAgent.WINDOWS&&!goog.userAgent.GECKO){assertTrue(goog.editor.Field.isGeneratingKey_(imeKeyEvent,!1))}else{assertFalse(goog.editor.Field.isGeneratingKey_(imeKeyEvent,!1))}}function testSetEditableClassName(){var element=goog.dom.getElement("testField"),editableField=new FieldConstructor("testField");assertFalse(goog.dom.classlist.contains(element,"editable"));editableField.makeEditable();assertTrue(goog.dom.classlist.contains(element,"editable"));assertEquals(1,goog.array.count(goog.dom.classlist.get(element),goog.functions.equalTo("editable")));editableField.makeUneditable(!0);editableField.makeEditable();assertTrue(goog.dom.classlist.contains(element,"editable"));assertEquals(1,goog.array.count(goog.dom.classlist.get(element),goog.functions.equalTo("editable")))}