goog.provide("goog.tweak.RegistryTest");goog.setTestOnly("goog.tweak.RegistryTest");goog.require("goog.asserts.AssertionError");goog.require("goog.testing.jsunit");goog.require("goog.tweak");goog.require("goog.tweak.testhelpers");var registry;function setUp(){createRegistryEntries("");registry=goog.tweak.getRegistry()}function tearDown(){goog.tweak.registry_=null}function testGetBaseEntry(){assertEquals("wrong bool1 object",boolEntry,registry.getBooleanSetting("Bool"));assertEquals("wrong string object",strEntry,registry.getStringSetting("Str"));assertEquals("wrong numeric object",numEntry,registry.getNumericSetting("Num"));assertEquals("wrong button object",buttonEntry,registry.getEntry("Button"));assertEquals("wrong button object",boolGroup,registry.getEntry("BoolGroup"))}function testInitializeFromQueryParams(){var testCase=0;function assertQuery(queryStr,boolValue,enumValue,strValue,subBoolValue,subBoolValue2){createRegistryEntries(queryStr);assertEquals("Wrong bool value for query: "+queryStr,boolValue,boolEntry.getValue());assertEquals("Wrong enum value for query: "+queryStr,enumValue,strEnumEntry.getValue());assertEquals("Wrong str value for query: "+queryStr,strValue,strEntry.getValue());assertEquals("Wrong BoolOne value for query: "+queryStr,subBoolValue,boolOneEntry.getValue());assertEquals("Wrong BoolTwo value for query: "+queryStr,subBoolValue2,boolTwoEntry.getValue())}assertQuery("?dummy=1&bool=&enum=&s=",!1,"","",!1,!0);assertQuery("?bool=0&enum=A&s=a",!1,"A","a",!1,!0);assertQuery("?bool=1&enum=A",!0,"A","",!1,!0);assertQuery("?bool=true&enum=B&s=as+df",!0,"B","as df",!1,!0);assertQuery("?enum=C",!1,"C","",!1,!0);assertQuery("?enum=C&boolgroup=-booltwo",!1,"C","",!1,!1);assertQuery("?enum=C&boolgroup=b1,-booltwo",!1,"C","",!0,!1);assertQuery("?enum=C&boolgroup=b1",!1,"C","",!0,!0);assertQuery("?s=a+b%20c%26",!1,"A","a b c&",!1,!0)}function testMakeUrlQuery(){assertEquals("All values are default.","",registry.makeUrlQuery(""));assertEquals("All values are default - with existing params.","?super=pudu",registry.makeUrlQuery("?super=pudu"));boolEntry.setValue(!0);numEnumEntry.setValue(2);strEntry.setValue("f o&o");assertEquals("Wrong query string 1.","?bool=1&enum2=2&s=f+o%26o",registry.makeUrlQuery("?bool=1"));assertEquals("Wrong query string 1 - with existing params.","?super=pudu&bool=1&enum2=2&s=f+o%26o",registry.makeUrlQuery("?bool=0&s=g&super=pudu"));boolOneEntry.setValue(!0);assertEquals("Wrong query string 2.","?bool=1&boolgroup=B1&enum2=2&s=f+o%26o",registry.makeUrlQuery(""));boolTwoEntry.setValue(!1);assertEquals("Wrong query string 3.","?bool=1&boolgroup=B1,-booltwo&enum2=2&s=f+o%26o",registry.makeUrlQuery(""))}function testOverrideDefaultValue_calledBefore(){registry.overrideDefaultValue("b",!1);registry.overrideDefaultValue("b",!0);goog.tweak.registerBoolean("b","b desc");var bEntry=registry.getEntry("b");assertTrue("Default value should be true.",bEntry.getDefaultValue());assertTrue("Value should be true.",bEntry.getValue())}function testOverrideDefaultValue_calledAfter(){var exception=assertThrows("Should assert.",function(){registry.overrideDefaultValue("Bool2",!1)});assertTrue("Wrong exception",exception instanceof goog.asserts.AssertionError)}function testCompilerOverrideDefaultValue(){createRegistryEntries("",{b:!0});registry=goog.tweak.getRegistry();goog.tweak.registerBoolean("b","b desc");var bEntry=registry.getEntry("b");assertTrue("Default value should be true.",bEntry.getDefaultValue());assertTrue("Value should be true.",bEntry.getValue())}function testCompilerAndJsOverrideDefaultValue(){createRegistryEntries("",{b:!1});registry=goog.tweak.getRegistry();registry.overrideDefaultValue("b",!0);goog.tweak.registerBoolean("b","b desc",!0);var bEntry=registry.getEntry("b");assertFalse("Default value should be false.",bEntry.getDefaultValue());assertFalse("Value should be false.",bEntry.getValue())}