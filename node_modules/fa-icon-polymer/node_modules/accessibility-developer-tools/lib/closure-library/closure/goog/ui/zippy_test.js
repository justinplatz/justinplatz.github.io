goog.provide("goog.ui.ZippyTest");goog.setTestOnly("goog.ui.ZippyTest");goog.require("goog.a11y.aria");goog.require("goog.dom");goog.require("goog.dom.TagName");goog.require("goog.dom.classlist");goog.require("goog.events");goog.require("goog.events.KeyCodes");goog.require("goog.object");goog.require("goog.testing.events");goog.require("goog.testing.jsunit");goog.require("goog.ui.Zippy");var zippy,fakeZippy1,fakeZippy2,contentlessZippy,headerlessZippy,lazyZippy,lazyZippyCallCount,lazyZippyContentEl,dualHeaderZippy,dualHeaderZippyCollapsedHeaderEl,dualHeaderZippyExpandedHeaderEl;function setUp(){zippy=new goog.ui.Zippy(goog.dom.getElement("t1"),goog.dom.getElement("c1"));var fakeControlEl=goog.dom.createElement(goog.dom.TagName.BUTTON),fakeContentEl=goog.dom.createElement(goog.dom.TagName.DIV);fakeZippy1=new goog.ui.Zippy(fakeControlEl.cloneNode(!0),fakeContentEl.cloneNode(!0),!0);fakeZippy2=new goog.ui.Zippy(fakeControlEl.cloneNode(!0),fakeContentEl.cloneNode(!0),!1);contentlessZippy=new goog.ui.Zippy(fakeControlEl.cloneNode(!0),void 0,!0);headerlessZippy=new goog.ui.Zippy(null,fakeContentEl.cloneNode(!0),!0);lazyZippyCallCount=0;lazyZippyContentEl=fakeContentEl.cloneNode(!0);lazyZippy=new goog.ui.Zippy(goog.dom.getElement("t1"),function(){lazyZippyCallCount++;return lazyZippyContentEl});dualHeaderZippyCollapsedHeaderEl=fakeControlEl.cloneNode(!0);dualHeaderZippyExpandedHeaderEl=fakeControlEl.cloneNode(!0);dualHeaderZippy=new goog.ui.Zippy(dualHeaderZippyCollapsedHeaderEl,fakeContentEl.cloneNode(!0),!1,dualHeaderZippyExpandedHeaderEl)}function testConstructor(){assertNotNull("must not be null",zippy)}function testIsExpanded(){assertEquals("Default expanded must be false",!1,zippy.isExpanded());assertEquals("Expanded must be true",!0,fakeZippy1.isExpanded());assertEquals("Expanded must be false",!1,fakeZippy2.isExpanded());assertEquals("Expanded must be true",!0,headerlessZippy.isExpanded());assertEquals("Expanded must be false",!1,lazyZippy.isExpanded());assertEquals("Expanded must be false",!1,dualHeaderZippy.isExpanded())}function tearDown(){zippy.dispose();fakeZippy1.dispose();fakeZippy2.dispose();contentlessZippy.dispose();headerlessZippy.dispose();lazyZippy.dispose();dualHeaderZippy.dispose()}function testExpandCollapse(){zippy.expand();headerlessZippy.expand();assertEquals("expanded must be true",!0,zippy.isExpanded());assertEquals("expanded must be true",!0,headerlessZippy.isExpanded());zippy.collapse();headerlessZippy.collapse();assertEquals("expanded must be false",!1,zippy.isExpanded());assertEquals("expanded must be false",!1,headerlessZippy.isExpanded())}function testExpandCollapse_lazyZippy(){assertEquals("callback should not be called #1.",0,lazyZippyCallCount);lazyZippy.collapse();assertEquals("callback should not be called #2.",0,lazyZippyCallCount);lazyZippy.expand();assertEquals("callback should be called once #1.",1,lazyZippyCallCount);assertEquals("expanded must be true",!0,lazyZippy.isExpanded());assertEquals("contentEl should be visible","",lazyZippyContentEl.style.display);lazyZippy.collapse();assertEquals("callback should be called once #2.",1,lazyZippyCallCount);assertEquals("expanded must be false",!1,lazyZippy.isExpanded());assertEquals("contentEl should not be visible","none",lazyZippyContentEl.style.display);lazyZippy.expand();assertEquals("callback should be called once #3.",1,lazyZippyCallCount);assertEquals("expanded must be true #2",!0,lazyZippy.isExpanded());assertEquals("contentEl should be visible #2","",lazyZippyContentEl.style.display)}function testExpandCollapse_dualHeaderZippy(){dualHeaderZippy.expand();assertEquals("expanded must be true",!0,dualHeaderZippy.isExpanded());assertFalse("collapsed header should not have state class name #1",hasCollapseOrExpandClasses(dualHeaderZippyCollapsedHeaderEl));assertFalse("expanded header should not have state class name #1",hasCollapseOrExpandClasses(dualHeaderZippyExpandedHeaderEl));dualHeaderZippy.collapse();assertEquals("expanded must be false",!1,dualHeaderZippy.isExpanded());assertFalse("collapsed header should not have state class name #2",hasCollapseOrExpandClasses(dualHeaderZippyCollapsedHeaderEl));assertFalse("expanded header should not have state class name #2",hasCollapseOrExpandClasses(dualHeaderZippyExpandedHeaderEl))}function testSetExpand(){var expanded=!zippy.isExpanded();zippy.setExpanded(expanded);assertEquals("expanded must be "+expanded,expanded,zippy.isExpanded())}function testCssClassesAndAria(){assertTrue("goog-zippy-header is enabled",goog.dom.classlist.contains(zippy.elHeader_,"goog-zippy-header"));assertNotNull(zippy.elHeader_);assertEquals("header aria-expanded is false","false",goog.a11y.aria.getState(zippy.elHeader_,"expanded"));zippy.setExpanded(!0);assertTrue("goog-zippy-content is enabled",goog.dom.classlist.contains(zippy.getContentElement(),"goog-zippy-content"));assertEquals("header aria role is TAB","tab",goog.a11y.aria.getRole(zippy.elHeader_));assertEquals("header aria-expanded is true","true",goog.a11y.aria.getState(zippy.elHeader_,"expanded"))}function testHeaderTabIndex(){assertEquals("Header tabIndex is 0",0,zippy.elHeader_.tabIndex)}function testGetVisibleHeaderElement(){dualHeaderZippy.setExpanded(!1);assertEquals(dualHeaderZippyCollapsedHeaderEl,dualHeaderZippy.getVisibleHeaderElement());dualHeaderZippy.setExpanded(!0);assertEquals(dualHeaderZippyExpandedHeaderEl,dualHeaderZippy.getVisibleHeaderElement())}function testToggle(){var expanded=!zippy.isExpanded();zippy.toggle();assertEquals("expanded must be "+expanded,expanded,zippy.isExpanded())}function testCustomEventTOGGLE(){var dispatchedActionCount,handleAction=function(){dispatchedActionCount++},doTest=function(zippyObj){dispatchedActionCount=0;goog.events.listen(zippyObj,goog.ui.Zippy.Events.TOGGLE,handleAction);zippy.toggle();assertEquals("Custom Event must be called ",1,dispatchedActionCount)};doTest(zippy);doTest(fakeZippy1);doTest(contentlessZippy);doTest(headerlessZippy)}function testActionEvent(){var actionEventCount=0,toggleEventCount=0,handleEvent=function(e){if(e.type==goog.ui.Zippy.Events.TOGGLE){toggleEventCount++}else if(e.type==goog.ui.Zippy.Events.ACTION){actionEventCount++;assertTrue("toggle must have been called first",toggleEventCount>=actionEventCount)}};goog.events.listen(zippy,goog.object.getValues(goog.ui.Zippy.Events),handleEvent);goog.testing.events.fireClickSequence(zippy.elHeader_);assertEquals("Zippy ACTION event fired",1,actionEventCount);assertEquals("Zippy TOGGLE event fired",1,toggleEventCount);zippy.toggle();assertEquals("Zippy ACTION event NOT fired",1,actionEventCount);assertEquals("Zippy TOGGLE event fired",2,toggleEventCount)}function testBasicZippyBehavior(){var dispatchedActionCount=0,handleAction=function(){dispatchedActionCount++};goog.events.listen(zippy,goog.ui.Zippy.Events.TOGGLE,handleAction);goog.testing.events.fireClickSequence(zippy.elHeader_);assertEquals("Zippy  must have dispatched TOGGLE on click",1,dispatchedActionCount)}function hasCollapseOrExpandClasses(el){var isCollapsed=goog.dom.classlist.contains(el,"goog-zippy-collapsed"),isExpanded=goog.dom.classlist.contains(el,"goog-zippy-expanded");return isCollapsed||isExpanded}function testIsHandleKeyEvent(){zippy.setHandleKeyboardEvents(!1);assertFalse("Zippy is not handling key events",zippy.isHandleKeyEvents());assertTrue("Zippy setHandleKeyEvents does not affect handling mouse events",zippy.isHandleMouseEvents());assertEquals(0,zippy.keyboardEventHandler_.getListenerCount());zippy.setHandleKeyboardEvents(!0);assertTrue("Zippy is handling key events",zippy.isHandleKeyEvents());assertTrue("Zippy setHandleKeyEvents does not affect handling mouse events",zippy.isHandleMouseEvents());assertNotEquals(0,zippy.keyboardEventHandler_.getListenerCount())}function testIsHandleMouseEvent(){zippy.setHandleMouseEvents(!1);assertFalse("Zippy is not handling mouse events",zippy.isHandleMouseEvents());assertTrue("Zippy setHandleMouseEvents does not affect handling key events",zippy.isHandleKeyEvents());assertEquals(0,zippy.mouseEventHandler_.getListenerCount());zippy.setHandleMouseEvents(!0);assertTrue("Zippy is handling mouse events",zippy.isHandleMouseEvents());assertTrue("Zippy setHandleMouseEvents does not affect handling key events",zippy.isHandleKeyEvents());assertNotEquals(0,zippy.mouseEventHandler_.getListenerCount())}function testKeyDownEventTriggersHeader(){var actionEventCount=0,toggleEventCount=0,handleEvent=function(e){if(e.type==goog.ui.Zippy.Events.TOGGLE){toggleEventCount++}else if(e.type==goog.ui.Zippy.Events.ACTION){actionEventCount++;assertTrue("toggle must have been called first",toggleEventCount>=actionEventCount)}};zippy.setHandleKeyboardEvents(!0);goog.events.listen(zippy,goog.object.getValues(goog.ui.Zippy.Events),handleEvent);goog.testing.events.fireKeySequence(zippy.elHeader_,goog.events.KeyCodes.SPACE);assertEquals("Zippy ACTION event fired",1,actionEventCount);assertEquals("Zippy TOGGLE event fired",1,toggleEventCount)}