goog.module("goog.async.AnimationDelayTest");goog.setTestOnly("goog.async.AnimationDelayTest");var AnimationDelay=goog.require("goog.async.AnimationDelay"),Promise=goog.require("goog.Promise"),PropertyReplacer=goog.require("goog.testing.PropertyReplacer"),Timer=goog.require("goog.Timer"),jsunit=goog.require("goog.testing.jsunit"),testSuite=goog.require("goog.testing.testSuite"),TEST_DELAY=50,stubs=new PropertyReplacer;testSuite({tearDown:function(){stubs.reset()},testStart:function(){var resolver=Promise.withResolver(),start=goog.now(),delay=new AnimationDelay(function(end){assertNotNull(resolver);resolver.resolve();resolver=null});delay.start();return resolver.promise},testStop:function(){var resolver=Promise.withResolver(),start=goog.now(),delay=new AnimationDelay(function(end){resolver.reject()});delay.start();delay.stop();return Timer.promise(TEST_DELAY).then(function(){resolver.resolve();return resolver.promise})},testAlwaysUseGoogNowForHandlerTimestamp:function(){var resolver=Promise.withResolver(),expectedValue=12345.1;stubs.set(goog,"now",function(){return expectedValue});var delay=new AnimationDelay(function(timestamp){assertEquals(expectedValue,timestamp);resolver.resolve()});delay.start();return resolver.promise}});