goog.provide("goog.tweak.BaseEntryTest");goog.setTestOnly("goog.tweak.BaseEntryTest");goog.require("goog.testing.MockControl");goog.require("goog.testing.jsunit");goog.require("goog.tweak.testhelpers");var mockControl;function setUp(){mockControl=new goog.testing.MockControl}function tearDown(){goog.tweak.registry_=null;mockControl.$verifyAll()}function testGetValue_defaultValues(){createRegistryEntries("");assertFalse("wrong initial value for bool",boolEntry.getValue());assertEquals("wrong initial value for enum","A",strEnumEntry.getValue());assertEquals("wrong initial value for str","",strEntry.getValue());assertEquals("wrong initial value for bool2",!0,boolEntry2.getValue());assertEquals("wrong initial value for enum2",1,numEnumEntry.getValue());assertEquals("wrong initial value for str2","foo",strEntry2.getValue());assertFalse("wrong initial value for BoolOne",boolOneEntry.getValue());assertTrue("wrong initial value for BoolTwo",boolTwoEntry.getValue())}function testGetValue_nonDefaultValues(){createRegistryEntries("?bool=1&enum=C");boolEntry.setValue(!1);strEntry.setValue("foo");numEntry.setValue(5);assertTrue("wrong value for boolean",boolEntry.getValue());assertEquals("wrong value for string",strEntry.getDefaultValue(),strEntry.getValue());assertEquals("wrong value for num",numEntry.getDefaultValue(),numEntry.getValue());strEnumEntry.setValue("B");boolOneEntry.setValue(!0);assertEquals("wrong value for strEnum","B",strEnumEntry.getValue());assertEquals("wrong value for boolOne",!0,boolOneEntry.getValue())}function testCallbacks(){createRegistryEntries("");var mockCallback=mockControl.createFunctionMock();boolEntry.addCallback(mockCallback);boolOneEntry.addCallback(mockCallback);strEnumEntry.addCallback(mockCallback);numEnumEntry.addCallback(mockCallback);mockCallback(boolEntry);mockCallback(boolOneEntry);mockCallback(strEnumEntry);mockCallback(numEnumEntry);mockControl.$replayAll();boolEntry.setValue(!0);boolOneEntry.setValue(!0);strEnumEntry.setValue("C");numEnumEntry.setValue(3)}