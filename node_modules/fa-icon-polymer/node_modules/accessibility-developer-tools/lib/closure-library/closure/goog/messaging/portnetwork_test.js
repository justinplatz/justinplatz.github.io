goog.provide("goog.messaging.PortNetworkTest");goog.setTestOnly("goog.messaging.PortNetworkTest");goog.require("goog.Promise");goog.require("goog.Timer");goog.require("goog.labs.userAgent.browser");goog.require("goog.messaging.PortChannel");goog.require("goog.messaging.PortOperator");goog.require("goog.testing.TestCase");goog.require("goog.testing.jsunit");var timer;function shouldRunTests(){return!goog.labs.userAgent.browser.isEdge()}function setUpPage(){goog.testing.TestCase.getActiveTestCase().promiseTimeout=1e3*5}function setUp(){timer=new goog.Timer(50)}function tearDown(){goog.dispose(timer)}function testRouteMessageThroughWorkers(){if(!("MessageChannel"in goog.global)){return}var master=new goog.messaging.PortOperator("main");master.addPort("worker1",new goog.messaging.PortChannel(new Worker("testdata/portnetwork_worker1.js")));master.addPort("worker2",new goog.messaging.PortChannel(new Worker("testdata/portnetwork_worker2.js")));var peerOrigin=window.location.protocol+"//"+window.location.host;master.addPort("frame",goog.messaging.PortChannel.forEmbeddedWindow(window.frames.inner,peerOrigin,timer));var promise=new goog.Promise(function(resolve,reject){master.dial("worker1").registerService("result",resolve,!0)});master.dial("worker2").send("sendToFrame",["main"]);return promise.then(function(msg){assertArrayEquals(["main","worker2","frame","worker1"],msg)}).thenAlways(function(){master.dispose()})}