goog.provide("goog.debug.LogBufferTest");goog.setTestOnly("goog.debug.LogBufferTest");goog.require("goog.debug.LogBuffer");goog.require("goog.debug.Logger");goog.require("goog.testing.jsunit");var DUMMY_LEVELS=[goog.debug.Logger.Level.INFO,goog.debug.Logger.Level.WARNING,goog.debug.Logger.Level.SEVERE],DUMMY_MESSAGES=["a","b","c"],DUMMY_NAMES=["X","Y","Z"],buffer,dummyIndex=0;function setUp(){goog.debug.LogBuffer.CAPACITY=4;goog.debug.LogBuffer.instance_=null;buffer=goog.debug.LogBuffer.getInstance()}function verifyRecord(expectedIndex,record){var index=expectedIndex%DUMMY_MESSAGES.length,message=DUMMY_MESSAGES[index],level=DUMMY_LEVELS[index],name=DUMMY_NAMES[index];assertEquals("Wrong level for record "+expectedIndex,level,record.getLevel());assertEquals("Wrong message for record "+expectedIndex,message,record.getMessage());assertEquals("Wrong name for record "+expectedIndex,name,record.getLoggerName())}function addAndVerifyRecord(){var index=dummyIndex%DUMMY_MESSAGES.length,level=DUMMY_LEVELS[index],message=DUMMY_MESSAGES[index],name=DUMMY_NAMES[index],record=buffer.addRecord(level,message,name);verifyRecord(dummyIndex,record);dummyIndex++}function addSomeRecords(howMany){for(var i=0;i<howMany;i++){addAndVerifyRecord()}}function testAddRecord(){addSomeRecords(3*goog.debug.LogBuffer.CAPACITY)}function testIsFull(){assertFalse("Should not be full.",buffer.isFull_);addSomeRecords(1.5*goog.debug.LogBuffer.CAPACITY);assertTrue("Should be full.",buffer.isFull_);buffer.clear();assertFalse("Should not be full after clear().",buffer.isFull_);addSomeRecords(goog.debug.LogBuffer.CAPACITY-1);assertFalse("Should not be full but almost full.",buffer.isFull_)}function testForEachRecord(){var howMany1=goog.debug.LogBuffer.CAPACITY/2;addSomeRecords(howMany1);var counter1=0;buffer.forEachRecord(function(record){verifyRecord(counter1++,record)});assertEquals("Wrong number of records when half full.",howMany1,counter1);var howMany2=goog.debug.LogBuffer.CAPACITY;addSomeRecords(howMany2);var index=counter1;buffer.forEachRecord(function(record){verifyRecord(index++,record)});assertEquals("Wrong number of records when full.",howMany1+howMany2,index)}