goog.module("goog.baseModuleTest");goog.setTestOnly("goog.baseModuleTest");var Timer=goog.require("goog.Timer"),Replacer=goog.require("goog.testing.PropertyReplacer"),jsunit=goog.require("goog.testing.jsunit"),testSuite=goog.require("goog.testing.testSuite"),testModule=goog.require("goog.test_module"),stubs=new Replacer;function assertProvideFails(namespace){assertThrows("goog.provide("+namespace+") should have failed",goog.partial(goog.provide,namespace))}function assertModuleFails(namespace){assertThrows("goog.module("+namespace+") should have failed",goog.partial(goog.module,namespace))}function assertLoadModule(msg,moduleDef){assertNotThrows(msg,goog.partial(goog.loadModule,moduleDef))}testSuite({teardown:function(){stubs.reset()},testModuleDecl:function(){assertUndefined("module failed to protect global namespace: "+"goog.baseModuleTest",goog.baseModuleTest)},testModuleScoping:function(){assertNotUndefined("module failed: testModule",testModule);assertFalse("module failed: testModule",goog.isFunction(goog.global.testModuleScoping))},testProvideStrictness1:function(){assertModuleFails("goog.xy");assertProvideFails("goog.baseModuleTest")},testProvideStrictness2:function(){assertTrue(goog.isProvided_("goog.baseModuleTest"))},testExportSymbol:function(){var date=new Date;assertTrue("undefined"==typeof nodots);goog.exportSymbol("nodots",date);assertEquals(date,nodots);nodots=void 0},testLoadModule:function(){assertLoadModule("Loading a module that exports a typedef should succeed","goog.module('goog.test_module_typedef');"+"var typedef;"+"exports = typedef;")},testLegacyRequire:function(){assertNotUndefined("goog.Timer should be available",goog.Timer);assertTrue("Timer should be the goog.Timer namespace object",goog.Timer===Timer);assertNotUndefined("goog.events.EventTarget should be available",goog.events.EventTarget)},testRequireModule:function(){assertEquals("module failed to export legacy namespace: "+"goog.test_module",testModule,goog.test_module);assertUndefined("module failed to protect global namespace: "+"goog.test_module_dep",goog.test_module_dep);assertNotUndefined("testModule is loaded",testModule);assertTrue("module failed: testModule",goog.isFunction(testModule))},testThisInModule:goog.bind(function(){if(!goog.userAgent.IE||goog.userAgent.isVersionOrHigher("10")){assertEquals(this,void 0)}else{assertEquals(this,goog.global)}},this)});