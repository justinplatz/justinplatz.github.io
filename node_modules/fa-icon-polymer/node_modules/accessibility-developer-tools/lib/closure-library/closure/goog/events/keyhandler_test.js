goog.provide("goog.events.KeyEventTest");goog.setTestOnly("goog.events.KeyEventTest");goog.require("goog.dom");goog.require("goog.dom.TagName");goog.require("goog.events");goog.require("goog.events.BrowserEvent");goog.require("goog.events.EventType");goog.require("goog.events.KeyCodes");goog.require("goog.events.KeyHandler");goog.require("goog.testing.events");goog.require("goog.testing.jsunit");goog.require("goog.userAgent");function setUp(){goog.userAgent.isDocumentMode=function(mode){return mode<=goog.userAgent.DOCUMENT_MODE}}function testIe8StyleKeyHandling(){goog.userAgent.OPERA=!1;goog.userAgent.IE=!0;goog.userAgent.GECKO=!1;goog.userAgent.WEBKIT=!1;goog.userAgent.MAC=!1;goog.userAgent.WINDOWS=!0;goog.userAgent.LINUX=!1;goog.userAgent.VERSION=8;goog.userAgent.DOCUMENT_MODE=8;goog.events.KeyHandler.USES_KEYDOWN_=!0;assertIe8StyleKeyHandling()}function testIe8StyleKeyHandlingInIe9DocumentMode(){goog.userAgent.OPERA=!1;goog.userAgent.IE=!0;goog.userAgent.GECKO=!1;goog.userAgent.WEBKIT=!1;goog.userAgent.MAC=!1;goog.userAgent.WINDOWS=!0;goog.userAgent.LINUX=!1;goog.userAgent.VERSION=9;goog.userAgent.DOCUMENT_MODE=8;goog.events.KeyHandler.USES_KEYDOWN_=!0;assertIe8StyleKeyHandling()}function assertIe8StyleKeyHandling(){var keyEvent,keyHandler=new goog.events.KeyHandler;goog.events.listen(keyHandler,goog.events.KeyHandler.EventType.KEY,function(e){keyEvent=e});fireKeyDown(keyHandler,goog.events.KeyCodes.ENTER);fireKeyPress(keyHandler,goog.events.KeyCodes.ENTER);assertEquals("Enter should fire a key event with the keycode 13",goog.events.KeyCodes.ENTER,keyEvent.keyCode);assertEquals("Enter should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.ESC);fireKeyPress(keyHandler,goog.events.KeyCodes.ESC);assertEquals("Esc should fire a key event with the keycode 27",goog.events.KeyCodes.ESC,keyEvent.keyCode);assertEquals("Esc should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.UP);assertEquals("Up should fire a key event with the keycode 38",goog.events.KeyCodes.UP,keyEvent.keyCode);assertEquals("Up should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.SEVEN,void 0,void 0,void 0,void 0,!0);fireKeyPress(keyHandler,38,void 0,void 0,void 0,void 0,!0);assertEquals("Shift+7 should fire a key event with the keycode 55",goog.events.KeyCodes.SEVEN,keyEvent.keyCode);assertEquals("Shift+7 should fire a key event with the charcode 38",38,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.A);fireKeyPress(keyHandler,97);assertEquals("Lower case a should fire a key event with the keycode 65",goog.events.KeyCodes.A,keyEvent.keyCode);assertEquals("Lower case a should fire a key event with the charcode 97",97,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.A);fireKeyPress(keyHandler,65);assertEquals("Upper case A should fire a key event with the keycode 65",goog.events.KeyCodes.A,keyEvent.keyCode);assertEquals("Upper case A should fire a key event with the charcode 65",65,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.DELETE);assertEquals("Delete should fire a key event with the keycode 46",goog.events.KeyCodes.DELETE,keyEvent.keyCode);assertEquals("Delete should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.PERIOD);fireKeyPress(keyHandler,46);assertEquals("Period should fire a key event with the keycode 190",goog.events.KeyCodes.PERIOD,keyEvent.keyCode);assertEquals("Period should fire a key event with the charcode 46",46,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.CTRL);fireKeyDown(keyHandler,goog.events.KeyCodes.A);assertEquals("A with control down should fire a key event",goog.events.KeyCodes.A,keyEvent.keyCode);fireKeyDown(keyHandler,goog.events.KeyCodes.B,void 0,void 0,!0);fireKeyPress(keyHandler,goog.events.KeyCodes.B,void 0,void 0,!0);assertEquals("B with control down should fire a key event",goog.events.KeyCodes.B,keyEvent.keyCode);assertTrue("Ctrl should be down.",keyEvent.ctrlKey);assertFalse("Should not have repeat=true on the first key press.",keyEvent.repeat);fireKeyDown(keyHandler,goog.events.KeyCodes.B,void 0,void 0,!0);assertEquals("A with control down should fire a key event",goog.events.KeyCodes.B,keyEvent.keyCode);assertTrue("Should have repeat=true on key repeat.",keyEvent.repeat);assertTrue("Ctrl should be down.",keyEvent.ctrlKey)}function testIe9StyleKeyHandling(){goog.userAgent.OPERA=!1;goog.userAgent.IE=!0;goog.userAgent.GECKO=!1;goog.userAgent.WEBKIT=!1;goog.userAgent.MAC=!1;goog.userAgent.WINDOWS=!0;goog.userAgent.LINUX=!1;goog.userAgent.VERSION=9;goog.userAgent.DOCUMENT_MODE=9;goog.events.KeyHandler.USES_KEYDOWN_=!0;var keyEvent,keyHandler=new goog.events.KeyHandler;goog.events.listen(keyHandler,goog.events.KeyHandler.EventType.KEY,function(e){keyEvent=e});fireKeyDown(keyHandler,goog.events.KeyCodes.ENTER);fireKeyPress(keyHandler,goog.events.KeyCodes.ENTER);assertEquals("Enter should fire a key event with the keycode 13",goog.events.KeyCodes.ENTER,keyEvent.keyCode);assertEquals("Enter should fire a key event with the charcode 0",0,keyEvent.charCode)}function testGeckoStyleKeyHandling(){goog.userAgent.OPERA=!1;goog.userAgent.IE=!1;goog.userAgent.GECKO=!0;goog.userAgent.WEBKIT=!1;goog.userAgent.MAC=!1;goog.userAgent.WINDOWS=!0;goog.userAgent.LINUX=!1;goog.events.KeyHandler.USES_KEYDOWN_=!1;var keyEvent,keyHandler=new goog.events.KeyHandler;goog.events.listen(keyHandler,goog.events.KeyHandler.EventType.KEY,function(e){keyEvent=e});fireKeyDown(keyHandler,goog.events.KeyCodes.ENTER);fireKeyPress(keyHandler,goog.events.KeyCodes.ENTER);assertEquals("Enter should fire a key event with the keycode 13",goog.events.KeyCodes.ENTER,keyEvent.keyCode);assertEquals("Enter should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.ESC);fireKeyPress(keyHandler,goog.events.KeyCodes.ESC);assertEquals("Esc should fire a key event with the keycode 27",goog.events.KeyCodes.ESC,keyEvent.keyCode);assertEquals("Esc should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.UP);fireKeyPress(keyHandler,goog.events.KeyCodes.UP);assertEquals("Up should fire a key event with the keycode 38",goog.events.KeyCodes.UP,keyEvent.keyCode);assertEquals("Up should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.SEVEN,void 0,void 0,void 0,void 0,!0);fireKeyPress(keyHandler,void 0,38,void 0,void 0,void 0,!0);assertEquals("Shift+7 should fire a key event with the keycode 55",goog.events.KeyCodes.SEVEN,keyEvent.keyCode);assertEquals("Shift+7 should fire a key event with the charcode 38",38,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.A);fireKeyPress(keyHandler,void 0,97);assertEquals("Lower case a should fire a key event with the keycode 65",goog.events.KeyCodes.A,keyEvent.keyCode);assertEquals("Lower case a should fire a key event with the charcode 97",97,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.A);fireKeyPress(keyHandler,void 0,65);assertEquals("Upper case A should fire a key event with the keycode 65",goog.events.KeyCodes.A,keyEvent.keyCode);assertEquals("Upper case A should fire a key event with the charcode 65",65,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.DELETE);fireKeyPress(keyHandler,goog.events.KeyCodes.DELETE);assertEquals("Delete should fire a key event with the keycode 46",goog.events.KeyCodes.DELETE,keyEvent.keyCode);assertEquals("Delete should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.PERIOD);fireKeyPress(keyHandler,void 0,46);assertEquals("Period should fire a key event with the keycode 190",goog.events.KeyCodes.PERIOD,keyEvent.keyCode);assertEquals("Period should fire a key event with the charcode 46",46,keyEvent.charCode)}function testSafari3StyleKeyHandling(){goog.userAgent.OPERA=!1;goog.userAgent.IE=!1;goog.userAgent.GECKO=!1;goog.userAgent.WEBKIT=!0;goog.userAgent.MAC=!0;goog.userAgent.WINDOWS=!1;goog.userAgent.LINUX=!1;goog.events.KeyHandler.USES_KEYDOWN_=!0;goog.userAgent.VERSION=525.3;var keyEvent,keyHandler=new goog.events.KeyHandler;goog.events.listen(keyHandler,goog.events.KeyHandler.EventType.KEY,function(e){keyEvent=e});fireKeyDown(keyHandler,goog.events.KeyCodes.ENTER);fireKeyPress(keyHandler,goog.events.KeyCodes.ENTER);assertEquals("Enter should fire a key event with the keycode 13",goog.events.KeyCodes.ENTER,keyEvent.keyCode);assertEquals("Enter should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyUp(keyHandler,goog.events.KeyCodes.ENTER);var enterCheck=goog.events.listen(keyHandler,goog.events.KeyHandler.EventType.KEY,function(e){assertNotEquals("Unexpected ENTER keypress dispatched",e.keyCode,goog.events.KeyCodes.ENTER)});fireKeyDown(keyHandler,goog.events.KeyCodes.ESC);assertEquals("Esc should fire a key event with the keycode 27",goog.events.KeyCodes.ESC,keyEvent.keyCode);assertEquals("Esc should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyPress(keyHandler,goog.events.KeyCodes.ESC);goog.events.unlistenByKey(enterCheck);fireKeyDown(keyHandler,goog.events.KeyCodes.UP);assertEquals("Up should fire a key event with the keycode 38",goog.events.KeyCodes.UP,keyEvent.keyCode);assertEquals("Up should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.SEVEN,void 0,void 0,void 0,void 0,!0);fireKeyPress(keyHandler,38,38,void 0,void 0,void 0,!0);assertEquals("Shift+7 should fire a key event with the keycode 55",goog.events.KeyCodes.SEVEN,keyEvent.keyCode);assertEquals("Shift+7 should fire a key event with the charcode 38",38,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.A);fireKeyPress(keyHandler,97,97);assertEquals("Lower case a should fire a key event with the keycode 65",goog.events.KeyCodes.A,keyEvent.keyCode);assertEquals("Lower case a should fire a key event with the charcode 97",97,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.A);fireKeyPress(keyHandler,65,65);assertEquals("Upper case A should fire a key event with the keycode 65",goog.events.KeyCodes.A,keyEvent.keyCode);assertEquals("Upper case A should fire a key event with the charcode 65",65,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.CTRL);fireKeyDown(keyHandler,goog.events.KeyCodes.A,null,null,!0);assertEquals("A with control down should fire a key event",goog.events.KeyCodes.A,keyEvent.keyCode);fireKeyDown(keyHandler,goog.events.KeyCodes.ALT);keyEvent.keyCode=-1;fireKeyDown(keyHandler,goog.events.KeyCodes.A);assertEquals("Should not have dispatched an Alt-A",-1,keyEvent.keyCode);fireKeyPress(keyHandler,65,65);assertEquals("Alt should be ignored since it isn't currently depressed",goog.events.KeyCodes.A,keyEvent.keyCode);fireKeyDown(keyHandler,goog.events.KeyCodes.DELETE);assertEquals("Delete should fire a key event with the keycode 46",goog.events.KeyCodes.DELETE,keyEvent.keyCode);assertEquals("Delete should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.PERIOD);fireKeyPress(keyHandler,46,46);assertEquals("Period should fire a key event with the keycode 190",goog.events.KeyCodes.PERIOD,keyEvent.keyCode);assertEquals("Period should fire a key event with the charcode 46",46,keyEvent.charCode);fireKeyDown(keyHandler,0,0);fireKeyPress(keyHandler,1092,1092);assertEquals("Cyrillic small letter \"Ef\" should fire a key event with "+"the keycode 0",0,keyEvent.keyCode);assertEquals("Cyrillic small letter \"Ef\" should fire a key event with "+"the charcode 1092",1092,keyEvent.charCode)}function testOperaStyleKeyHandling(){goog.userAgent.OPERA=!0;goog.userAgent.IE=!1;goog.userAgent.GECKO=!1;goog.userAgent.WEBKIT=!1;goog.userAgent.MAC=!1;goog.userAgent.WINDOWS=!0;goog.userAgent.LINUX=!1;goog.events.KeyHandler.USES_KEYDOWN_=!1;var keyEvent,keyHandler=new goog.events.KeyHandler;goog.events.listen(keyHandler,goog.events.KeyHandler.EventType.KEY,function(e){keyEvent=e});fireKeyDown(keyHandler,goog.events.KeyCodes.ENTER);fireKeyPress(keyHandler,goog.events.KeyCodes.ENTER);assertEquals("Enter should fire a key event with the keycode 13",goog.events.KeyCodes.ENTER,keyEvent.keyCode);assertEquals("Enter should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.ESC);fireKeyPress(keyHandler,goog.events.KeyCodes.ESC);assertEquals("Esc should fire a key event with the keycode 27",goog.events.KeyCodes.ESC,keyEvent.keyCode);assertEquals("Esc should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.UP);fireKeyPress(keyHandler,goog.events.KeyCodes.UP);assertEquals("Up should fire a key event with the keycode 38",goog.events.KeyCodes.UP,keyEvent.keyCode);assertEquals("Up should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.SEVEN,void 0,void 0,void 0,void 0,!0);fireKeyPress(keyHandler,38,void 0,void 0,void 0,void 0,!0);assertEquals("Shift+7 should fire a key event with the keycode 55",goog.events.KeyCodes.SEVEN,keyEvent.keyCode);assertEquals("Shift+7 should fire a key event with the charcode 38",38,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.A);fireKeyPress(keyHandler,97);assertEquals("Lower case a should fire a key event with the keycode 65",goog.events.KeyCodes.A,keyEvent.keyCode);assertEquals("Lower case a should fire a key event with the charcode 97",97,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.A);fireKeyPress(keyHandler,65);assertEquals("Upper case A should fire a key event with the keycode 65",goog.events.KeyCodes.A,keyEvent.keyCode);assertEquals("Upper case A should fire a key event with the charcode 65",65,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.DELETE);fireKeyPress(keyHandler,goog.events.KeyCodes.DELETE);assertEquals("Delete should fire a key event with the keycode 46",goog.events.KeyCodes.DELETE,keyEvent.keyCode);assertEquals("Delete should fire a key event with the charcode 0",0,keyEvent.charCode);fireKeyDown(keyHandler,goog.events.KeyCodes.PERIOD);fireKeyPress(keyHandler,46);assertEquals("Period should fire a key event with the keycode 190",goog.events.KeyCodes.PERIOD,keyEvent.keyCode);assertEquals("Period should fire a key event with the charcode 46",46,keyEvent.charCode)}function testGeckoOnMacAltHandling(){goog.userAgent.OPERA=!1;goog.userAgent.IE=!1;goog.userAgent.GECKO=!0;goog.userAgent.WEBKIT=!1;goog.userAgent.MAC=!0;goog.userAgent.WINDOWS=!1;goog.userAgent.LINUX=!1;goog.userAgent.EDGE=!1;goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_=!0;var keyEvent,keyHandler=new goog.events.KeyHandler;goog.events.listen(keyHandler,goog.events.KeyHandler.EventType.KEY,function(e){keyEvent=e});fireKeyDown(keyHandler,goog.events.KeyCodes.COMMA,0,null,!1,!0,!1);fireKeyPress(keyHandler,0,8804,null,!1,!1,!1);assertEquals("should fire a key event with COMMA",goog.events.KeyCodes.COMMA,keyEvent.keyCode);assertEquals("should fire a key event with alt key set",!0,keyEvent.altKey);keyEvent=void 0;fireKeyDown(keyHandler,18,0,null,!1,!0,!1);fireKeyDown(keyHandler,goog.events.KeyCodes.A,0,null,!1,!0,!1);fireKeyPress(keyHandler,0,229,null,!1,!1,!1);assertEquals("should fire a key event with alt key set",!0,keyEvent.altKey);fireKeyUp(keyHandler,0,229,null,!1,!0,!1);assertEquals("alt key should still be set",!0,keyEvent.altKey);fireKeyUp(keyHandler,18,0,null,!1,!1,!1)}function testGeckoEqualSign(){goog.userAgent.OPERA=!1;goog.userAgent.IE=!1;goog.userAgent.GECKO=!0;goog.userAgent.WEBKIT=!1;goog.userAgent.MAC=!1;goog.userAgent.WINDOWS=!0;goog.userAgent.LINUX=!1;goog.events.KeyHandler.USES_KEYDOWN_=!1;var keyEvent,keyHandler=new goog.events.KeyHandler;goog.events.listen(keyHandler,goog.events.KeyHandler.EventType.KEY,function(e){keyEvent=e});fireKeyDown(keyHandler,61,0);fireKeyPress(keyHandler,0,61);assertEquals("= should fire should fire a key event with the keyCode 187",goog.events.KeyCodes.EQUALS,keyEvent.keyCode);assertEquals("= should fire a key event with the charCode 61",goog.events.KeyCodes.FF_EQUALS,keyEvent.charCode)}function testMacGeckoSlash(){goog.userAgent.OPERA=!1;goog.userAgent.IE=!1;goog.userAgent.GECKO=!0;goog.userAgent.WEBKIT=!1;goog.userAgent.MAC=!0;goog.userAgent.WINDOWS=!1;goog.userAgent.LINUX=!1;goog.events.KeyHandler.USES_KEYDOWN_=!1;var keyEvent,keyHandler=new goog.events.KeyHandler;goog.events.listen(keyHandler,goog.events.KeyHandler.EventType.KEY,function(e){keyEvent=e});fireKeyDown(keyHandler,0,63,null,!1,!1,!0);fireKeyPress(keyHandler,0,63,null,!1,!1,!0);assertEquals("/ should fire a key event with the keyCode 191",goog.events.KeyCodes.SLASH,keyEvent.keyCode);assertEquals("? should fire a key event with the charCode 63",goog.events.KeyCodes.QUESTION_MARK,keyEvent.charCode)}function testGetElement(){var target=goog.dom.createDom(goog.dom.TagName.DIV),target2=goog.dom.createDom(goog.dom.TagName.DIV),keyHandler=new goog.events.KeyHandler;assertNull(keyHandler.getElement());keyHandler.attach(target);assertEquals(target,keyHandler.getElement());keyHandler.attach(target2);assertNotEquals(target,keyHandler.getElement());assertEquals(target2,keyHandler.getElement());var doc=goog.dom.getDocument();keyHandler.attach(doc);assertEquals(doc,keyHandler.getElement());keyHandler=new goog.events.KeyHandler(doc);assertEquals(doc,keyHandler.getElement());keyHandler=new goog.events.KeyHandler(target);assertEquals(target,keyHandler.getElement())}function testDetach(){var target=goog.dom.createDom(goog.dom.TagName.DIV),keyHandler=new goog.events.KeyHandler(target);assertEquals(target,keyHandler.getElement());fireKeyDown(keyHandler,0,63,null,!1,!1,!0);fireKeyPress(keyHandler,0,63,null,!1,!1,!0);keyHandler.detach();assertNull(keyHandler.getElement());assertNull(keyHandler.keyDownKey_);assertNull(keyHandler.keyPressKey_);assertNull(keyHandler.keyUpKey_);assertEquals("Last key should be -1",-1,keyHandler.lastKey_);assertEquals("keycode should be -1",-1,keyHandler.keyCode_)}function testCapturePhase(){var gotInCapturePhase,gotInBubblePhase,target=goog.dom.createDom(goog.dom.TagName.DIV);goog.events.listen(new goog.events.KeyHandler(target,!1),goog.events.KeyHandler.EventType.KEY,function(){gotInBubblePhase=!0;assertTrue(gotInCapturePhase)});goog.events.listen(new goog.events.KeyHandler(target,!0),goog.events.KeyHandler.EventType.KEY,function(){gotInCapturePhase=!0});goog.testing.events.fireKeySequence(target,goog.events.KeyCodes.ESC);assertTrue(gotInBubblePhase)}function fireKeyDown(keyHandler,keyCode,opt_charCode,opt_keyIdentifier,opt_ctrlKey,opt_altKey,opt_shiftKey){var fakeEvent=createFakeKeyEvent(goog.events.EventType.KEYDOWN,keyCode,opt_charCode,opt_keyIdentifier,opt_ctrlKey,opt_altKey,opt_shiftKey);keyHandler.handleKeyDown_(fakeEvent);return fakeEvent.returnValue_}function fireKeyPress(keyHandler,keyCode,opt_charCode,opt_keyIdentifier,opt_ctrlKey,opt_altKey,opt_shiftKey){var fakeEvent=createFakeKeyEvent(goog.events.EventType.KEYPRESS,keyCode,opt_charCode,opt_keyIdentifier,opt_ctrlKey,opt_altKey,opt_shiftKey);keyHandler.handleEvent(fakeEvent);return fakeEvent.returnValue_}function fireKeyUp(keyHandler,keyCode,opt_charCode,opt_keyIdentifier,opt_ctrlKey,opt_altKey,opt_shiftKey){var fakeEvent=createFakeKeyEvent(goog.events.EventType.KEYUP,keyCode,opt_charCode,opt_keyIdentifier,opt_ctrlKey,opt_altKey,opt_shiftKey);keyHandler.handleKeyup_(fakeEvent);return fakeEvent.returnValue_}function createFakeKeyEvent(type,keyCode,opt_charCode,opt_keyIdentifier,opt_ctrlKey,opt_altKey,opt_shiftKey){var event={type:type,keyCode:keyCode,charCode:opt_charCode||void 0,keyIdentifier:opt_keyIdentifier||void 0,ctrlKey:opt_ctrlKey||!1,altKey:opt_altKey||!1,shiftKey:opt_shiftKey||!1,timeStamp:goog.now()};return new goog.events.BrowserEvent(event)}