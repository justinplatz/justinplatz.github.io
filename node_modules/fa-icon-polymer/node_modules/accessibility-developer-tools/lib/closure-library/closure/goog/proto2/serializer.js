goog.provide("goog.proto2.Serializer");goog.require("goog.asserts");goog.require("goog.proto2.FieldDescriptor");goog.require("goog.proto2.Message");goog.proto2.Serializer=function(){};goog.define("goog.proto2.Serializer.DECODE_SYMBOLIC_ENUMS",!1);goog.proto2.Serializer.prototype.serialize=goog.abstractMethod;goog.proto2.Serializer.prototype.getSerializedValue=function(field,value){if(field.isCompositeType()){return this.serialize(value)}else if(goog.isNumber(value)&&!isFinite(value)){return value.toString()}else{return value}};goog.proto2.Serializer.prototype.deserialize=function(descriptor,data){var message=descriptor.createMessageInstance();this.deserializeTo(message,data);goog.asserts.assert(message instanceof goog.proto2.Message);return message};goog.proto2.Serializer.prototype.deserializeTo=goog.abstractMethod;goog.proto2.Serializer.prototype.getDeserializedValue=function(field,value){if(field.isCompositeType()){if(value instanceof goog.proto2.Message){return value}return this.deserialize(field.getFieldMessageType(),value)}if(field.getFieldType()==goog.proto2.FieldDescriptor.FieldType.ENUM){if(goog.proto2.Serializer.DECODE_SYMBOLIC_ENUMS&&goog.isString(value)){var enumType=field.getNativeType();if(enumType.hasOwnProperty(value)){return enumType[value]}}if(goog.isString(value)&&goog.proto2.Serializer.INTEGER_REGEX.test(value)){var numeric=+value;if(0<numeric){return numeric}}return value}if(!field.deserializationConversionPermitted()){return value}var nativeType=field.getNativeType();if(nativeType===String){if(goog.isNumber(value)){return value+""}}else if(nativeType===Number){if(goog.isString(value)){if("Infinity"===value||"-Infinity"===value||"NaN"===value){return+value}if(goog.proto2.Serializer.INTEGER_REGEX.test(value)){return+value}}}return value};goog.proto2.Serializer.INTEGER_REGEX=/^-?[0-9]+$/;