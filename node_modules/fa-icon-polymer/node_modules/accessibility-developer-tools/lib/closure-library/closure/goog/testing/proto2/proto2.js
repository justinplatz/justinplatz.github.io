goog.setTestOnly("goog.testing.proto2");goog.provide("goog.testing.proto2");goog.require("goog.proto2.Message");goog.require("goog.proto2.ObjectSerializer");goog.require("goog.testing.asserts");goog.testing.proto2.findDifferences_=function(expected,actual,path){for(var fields=expected.getDescriptor().getFields(),i=0;i<fields.length;i++){var field=fields[i],newPath=(path?path+"/":"")+field.getName();if(expected.has(field)&&!actual.has(field)){return newPath+" should be present"}if(!expected.has(field)&&actual.has(field)){return newPath+" should not be present"}if(expected.has(field)){var isComposite=field.isCompositeType();if(field.isRepeated()){var expectedCount=expected.countOf(field),actualCount=actual.countOf(field);if(expectedCount!=actualCount){return newPath+" should have "+expectedCount+" items, "+"but has "+actualCount}for(var j=0;j<expectedCount;j++){var expectedItem=expected.get(field,j),actualItem=actual.get(field,j);if(isComposite){var itemDiff=goog.testing.proto2.findDifferences_(expectedItem,actualItem,newPath+"["+j+"]");if(itemDiff){return itemDiff}}else{if(expectedItem!=actualItem){return newPath+"["+j+"] should be "+expectedItem+", but was "+actualItem}}}}else{var expectedValue=expected.get(field),actualValue=actual.get(field);if(isComposite){var diff=goog.testing.proto2.findDifferences_(expectedValue,actualValue,newPath);if(diff){return diff}}else{if(expectedValue!=actualValue){return newPath+" should be "+expectedValue+", but was "+actualValue}}}}}return""};goog.testing.proto2.assertEquals=function(expected,actual,opt_failureMessage){var failureSummary=opt_failureMessage||"";if(!(expected instanceof goog.proto2.Message)||!(actual instanceof goog.proto2.Message)){goog.testing.asserts.raiseException(failureSummary,"Bad arguments were passed to goog.testing.proto2.assertEquals")}if(expected.constructor!=actual.constructor){goog.testing.asserts.raiseException(failureSummary,"Message type mismatch: "+expected.getDescriptor().getFullName()+" != "+actual.getDescriptor().getFullName())}var diff=goog.testing.proto2.findDifferences_(expected,actual,"");if(diff){goog.testing.asserts.raiseException(failureSummary,diff)}};goog.testing.proto2.fromObject=function(messageCtor,json){var serializer=new goog.proto2.ObjectSerializer(goog.proto2.ObjectSerializer.KeyOption.NAME),message=new messageCtor;serializer.deserializeTo(message,json);return message};