goog.provide("goog.testing.DeferredTestCaseTest");goog.setTestOnly("goog.testing.DeferredTestCaseTest");goog.require("goog.async.Deferred");goog.require("goog.testing.DeferredTestCase");goog.require("goog.testing.TestCase");goog.require("goog.testing.TestRunner");goog.require("goog.testing.jsunit");goog.require("goog.testing.recordFunction");var deferredTestCase=goog.testing.DeferredTestCase.createAndInstall(document.title),testTestCase,runner;deferredTestCase.stepTimeout=1e3*15;function testDeferredCallbacks(){var callbackTime=goog.now(),callbacks=new goog.async.Deferred;deferredTestCase.addWaitForAsync("Waiting for 1st callback",callbacks);callbacks.addCallback(function(){assertTrue("We're going back in time!",goog.now()>=callbackTime);callbackTime=goog.now()});deferredTestCase.addWaitForAsync("Waiting for 2nd callback",callbacks);callbacks.addCallback(function(){assertTrue("We're going back in time!",goog.now()>=callbackTime);callbackTime=goog.now()});deferredTestCase.addWaitForAsync("Waiting for last callback",callbacks);callbacks.addCallback(function(){assertTrue("We're going back in time!",goog.now()>=callbackTime);callbackTime=goog.now()});deferredTestCase.waitForDeferred(callbacks)}function createDeferredTestCase(d){testTestCase=new goog.testing.DeferredTestCase("Foobar TestCase");testTestCase.add(new goog.testing.TestCase.Test("Foobar Test",function(){this.waitForDeferred(d)},testTestCase));var testCompleteCallback=new goog.async.Deferred;testTestCase.setCompletedCallback(function(){testCompleteCallback.callback(!0)});var runner=new goog.testing.TestRunner;runner.initialize(testTestCase);return testCompleteCallback}function testDeferredWait(){var d=new goog.async.Deferred;deferredTestCase.addWaitForAsync("Foobar",d);d.addCallback(function(){return goog.async.Deferred.succeed(!0)});deferredTestCase.waitForDeferred(d)}function testNonAsync(){assertTrue(!0)}function testPassWithTestRunner(){var d=new goog.async.Deferred;d.addCallback(function(){return goog.async.Deferred.succeed(!0)});var testCompleteDeferred=createDeferredTestCase(d);testTestCase.execute();var deferredCallbackOnPass=new goog.async.Deferred;deferredCallbackOnPass.addCallback(function(){return testCompleteDeferred});deferredCallbackOnPass.addCallback(function(){assertTrue("Test case should have succeeded.",testTestCase.isSuccess())});deferredTestCase.waitForDeferred(deferredCallbackOnPass)}function testFailWithTestRunner(){var d=new goog.async.Deferred;d.addCallback(function(){return goog.async.Deferred.fail(!0)});var testCompleteDeferred=createDeferredTestCase(d),mockDoAsyncError=goog.testing.recordFunction(function(){testTestCase.continueTesting()});testTestCase.doAsyncError=mockDoAsyncError;testTestCase.execute();assertEquals(1,mockDoAsyncError.getCallCount())}