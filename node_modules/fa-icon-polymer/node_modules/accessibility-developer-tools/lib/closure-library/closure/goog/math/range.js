goog.provide("goog.math.Range");goog.require("goog.asserts");goog.math.Range=function(a,b){this.start=a<b?a:b;this.end=a<b?b:a};goog.math.Range.fromPair=function(pair){goog.asserts.assert(2==pair.length);return new goog.math.Range(pair[0],pair[1])};goog.math.Range.prototype.clone=function(){return new goog.math.Range(this.start,this.end)};goog.math.Range.prototype.getLength=function(){return this.end-this.start};goog.math.Range.prototype.includePoint=function(point){this.start=Math.min(this.start,point);this.end=Math.max(this.end,point)};goog.math.Range.prototype.includeRange=function(range){this.start=Math.min(this.start,range.start);this.end=Math.max(this.end,range.end)};if(goog.DEBUG){goog.math.Range.prototype.toString=function(){return"["+this.start+", "+this.end+"]"}}goog.math.Range.equals=function(a,b){if(a==b){return!0}if(!a||!b){return!1}return a.start==b.start&&a.end==b.end};goog.math.Range.intersection=function(a,b){var c0=Math.max(a.start,b.start),c1=Math.min(a.end,b.end);return c0<=c1?new goog.math.Range(c0,c1):null};goog.math.Range.hasIntersection=function(a,b){return Math.max(a.start,b.start)<=Math.min(a.end,b.end)};goog.math.Range.boundingRange=function(a,b){return new goog.math.Range(Math.min(a.start,b.start),Math.max(a.end,b.end))};goog.math.Range.contains=function(a,b){return a.start<=b.start&&a.end>=b.end};goog.math.Range.containsPoint=function(range,p){return range.start<=p&&range.end>=p};