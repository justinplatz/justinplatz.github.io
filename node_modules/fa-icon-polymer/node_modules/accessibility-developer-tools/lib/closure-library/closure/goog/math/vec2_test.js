goog.provide("goog.math.Vec2Test");goog.setTestOnly("goog.math.Vec2Test");goog.require("goog.math.Vec2");goog.require("goog.testing.jsunit");function assertVectorEquals(a,b){assertTrue(b+" should be equal to "+a,goog.math.Vec2.equals(a,b))}function testVec2(){var v=new goog.math.Vec2(3.14,2.78);assertEquals(3.14,v.x);assertEquals(2.78,v.y)}function testRandomUnit(){var a=goog.math.Vec2.randomUnit();assertRoughlyEquals(1,a.magnitude(),1e-10)}function testRandom(){var a=goog.math.Vec2.random();assertTrue(1>=a.magnitude())}function testClone(){var a=new goog.math.Vec2(1,2),b=a.clone();assertEquals(a.x,b.x);assertEquals(a.y,b.y)}function testMagnitude(){var a=new goog.math.Vec2(0,10),b=new goog.math.Vec2(3,4);assertEquals(10,a.magnitude());assertEquals(5,b.magnitude())}function testSquaredMagnitude(){var a=new goog.math.Vec2(-3,-4);assertEquals(25,a.squaredMagnitude())}function testScaleFactor(){var a=new goog.math.Vec2(1,2),scaled=a.scale(.5);assertTrue("The type of the return value should be goog.math.Vec2",scaled instanceof goog.math.Vec2);assertVectorEquals(new goog.math.Vec2(.5,1),a)}function testScaleXY(){var a=new goog.math.Vec2(10,15),scaled=a.scale(2,3);assertEquals("The function should return the target instance",a,scaled);assertTrue("The type of the return value should be goog.math.Vec2",scaled instanceof goog.math.Vec2);assertVectorEquals(new goog.math.Vec2(20,45),a)}function testInvert(){var a=new goog.math.Vec2(3,4);a.invert();assertEquals(-3,a.x);assertEquals(-4,a.y)}function testNormalize(){var a=new goog.math.Vec2(5,5);a.normalize();assertRoughlyEquals(1,a.magnitude(),1e-10)}function testAdd(){var a=new goog.math.Vec2(1,-1);a.add(new goog.math.Vec2(3,3));assertVectorEquals(new goog.math.Vec2(4,2),a)}function testSubtract(){var a=new goog.math.Vec2(1,-1);a.subtract(new goog.math.Vec2(3,3));assertVectorEquals(new goog.math.Vec2(-2,-4),a)}function testRotate(){var _MathPI=Math.PI,a=new goog.math.Vec2(1,-1);a.rotate(_MathPI/2);assertRoughlyEquals(1,a.x,1e-6);assertRoughlyEquals(1,a.y,1e-6);a.rotate(-_MathPI);assertRoughlyEquals(-1,a.x,1e-6);assertRoughlyEquals(-1,a.y,1e-6)}function testRotateAroundPoint(){var a=goog.math.Vec2.rotateAroundPoint(new goog.math.Vec2(1,-1),new goog.math.Vec2(1,0),Math.PI/2);assertRoughlyEquals(2,a.x,1e-6);assertRoughlyEquals(0,a.y,1e-6)}function testEquals(){var a=new goog.math.Vec2(1,2);assertFalse(a.equals(null));assertFalse(a.equals({}));assertFalse(a.equals(new goog.math.Vec2(1,3)));assertFalse(a.equals(new goog.math.Vec2(2,2)));assertTrue(a.equals(a));assertTrue(a.equals(new goog.math.Vec2(1,2)))}function testSum(){var a=new goog.math.Vec2(.5,.25),b=new goog.math.Vec2(.5,.75),c=goog.math.Vec2.sum(a,b);assertVectorEquals(new goog.math.Vec2(1,1),c)}function testDifference(){var a=new goog.math.Vec2(.5,.25),b=new goog.math.Vec2(.5,.75),c=goog.math.Vec2.difference(a,b);assertVectorEquals(new goog.math.Vec2(0,-.5),c)}function testDistance(){var a=new goog.math.Vec2(3,4),b=new goog.math.Vec2(-3,-4);assertEquals(10,goog.math.Vec2.distance(a,b))}function testSquaredDistance(){var a=new goog.math.Vec2(3,4),b=new goog.math.Vec2(-3,-4);assertEquals(100,goog.math.Vec2.squaredDistance(a,b))}function testVec2Equals(){assertTrue(goog.math.Vec2.equals(null,null));assertFalse(goog.math.Vec2.equals(null,new goog.math.Vec2));var a=new goog.math.Vec2(1,3);assertTrue(goog.math.Vec2.equals(a,a));assertTrue(goog.math.Vec2.equals(a,new goog.math.Vec2(1,3)));assertFalse(goog.math.Vec2.equals(1,new goog.math.Vec2(3,1)))}function testDot(){var a=new goog.math.Vec2(0,5),b=new goog.math.Vec2(3,0);assertEquals(0,goog.math.Vec2.dot(a,b));var c=new goog.math.Vec2(-5,-5),d=new goog.math.Vec2(0,7);assertEquals(-35,goog.math.Vec2.dot(c,d))}function testDeterminant(){var a=new goog.math.Vec2(0,5),b=new goog.math.Vec2(0,10);assertEquals(0,goog.math.Vec2.determinant(a,b));var c=new goog.math.Vec2(0,5),d=new goog.math.Vec2(10,0);assertEquals(-50,goog.math.Vec2.determinant(c,d));var e=new goog.math.Vec2(-5,-5),f=new goog.math.Vec2(0,7);assertEquals(-35,goog.math.Vec2.determinant(e,f))}function testLerp(){for(var a=new goog.math.Vec2(0,0),b=new goog.math.Vec2(10,10),i=0,c;10>=i;i++){c=goog.math.Vec2.lerp(a,b,i/10);assertEquals(i,c.x);assertEquals(i,c.y)}}function testToString(){testEquals("(0, 0)",new goog.math.Vec2(0,0).toString())}