goog.provide("goog.vec.mat4fTest");goog.setTestOnly("goog.vec.mat4fTest");goog.require("goog.vec.Quaternion");goog.require("goog.vec.mat4f");goog.require("goog.testing.jsunit");var randommat4f=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),.8025078773498535,.7559120655059814,.15274643898010254,.19196106493473053,.0890120416879654,.15422114729881287,.09754583984613419,.44862601161003113,.9196512699127197,.5310639142990112,.8962187170982361,.280601441860199,.594650387763977,.4134795069694519,.06632178276777267,.8837796449661255);function testCreate(){var m=goog.vec.mat4f.create();assertElementsEquals([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],m)}function testCreateIdentity(){var m=goog.vec.mat4f.createIdentity();assertElementsEquals([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],m)}function testSet(){var m0=goog.vec.mat4f.create(),m1=goog.vec.mat4f.setFromArray(goog.vec.mat4f.create(),[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);goog.vec.mat4f.setFromArray(m0,m1);assertElementsEquals([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],m0);goog.vec.mat4f.setFromValues(m0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17);assertElementsEquals([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],m0)}function testSetDiagonal(){var m0=goog.vec.mat4f.create();goog.vec.mat4f.setDiagonalValues(m0,1,2,3,4);assertElementsEquals([1,0,0,0,0,2,0,0,0,0,3,0,0,0,0,4],m0);goog.vec.mat4f.setDiagonal(m0,[4,5,6,7]);assertElementsEquals([4,0,0,0,0,5,0,0,0,0,6,0,0,0,0,7],m0)}function testGetDiagonal(){var v0=goog.vec.vec4f.create(),m0=goog.vec.mat4f.create();goog.vec.mat4f.setFromArray(m0,[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);goog.vec.mat4f.getDiagonal(m0,v0);assertElementsEquals([0,5,10,15],v0);goog.vec.vec4f.setFromArray(v0,[0,0,0,0]);goog.vec.mat4f.getDiagonal(m0,v0,1);assertElementsEquals([4,9,14,0],v0);goog.vec.vec4f.setFromArray(v0,[0,0,0,0]);goog.vec.mat4f.getDiagonal(m0,v0,2);assertElementsEquals([8,13,0,0],v0);goog.vec.vec4f.setFromArray(v0,[0,0,0,0]);goog.vec.mat4f.getDiagonal(m0,v0,3);assertElementsEquals([12,0,0,0],v0);goog.vec.vec4f.setFromArray(v0,[0,0,0,0]);goog.vec.mat4f.getDiagonal(m0,v0,4);assertElementsEquals([0,0,0,0],v0);goog.vec.vec4f.setFromArray(v0,[0,0,0,0]);goog.vec.mat4f.getDiagonal(m0,v0,-1);assertElementsEquals([1,6,11,0],v0);goog.vec.vec4f.setFromArray(v0,[0,0,0,0]);goog.vec.mat4f.getDiagonal(m0,v0,-2);assertElementsEquals([2,7,0,0],v0);goog.vec.vec4f.setFromArray(v0,[0,0,0,0]);goog.vec.mat4f.getDiagonal(m0,v0,-3);assertElementsEquals([3,0,0,0],v0);goog.vec.vec4f.setFromArray(v0,[0,0,0,0]);goog.vec.mat4f.getDiagonal(m0,v0,-4);assertElementsEquals([0,0,0,0],v0)}function testSetGetColumn(){var m0=goog.vec.mat4f.create();goog.vec.mat4f.setColumn(m0,0,[1,2,3,4]);goog.vec.mat4f.setColumn(m0,1,[5,6,7,8]);goog.vec.mat4f.setColumn(m0,2,[9,10,11,12]);goog.vec.mat4f.setColumn(m0,3,[13,14,15,16]);assertElementsEquals([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],m0);var v0=[0,0,0,0];goog.vec.mat4f.getColumn(m0,0,v0);assertElementsEquals([1,2,3,4],v0);goog.vec.mat4f.getColumn(m0,1,v0);assertElementsEquals([5,6,7,8],v0);goog.vec.mat4f.getColumn(m0,2,v0);assertElementsEquals([9,10,11,12],v0);goog.vec.mat4f.getColumn(m0,3,v0);assertElementsEquals([13,14,15,16],v0)}function testSetGetColumns(){var m0=goog.vec.mat4f.create();goog.vec.mat4f.setColumns(m0,[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16]);assertElementsEquals([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],m0);var v0=[0,0,0,0],v1=[0,0,0,0],v2=[0,0,0,0],v3=[0,0,0,0];goog.vec.mat4f.getColumns(m0,v0,v1,v2,v3);assertElementsEquals([1,2,3,4],v0);assertElementsEquals([5,6,7,8],v1);assertElementsEquals([9,10,11,12],v2);assertElementsEquals([13,14,15,16],v3)}function testSetGetRow(){var m0=goog.vec.mat4f.create();goog.vec.mat4f.setRow(m0,0,[1,2,3,4]);goog.vec.mat4f.setRow(m0,1,[5,6,7,8]);goog.vec.mat4f.setRow(m0,2,[9,10,11,12]);goog.vec.mat4f.setRow(m0,3,[13,14,15,16]);assertElementsEquals([1,5,9,13,2,6,10,14,3,7,11,15,4,8,12,16],m0);var v0=[0,0,0,0];goog.vec.mat4f.getRow(m0,0,v0);assertElementsEquals([1,2,3,4],v0);goog.vec.mat4f.getRow(m0,1,v0);assertElementsEquals([5,6,7,8],v0);goog.vec.mat4f.getRow(m0,2,v0);assertElementsEquals([9,10,11,12],v0);goog.vec.mat4f.getRow(m0,3,v0);assertElementsEquals([13,14,15,16],v0)}function testSetGetRows(){var m0=goog.vec.mat4f.create();goog.vec.mat4f.setRows(m0,[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16]);assertElementsEquals([1,5,9,13,2,6,10,14,3,7,11,15,4,8,12,16],m0);var v0=[0,0,0,0],v1=[0,0,0,0],v2=[0,0,0,0],v3=[0,0,0,0];goog.vec.mat4f.getRows(m0,v0,v1,v2,v3);assertElementsEquals([1,2,3,4],v0);assertElementsEquals([5,6,7,8],v1);assertElementsEquals([9,10,11,12],v2);assertElementsEquals([13,14,15,16],v3)}function testMakeZero(){var m0=goog.vec.mat4f.setFromArray(goog.vec.mat4f.create(),[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);assertElementsEquals([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],m0);goog.vec.mat4f.makeZero(m0);assertElementsEquals([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],m0)}function testMakeIdentity(){var m0=goog.vec.mat4f.create();goog.vec.mat4f.makeIdentity(m0);assertElementsEquals([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],m0)}function testSetGetElement(){for(var m0=goog.vec.mat4f.create(),r=0;4>r;r++){for(var c=0,value;4>c;c++){value=4*c+r+1;goog.vec.mat4f.setElement(m0,r,c,value);assertEquals(value,goog.vec.mat4f.getElement(m0,r,c))}}assertElementsEquals([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],m0)}function testAddMat(){var m0=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),m1=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),9,10,11,12,13,14,15,16,1,2,3,4,5,6,7,8),m2=goog.vec.mat4f.create();goog.vec.mat4f.addMat(m0,m1,m2);assertElementsEquals([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],m0);assertElementsEquals([9,10,11,12,13,14,15,16,1,2,3,4,5,6,7,8],m1);assertElementsEquals([10,12,14,16,18,20,22,24,10,12,14,16,18,20,22,24],m2);goog.vec.mat4f.addMat(m0,m1,m0);assertElementsEquals([9,10,11,12,13,14,15,16,1,2,3,4,5,6,7,8],m1);assertElementsEquals([10,12,14,16,18,20,22,24,10,12,14,16,18,20,22,24],m0)}function testSubMat(){var m0=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),m1=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),9,10,11,12,13,14,15,16,1,2,3,4,5,6,7,8),m2=goog.vec.mat4f.create();goog.vec.mat4f.subMat(m0,m1,m2);assertElementsEquals([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],m0);assertElementsEquals([9,10,11,12,13,14,15,16,1,2,3,4,5,6,7,8],m1);assertElementsEquals([-8,-8,-8,-8,-8,-8,-8,-8,8,8,8,8,8,8,8,8],m2);goog.vec.mat4f.subMat(m1,m0,m1);assertElementsEquals([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],m0);assertElementsEquals([8,8,8,8,8,8,8,8,-8,-8,-8,-8,-8,-8,-8,-8],m1)}function testMultScalar(){var m0=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),m1=goog.vec.mat4f.create();goog.vec.mat4f.multScalar(m0,2,m1);assertElementsEquals([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],m0);assertElementsEquals([2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32],m1);goog.vec.mat4f.multScalar(m0,5,m0);assertElementsEquals([5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80],m0)}function testMultMat(){var m0=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),m1=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),m2=goog.vec.mat4f.create();goog.vec.mat4f.multMat(m0,m1,m2);assertElementsEquals([90,100,110,120,202,228,254,280,314,356,398,440,426,484,542,600],m2);goog.vec.mat4f.multScalar(m1,2,m1);goog.vec.mat4f.multMat(m1,m0,m1);assertElementsEquals([180,200,220,240,404,456,508,560,628,712,796,880,852,968,1084,1200],m1)}function testTranspose(){var m0=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),m1=goog.vec.mat4f.create();goog.vec.mat4f.transpose(m0,m1);assertElementsEquals([1,5,9,13,2,6,10,14,3,7,11,15,4,8,12,16],m1);goog.vec.mat4f.transpose(m1,m1);assertElementsEquals([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],m1)}function testDeterminant(){var m0=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1);assertEquals(0,goog.vec.mat4f.determinant(m0));assertElementsEquals([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],m0);goog.vec.mat4f.setFromValues(m0,1,2,3,4,2,3,4,1,3,4,1,2,4,1,2,3);assertEquals(160,goog.vec.mat4f.determinant(m0));assertElementsEquals([1,2,3,4,2,3,4,1,3,4,1,2,4,1,2,3],m0)}function testInvert(){var m0=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1);assertFalse(goog.vec.mat4f.invert(m0,m0));assertElementsEquals([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],m0);goog.vec.mat4f.setFromValues(m0,1,2,3,4,2,3,4,1,3,4,1,2,4,1,2,3);assertTrue(goog.vec.mat4f.invert(m0,m0));assertElementsRoughlyEqual([-.225,.025,.025,.275,.025,.025,.275,-.225,.025,.275,-.225,.025,.275,-.225,.025,.025],m0,goog.vec.EPSILON);goog.vec.mat4f.makeScale(m0,.01,.01,.01);assertTrue(goog.vec.mat4f.invert(m0,m0));var m1=goog.vec.mat4f.create();goog.vec.mat4f.makeScale(m1,100,100,100);assertElementsEquals(m1,m0)}function testEquals(){var m0=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),m1=goog.vec.mat4f.setFromMat4f(goog.vec.mat4f.create(),m0);assertTrue(goog.vec.mat4f.equals(m0,m1));assertTrue(goog.vec.mat4f.equals(m1,m0));for(var i=0;16>i;i++){m1[i]=18;assertFalse(goog.vec.mat4f.equals(m0,m1));assertFalse(goog.vec.mat4f.equals(m1,m0));m1[i]=i+1}}function testMultVec3(){var m0=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),v0=[1,2,3],v1=[0,0,0];goog.vec.mat4f.multVec3(m0,v0,v1);assertElementsEquals([1,2,3],v0);assertElementsEquals([51,58,65],v1);goog.vec.mat4f.multVec3(m0,v0,v0);assertElementsEquals([51,58,65],v0)}function testMultVec3NoTranslate(){var m0=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),v0=[1,2,3],v1=[0,0,0];goog.vec.mat4f.multVec3NoTranslate(m0,v0,v1);assertElementsEquals([1,2,3],v0);assertElementsEquals([38,44,50],v1);goog.vec.mat4f.multVec3NoTranslate(m0,v0,v0);assertElementsEquals([38,44,50],v0)}function testMultVec3Projective(){var m0=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),v0=[1,2,3],v1=[0,0,0],invw=1/72;goog.vec.mat4f.multVec3Projective(m0,v0,v1);assertElementsEquals([1,2,3],v0);assertElementsEquals([51*invw,58*invw,65*invw],v1);goog.vec.mat4f.multVec3Projective(m0,v0,v0);assertElementsEquals([51*invw,58*invw,65*invw],v0)}function testMultVec4(){var m0=goog.vec.mat4f.setFromValues(goog.vec.mat4f.create(),1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),v0=[1,2,3,4],v1=[0,0,0,0];goog.vec.mat4f.multVec4(m0,v0,v1);assertElementsEquals([90,100,110,120],v1);goog.vec.mat4f.multVec4(m0,v0,v0);assertElementsEquals([90,100,110,120],v0)}function testSetValues(){var a0=goog.vec.mat4f.create();assertElementsEquals([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],a0);a0=goog.vec.mat4f.setFromArray(goog.vec.mat4f.create(),[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);assertElementsEquals([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],a0);var a1=goog.vec.mat4f.create();goog.vec.mat4f.setDiagonalValues(a1,1,2,3,4);assertElementsEquals([1,0,0,0,0,2,0,0,0,0,3,0,0,0,0,4],a1);goog.vec.mat4f.setColumnValues(a1,0,2,3,4,5);goog.vec.mat4f.setColumnValues(a1,1,6,7,8,9);goog.vec.mat4f.setColumnValues(a1,2,10,11,12,13);goog.vec.mat4f.setColumnValues(a1,3,14,15,16,1);assertElementsEquals([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1],a1);goog.vec.mat4f.setRowValues(a1,0,1,5,9,13);goog.vec.mat4f.setRowValues(a1,1,2,6,10,14);goog.vec.mat4f.setRowValues(a1,2,3,7,11,15);goog.vec.mat4f.setRowValues(a1,3,4,8,12,16);assertElementsEquals([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],a1)}function testMakeTranslate(){var m0=goog.vec.mat4f.create();goog.vec.mat4f.makeTranslate(m0,3,4,5);assertElementsEquals([1,0,0,0,0,1,0,0,0,0,1,0,3,4,5,1],m0)}function testMakeScale(){var m0=goog.vec.mat4f.create();goog.vec.mat4f.makeScale(m0,3,4,5);assertElementsEquals([3,0,0,0,0,4,0,0,0,0,5,0,0,0,0,1],m0)}function testMakeRotate(){var _MathPI=Math.PI,m0=goog.vec.mat4f.create();goog.vec.mat4f.makeRotate(m0,_MathPI/2,0,0,1);assertElementsRoughlyEqual([0,1,0,0,-1,0,0,0,0,0,1,0,0,0,0,1],m0,goog.vec.EPSILON);var m1=goog.vec.mat4f.create();goog.vec.mat4f.makeRotate(m1,-_MathPI/4,0,0,1);goog.vec.mat4f.multMat(m0,m1,m1);assertElementsRoughlyEqual([.7071068,.7071068,0,0,-.7071068,.7071068,0,0,0,0,1,0,0,0,0,1],m1,goog.vec.EPSILON)}function testMakeRotateX(){var _MathPI2=Math.PI,m0=goog.vec.mat4f.create(),m1=goog.vec.mat4f.create();goog.vec.mat4f.makeRotateX(m0,_MathPI2/7);goog.vec.mat4f.makeRotate(m1,_MathPI2/7,1,0,0);assertElementsRoughlyEqual(m0,m1,goog.vec.EPSILON)}function testMakeRotateY(){var _MathPI3=Math.PI,m0=goog.vec.mat4f.create(),m1=goog.vec.mat4f.create();goog.vec.mat4f.makeRotateY(m0,_MathPI3/7);goog.vec.mat4f.makeRotate(m1,_MathPI3/7,0,1,0);assertElementsRoughlyEqual(m0,m1,goog.vec.EPSILON)}function testMakeRotateZ(){var _MathPI4=Math.PI,m0=goog.vec.mat4f.create(),m1=goog.vec.mat4f.create();goog.vec.mat4f.makeRotateZ(m0,_MathPI4/7);goog.vec.mat4f.makeRotate(m1,_MathPI4/7,0,0,1);assertElementsRoughlyEqual(m0,m1,goog.vec.EPSILON)}function testTranslate(){var m0=goog.vec.mat4f.makeIdentity(goog.vec.mat4f.create());goog.vec.mat4f.translate(m0,3,4,5);assertElementsEquals([1,0,0,0,0,1,0,0,0,0,1,0,3,4,5,1],m0);goog.vec.mat4f.setFromValues(m0,1,2,3,4,2,3,4,1,3,4,1,2,4,1,2,3);var m1=goog.vec.mat4f.create();goog.vec.mat4f.makeTranslate(m1,5,6,7);var m2=goog.vec.mat4f.create();goog.vec.mat4f.multMat(m0,m1,m2);goog.vec.mat4f.translate(m0,5,6,7);assertElementsEquals(m2,m0)}function testScale(){var m0=goog.vec.mat4f.makeIdentity(goog.vec.mat4f.create());goog.vec.mat4f.scale(m0,3,4,5);assertElementsEquals([3,0,0,0,0,4,0,0,0,0,5,0,0,0,0,1],m0)}function testRotate(){var _MathPI5=Math.PI,m0=goog.vec.mat4f.makeIdentity(goog.vec.mat4f.create());goog.vec.mat4f.rotate(m0,_MathPI5/2,0,0,1);assertElementsRoughlyEqual([0,1,0,0,-1,0,0,0,0,0,1,0,0,0,0,1],m0,goog.vec.EPSILON);goog.vec.mat4f.rotate(m0,-_MathPI5/4,0,0,1);assertElementsRoughlyEqual([.7071068,.7071068,0,0,-.7071068,.7071068,0,0,0,0,1,0,0,0,0,1],m0,goog.vec.EPSILON)}function testRotateX(){var _MathPI6=Math.PI,m0=goog.vec.mat4f.create(),m1=goog.vec.mat4f.setFromArray(goog.vec.mat4f.create(),randommat4f);goog.vec.mat4f.makeRotateX(m0,_MathPI6/7);goog.vec.mat4f.multMat(m1,m0,m0);goog.vec.mat4f.rotateX(m1,_MathPI6/7);assertElementsRoughlyEqual(m0,m1,goog.vec.EPSILON)}function testRotateY(){var _MathPI7=Math.PI,m0=goog.vec.mat4f.create(),m1=goog.vec.mat4f.setFromArray(goog.vec.mat4f.create(),randommat4f);goog.vec.mat4f.makeRotateY(m0,_MathPI7/7);goog.vec.mat4f.multMat(m1,m0,m0);goog.vec.mat4f.rotateY(m1,_MathPI7/7);assertElementsRoughlyEqual(m0,m1,goog.vec.EPSILON)}function testRotateZ(){var _MathPI8=Math.PI,m0=goog.vec.mat4f.create(),m1=goog.vec.mat4f.setFromArray(goog.vec.mat4f.create(),randommat4f);goog.vec.mat4f.makeRotateZ(m0,_MathPI8/7);goog.vec.mat4f.multMat(m1,m0,m0);goog.vec.mat4f.rotateZ(m1,_MathPI8/7);assertElementsRoughlyEqual(m0,m1,goog.vec.EPSILON)}function testMakeRotationTranslation(){var _MathPI9=Math.PI,m0=goog.vec.mat4f.makeIdentity(goog.vec.mat4f.create());goog.vec.mat4f.translate(m0,3,4,5);goog.vec.mat4f.rotate(m0,_MathPI9/2,3/13,4/13,12/13);var m1=goog.vec.mat4f.create(),q=goog.vec.Quaternion.createFloat32(),axis=goog.vec.vec3f.createFromValues(3/13,4/13,12/13);goog.vec.Quaternion.fromAngleAxis(_MathPI9/2,axis,q);var v=goog.vec.vec3f.createFromValues(3,4,5);goog.vec.mat4f.makeRotationTranslation(m1,q,v);assertElementsRoughlyEqual(m0,m1,goog.vec.EPSILON)}function testMakeRotationTranslationScale(){var _MathPI10=Math.PI,m0=goog.vec.mat4f.makeIdentity(goog.vec.mat4f.create());goog.vec.mat4f.translate(m0,3,4,5);goog.vec.mat4f.rotate(m0,_MathPI10/2,3/13,4/13,12/13);goog.vec.mat4f.scale(m0,6,7,8);var m1=goog.vec.mat4f.create(),q=goog.vec.Quaternion.createFloat32(),axis=goog.vec.vec3f.createFromValues(3/13,4/13,12/13);goog.vec.Quaternion.fromAngleAxis(_MathPI10/2,axis,q);var v=goog.vec.vec3f.createFromValues(3,4,5),s=goog.vec.vec3f.createFromValues(6,7,8);goog.vec.mat4f.makeRotationTranslationScale(m1,q,v,s);assertElementsRoughlyEqual(m0,m1,goog.vec.EPSILON)}function testMakeRotationTranslationScaleOrigin(){var _MathPI11=Math.PI,m0=goog.vec.mat4f.makeIdentity(goog.vec.mat4f.create());goog.vec.mat4f.translate(m0,3,4,5);goog.vec.mat4f.translate(m0,9,10,-11);goog.vec.mat4f.rotate(m0,_MathPI11/2,3/13,4/13,12/13);goog.vec.mat4f.scale(m0,6,7,8);goog.vec.mat4f.translate(m0,-9,-10,11);var m1=goog.vec.mat4f.create(),q=goog.vec.Quaternion.createFloat32(),axis=goog.vec.vec3f.createFromValues(3/13,4/13,12/13);goog.vec.Quaternion.fromAngleAxis(_MathPI11/2,axis,q);var v=goog.vec.vec3f.createFromValues(3,4,5),s=goog.vec.vec3f.createFromValues(6,7,8),o=goog.vec.vec3f.createFromValues(9,10,-11);goog.vec.mat4f.makeRotationTranslationScaleOrigin(m1,q,v,s,o);assertElementsRoughlyEqual(m0,m1,1e-5)}function testGetTranslation(){var mat=goog.vec.mat4f.setFromArray(goog.vec.mat4f.create(),randommat4f),translation=goog.vec.vec3f.create();goog.vec.mat4f.getTranslation(mat,translation);assertElementsRoughlyEqual([.59465038776,.413479506969,.0663217827677],translation,goog.vec.EPSILON)}function testMakeFrustum(){var m0=goog.vec.mat4f.create();goog.vec.mat4f.makeFrustum(m0,-1,2,-2,1,.1,1.1);assertElementsRoughlyEqual([.06666666,0,0,0,0,.06666666,0,0,.33333333,-.33333333,-1.2,-1,0,0,-.22,0],m0,goog.vec.EPSILON)}function testMakePerspective(){var m0=goog.vec.mat4f.create();goog.vec.mat4f.makePerspective(m0,90*Math.PI/180,2,.1,1.1);assertElementsRoughlyEqual([.5,0,0,0,0,1,0,0,0,0,-1.2,-1,0,0,-.22,0],m0,goog.vec.EPSILON)}function testMakeOrtho(){var m0=goog.vec.mat4f.create();goog.vec.mat4f.makeOrtho(m0,-1,2,-2,1,.1,1.1);assertElementsRoughlyEqual([.6666666,0,0,0,0,.6666666,0,0,0,0,-2,0,-.333333,.3333333,-1.2,1],m0,goog.vec.EPSILON)}function testMakeEulerZXZ(){var _MathPI12=Math.PI,m0=goog.vec.mat4f.create(),roll=.200982*2*_MathPI12,tilt=.915833*_MathPI12,yaw=.839392*2*_MathPI12;goog.vec.mat4f.makeRotate(m0,roll,0,0,1);goog.vec.mat4f.rotate(m0,tilt,1,0,0);goog.vec.mat4f.rotate(m0,yaw,0,0,1);var m1=goog.vec.mat4f.create();goog.vec.mat4f.makeEulerZXZ(m1,roll,tilt,yaw);assertElementsRoughlyEqual(m0,m1,goog.vec.EPSILON);var euler=[0,0,0];goog.vec.mat4f.toEulerZXZ(m0,euler);assertRoughlyEquals(roll,euler[0],goog.vec.EPSILON);assertRoughlyEquals(tilt,euler[1],goog.vec.EPSILON);assertRoughlyEquals(yaw,euler[2],goog.vec.EPSILON);goog.vec.mat4f.makeRotate(m0,roll,0,0,1);goog.vec.mat4f.rotate(m0,-tilt,1,0,0);goog.vec.mat4f.rotate(m0,yaw,0,0,1);goog.vec.mat4f.makeEulerZXZ(m1,roll,-tilt,yaw);assertElementsRoughlyEqual(m0,m1,goog.vec.EPSILON);var euler=[0,0,0];goog.vec.mat4f.toEulerZXZ(m0,euler,!0);assertRoughlyEquals(roll,euler[0],goog.vec.EPSILON);assertRoughlyEquals(-tilt,euler[1],goog.vec.EPSILON);assertRoughlyEquals(yaw,euler[2],goog.vec.EPSILON)}function testEulerZXZExtrema(){var _MathPI13=Math.PI,m0=goog.vec.mat4f.setFromArray(goog.vec.mat4f.create(),[1,0,0,0,0,0,-1,0,0,1,0,0,0,0,0,1]),m1=goog.vec.mat4f.setFromArray(goog.vec.mat4f.create(),[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),euler=[0,0,0];goog.vec.mat4f.toEulerZXZ(m0,euler);assertElementsRoughlyEqual([_MathPI13,_MathPI13/2,_MathPI13],euler,goog.vec.EPSILON);goog.vec.mat4f.makeEulerZXZ(m1,euler[0],euler[1],euler[2]);assertElementsRoughlyEqual(m0,m1,goog.vec.EPSILON)}function testLookAt(){var viewMatrix=goog.vec.mat4f.create();goog.vec.mat4f.makeLookAt(viewMatrix,[0,0,0],[1,0,0],[0,1,0]);assertElementsRoughlyEqual([0,0,-1,0,0,1,0,0,1,0,0,0,0,0,0,1],viewMatrix,goog.vec.EPSILON)}function testToLookAt(){var EPSILON=1e-4,eyeExp=[0,0,0],fwdExp=[1,0,0],upExp=[0,1,0],centerExp=[0,0,0];goog.vec.vec3f.add(eyeExp,fwdExp,centerExp);var view=goog.vec.mat4f.create();goog.vec.mat4f.makeLookAt(view,eyeExp,centerExp,upExp);var eyeRes=[0,0,0],fwdRes=[0,0,0],upRes=[0,0,0];goog.vec.mat4f.toLookAt(view,eyeRes,fwdRes,upRes);assertElementsRoughlyEqual(eyeExp,eyeRes,EPSILON);assertElementsRoughlyEqual(fwdExp,fwdRes,EPSILON);assertElementsRoughlyEqual(upExp,upRes,EPSILON)}function testLookAtDecomposition(){var EPSILON=1e-4,viewExp=goog.vec.mat4f.create(),viewRes=goog.vec.mat4f.create(),tmp=goog.vec.mat4f.setFromArray(goog.vec.mat4f.create(),randommat4f),eyeExp=[0,0,0],fwdExp=[0,0,0],upExp=[0,0,0],centerExp=[0,0,0];goog.vec.mat4f.toLookAt(tmp,eyeExp,fwdExp,upExp);goog.vec.vec3f.add(eyeExp,fwdExp,centerExp);goog.vec.mat4f.makeLookAt(viewExp,eyeExp,centerExp,upExp);var eyeRes=[0,0,0],fwdRes=[0,0,0],upRes=[0,0,0],centerRes=[0,0,0];goog.vec.mat4f.toLookAt(viewExp,eyeRes,fwdRes,upRes);goog.vec.vec3f.add(eyeRes,fwdRes,centerRes);goog.vec.mat4f.makeLookAt(viewRes,eyeRes,centerRes,upRes);assertElementsRoughlyEqual(eyeExp,eyeRes,EPSILON);assertElementsRoughlyEqual(fwdExp,fwdRes,EPSILON);assertElementsRoughlyEqual(upExp,upRes,EPSILON);assertElementsRoughlyEqual(viewExp,viewRes,EPSILON)}