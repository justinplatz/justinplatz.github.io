goog.provide("goog.events.BrowserEventTest");goog.setTestOnly("goog.events.BrowserEventTest");goog.require("goog.events.BrowserEvent");goog.require("goog.events.BrowserFeature");goog.require("goog.math.Coordinate");goog.require("goog.testing.PropertyReplacer");goog.require("goog.testing.jsunit");goog.require("goog.userAgent");var stubs=new goog.testing.PropertyReplacer,Button=goog.events.BrowserEvent.MouseButton;function setUp(){stubs.reset()}function testInvalidNodeBug(){if(!goog.userAgent.GECKO)return;var event={relatedTarget:{}};event.relatedTarget.__defineGetter__("nodeName",function(){throw Error("https://bugzilla.mozilla.org/show_bug.cgi?id=497780")});assertThrows(function(){return event.relatedTarget.nodeName});var bEvent=new goog.events.BrowserEvent(event);assertEquals(event,bEvent.event_);assertNull(bEvent.relatedTarget)}function testPreventDefault(){var event={defaultPrevented:!1},bEvent=new goog.events.BrowserEvent(event);assertFalse(bEvent.defaultPrevented);bEvent.preventDefault();assertTrue(bEvent.defaultPrevented)}function testDefaultPrevented(){var event={defaultPrevented:!0},bEvent=new goog.events.BrowserEvent(event);assertTrue(bEvent.defaultPrevented)}function testIsButtonIe(){stubs.set(goog.events.BrowserFeature,"HAS_W3C_BUTTON",!1);assertIsButton(createMouseEvent("mousedown",1),Button.LEFT,!0);assertIsButton(createMouseEvent("click",0),Button.LEFT,!0);assertIsButton(createMouseEvent("mousedown",2),Button.RIGHT,!1);assertIsButton(createMouseEvent("mousedown",4),Button.MIDDLE,!1)}function testIsButtonWebkitMac(){stubs.set(goog.events.BrowserFeature,"HAS_W3C_BUTTON",!0);stubs.set(goog.userAgent,"WEBKIT",!0);stubs.set(goog.userAgent,"MAC",!0);assertIsButton(createMouseEvent("mousedown",0),Button.LEFT,!0);assertIsButton(createMouseEvent("mousedown",0,!0),Button.LEFT,!1);assertIsButton(createMouseEvent("mousedown",2),Button.RIGHT,!1);assertIsButton(createMouseEvent("mousedown",2,!0),Button.RIGHT,!1);assertIsButton(createMouseEvent("mousedown",1),Button.MIDDLE,!1);assertIsButton(createMouseEvent("mousedown",1,!0),Button.MIDDLE,!1)}function testIsButtonGecko(){stubs.set(goog.events.BrowserFeature,"HAS_W3C_BUTTON",!0);stubs.set(goog.userAgent,"GECKO",!0);stubs.set(goog.userAgent,"MAC",!0);assertIsButton(createMouseEvent("mousedown",0),Button.LEFT,!0);assertIsButton(createMouseEvent("mousedown",2,!0),Button.RIGHT,!1)}function testTouchEventHandling(){var clientCoords=new goog.math.Coordinate(5,5),screenCoords=new goog.math.Coordinate(10,10),target=document.body,touchStart=createTouchEvent("touchstart",target,clientCoords,screenCoords),touchMove=createTouchEvent("touchmove",target,clientCoords,screenCoords),touchEnd=createTouchEvent("touchend",target,clientCoords,screenCoords),touchCancel=createTouchEvent("touchcancel",target,clientCoords,screenCoords);assertEquals(clientCoords.x,touchStart.clientX);assertEquals(clientCoords.y,touchStart.clientY);assertEquals(target,touchStart.target);assertEquals(screenCoords.x,touchMove.screenX);assertEquals(screenCoords.y,touchMove.screenY);assertEquals(clientCoords.x,touchEnd.clientX);assertEquals(clientCoords.y,touchEnd.clientY);assertEquals(screenCoords.x,touchCancel.screenX);assertEquals(screenCoords.y,touchCancel.screenY);assertEquals(target,touchCancel.target)}function createMouseEvent(type,button,opt_ctrlKey){return new goog.events.BrowserEvent({type:type,button:button,ctrlKey:!!opt_ctrlKey})}function createTouchEvent(type,target,clientCoords,screenCoords){return new goog.events.BrowserEvent({type:type,target:target,changedTouches:[{clientX:clientCoords.x,clientY:clientCoords.y,screenX:screenCoords.x,screenY:screenCoords.y}]})}function assertIsButton(event,button,isActionButton){for(var key in Button){assertEquals("Testing isButton("+key+") against "+button+" and type "+event.type,Button[key]==button,event.isButton(Button[key]))}assertEquals(isActionButton,event.isMouseActionButton())}