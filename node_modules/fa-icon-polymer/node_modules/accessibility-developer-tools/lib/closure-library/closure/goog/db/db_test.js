goog.provide("goog.dbTest");goog.setTestOnly("goog.dbTest");goog.require("goog.Disposable");goog.require("goog.Promise");goog.require("goog.array");goog.require("goog.db");goog.require("goog.db.Cursor");goog.require("goog.db.Error");goog.require("goog.db.IndexedDb");goog.require("goog.db.KeyRange");goog.require("goog.db.Transaction");goog.require("goog.events");goog.require("goog.object");goog.require("goog.testing.PropertyReplacer");goog.require("goog.testing.asserts");goog.require("goog.testing.jsunit");goog.require("goog.userAgent.product");var idbSupported=goog.userAgent.product.CHROME,dbName,dbBaseName="testDb",globalDb=null,dbsToClose=[],propertyReplacer,baseVersion=1,dbVersion=1,TransactionMode=goog.db.Transaction.TransactionMode,EventTypes=goog.db.Transaction.EventTypes;function openDatabase(){return goog.db.openDatabase(dbName).addCallback(function(db){dbsToClose.push(db)})}function incrementVersion(db,onUpgradeNeeded){db.close();var onBlocked=function(ev){fail("Upgrade to version "+dbVersion+" is blocked.")};return goog.db.openDatabase(dbName,++dbVersion,onUpgradeNeeded,onBlocked).addCallback(function(db){dbsToClose.push(db);assertEquals(dbVersion,db.getVersion())})}function addStore(db){return incrementVersion(db,function(ev,db,tx){db.createObjectStore("store")})}function addStoreWithIndex(db){return incrementVersion(db,function(ev,db,tx){var store=db.createObjectStore("store",{keyPath:"key"});store.createIndex("index","value")})}function populateStore(values,keys,db){for(var putTx=db.createTransaction(["store"],TransactionMode.READ_WRITE),store=putTx.objectStore("store"),i=0;i<values.length;++i){store.put(values[i],keys[i])}return putTx.wait()}function populateStoreWithObjects(values,keys,db){var putTx=db.createTransaction(["store"],TransactionMode.READ_WRITE),store=putTx.objectStore("store");goog.array.forEach(values,function(value,index){store.put({key:keys[index],value:value})});return putTx.wait()}function assertStoreValues(values,db){var assertStoreTx=db.createTransaction(["store"]);assertStoreTx.objectStore("store").getAll().addCallback(function(results){assertSameElements(values,results)})}function assertStoreObjectValues(values,db){var assertStoreTx=db.createTransaction(["store"]);assertStoreTx.objectStore("store").getAll().addCallback(function(results){var retrievedValues=goog.array.map(results,function(result){return result.value});assertSameElements(values,retrievedValues)})}function assertStoreValuesAndCursorsDisposed(values,cursors,db){var assertStoreTx=db.createTransaction(["store"]);assertStoreTx.objectStore("store").getAll().addCallback(function(results){assertSameElements(values,results);assertTrue(0<cursors.length);goog.array.forEach(cursors,function(elem,index,array){console.log(elem);assertTrue("array["+index+"] ("+elem+") is not disposed",goog.Disposable.isDisposed(elem))})})}function assertStoreDoesntExist(db){try{db.createTransaction(["store"]);fail("Create transaction with a non-existent store should have failed.")}catch(e){assertEquals(e.getName(),goog.db.Error.ErrorName.NOT_FOUND_ERR)}}function transactionToPromise(db,trx){return new goog.Promise(function(resolve,reject){goog.events.listen(trx,EventTypes.ERROR,reject);goog.events.listen(trx,EventTypes.COMPLETE,function(){resolve(db)})})}function forEachRecord(cursor,onRecordReady){var promises=[];return new goog.Promise(function(resolve,reject){var key=goog.events.listen(cursor,goog.db.Cursor.EventType.NEW_DATA,function(){var result=onRecordReady();if(result&&"then"in result){promises.push(result)}});goog.events.listenOnce(cursor,[goog.db.Cursor.EventType.COMPLETE,goog.db.Cursor.EventType.ERROR],function(evt){goog.events.unlistenByKey(key);if(evt.type==goog.db.Cursor.EventType.COMPLETE){resolve()}else{reject(evt)}})}).then(function(){return goog.Promise.all(promises)})}function failOnErrorEvent(ev){fail(ev.target.message)}function setUpPage(){propertyReplacer=new goog.testing.PropertyReplacer}function setUp(){if(!idbSupported){return}dbName=dbBaseName+Date.now().toString();globalDb=openDatabase()}function tearDown(){for(var i=0;i<dbsToClose.length;i++){dbsToClose[i].close()}dbsToClose=[];propertyReplacer.reset()}function testDatabaseOpened(){if(!idbSupported){return}assertNotNull(globalDb);return globalDb.branch().addCallback(function(db){assertTrue(db.isOpen())})}function testOpenWithNewVersion(){if(!idbSupported){return}var upgradeNeeded=!1;return globalDb.branch().addCallback(function(db){assertEquals(baseVersion,db.getVersion());return incrementVersion(db,function(ev,db,tx){upgradeNeeded=!0})}).addCallback(function(db){assertTrue(upgradeNeeded)})}function testManipulateObjectStores(){if(!idbSupported){return}return globalDb.branch().addCallback(function(db){assertEquals(baseVersion,db.getVersion());return incrementVersion(db,function(ev,db,tx){db.createObjectStore("basicStore");db.createObjectStore("keyPathStore",{keyPath:"keyGoesHere"});db.createObjectStore("autoIncrementStore",{autoIncrement:!0})})}).addCallback(function(db){var storeNames=db.getObjectStoreNames();assertEquals(3,storeNames.length);assertTrue(storeNames.contains("basicStore"));assertTrue(storeNames.contains("keyPathStore"));assertTrue(storeNames.contains("autoIncrementStore"));return incrementVersion(db,function(ev,db,tx){db.deleteObjectStore("basicStore")})}).addCallback(function(db){var storeNames=db.getObjectStoreNames();assertEquals(2,storeNames.length);assertFalse(storeNames.contains("basicStore"));assertTrue(storeNames.contains("keyPathStore"));assertTrue(storeNames.contains("autoIncrementStore"))})}function testBadObjectStoreManipulation(){if(!idbSupported){return}var expectedCode=goog.db.Error.ErrorName.INVALID_STATE_ERR;return globalDb.branch().addCallback(function(db){try{db.createObjectStore("diediedie");fail("Create object store outside transaction should have failed.")}catch(err){assertEquals(expectedCode,err.getName())}}).addCallback(addStore).addCallback(function(db){try{db.deleteObjectStore("store");fail("Delete object store outside transaction should have failed.")}catch(err){assertEquals(expectedCode,err.getName())}}).addCallback(function(db){return incrementVersion(db,function(ev,db,tx){try{db.deleteObjectStore("diediedie");fail("Delete non-existent store should have failed.")}catch(err){assertEquals(goog.db.Error.ErrorName.NOT_FOUND_ERR,err.getName())}})})}function testGetNonExistentObjectStore(){if(!idbSupported){return}return globalDb.branch().addCallback(addStore).addCallback(function(db){var tx=db.createTransaction(["store"]);try{tx.objectStore("diediedie");fail("getting non-existent object store should have failed")}catch(err){assertEquals(goog.db.Error.ErrorName.NOT_FOUND_ERR,err.getName())}})}function testCreateTransaction(){if(!idbSupported){return}return globalDb.branch().addCallback(addStore).addCallback(function(db){var tx=db.createTransaction(["store"]);assertEquals("mode not READ_ONLY",TransactionMode.READ_ONLY,tx.getMode());tx=db.createTransaction(["store"],goog.db.Transaction.TransactionMode.READ_WRITE);assertEquals("mode not READ_WRITE",TransactionMode.READ_WRITE,tx.getMode())})}function testPutRecord(){if(!idbSupported){return}return globalDb.branch().addCallback(addStore).addCallback(function(db){var initialPutTx=db.createTransaction(["store"],TransactionMode.READ_WRITE);initialPutTx.objectStore("store").put({key:"initial",value:"value1"},"putKey");return transactionToPromise(db,initialPutTx)}).addCallback(function(db){var checkResultsTx=db.createTransaction(["store"]),getOperation=checkResultsTx.objectStore("store").get("putKey");getOperation.addCallback(function(result){assertEquals("initial",result.key);assertEquals("value1",result.value)});return transactionToPromise(db,checkResultsTx)}).addCallback(function(db){var overwriteTx=db.createTransaction(["store"],TransactionMode.READ_WRITE);overwriteTx.objectStore("store").put({key:"overwritten",value:"value2"},"putKey");return transactionToPromise(db,overwriteTx)}).addCallback(function(db){var checkOverwriteTx=db.createTransaction(["store"]);checkOverwriteTx.objectStore("store").get("putKey").addCallback(function(result){assertEquals("overwritten",result.key);assertEquals("value2",result.value)});return transactionToPromise(db,checkOverwriteTx)})}function testAddRecord(){if(!idbSupported){return}return globalDb.branch().addCallback(addStore).addCallback(function(db){var initialAddTx=db.createTransaction(["store"],TransactionMode.READ_WRITE);initialAddTx.objectStore("store").add({key:"hi",value:"something"},"stuff");return transactionToPromise(db,initialAddTx)}).addCallback(function(db){var successfulAddTx=db.createTransaction(["store"]),getOperation=successfulAddTx.objectStore("store").get("stuff");getOperation.addCallback(function(result){assertEquals("hi",result.key);assertEquals("something",result.value)});return transactionToPromise(db,successfulAddTx)}).addCallback(function(db){var addOverwriteTx=db.createTransaction(["store"],TransactionMode.READ_WRITE);addOverwriteTx.objectStore("store").add({key:"bye",value:"nothing"},"stuff").addErrback(function(err){assertEquals(goog.db.Error.ErrorName.CONSTRAINT_ERR,err.getName())});return transactionToPromise(db,addOverwriteTx).then(function(){fail("adding existing record should not have succeeded")},function(ev){assertEquals(goog.db.Error.ErrorName.CONSTRAINT_ERR,ev.target.getName())})})}function testPutRecordKeyPathStore(){if(!idbSupported){return}return globalDb.branch().addCallback(function(db){return incrementVersion(db,function(ev,db,tx){db.createObjectStore("keyStore",{keyPath:"key"})})}).addCallback(function(db){var putTx=db.createTransaction(["keyStore"],TransactionMode.READ_WRITE);putTx.objectStore("keyStore").put({key:"hi",value:"something"});return transactionToPromise(db,putTx)}).addCallback(function(db){var checkResultsTx=db.createTransaction(["keyStore"]);checkResultsTx.objectStore("keyStore").get("hi").addCallback(function(result){assertNotUndefined(result);assertEquals("hi",result.key);assertEquals("something",result.value)});return transactionToPromise(db,checkResultsTx)})}function testPutBadRecordKeyPathStore(){if(!idbSupported){return}return globalDb.branch().addCallback(function(db){return incrementVersion(db,function(ev,db,tx){db.createObjectStore("keyStore",{keyPath:"key"})})}).addCallback(function(db){var badTx=db.createTransaction(["keyStore"],TransactionMode.READ_WRITE);return badTx.objectStore("keyStore").put({key:"diedie",value:"anything"},"badKey").then(function(){fail("inserting with explicit key should have failed")},function(err){assertEquals(goog.db.Error.ErrorName.DATA_ERR,err.getName())})})}function testPutRecordAutoIncrementStore(){if(!idbSupported){return}return globalDb.branch().addCallback(function(db){return incrementVersion(db,function(ev,db,tx){db.createObjectStore("aiStore",{autoIncrement:!0})})}).addCallback(function(db){var tx=db.createTransaction(["aiStore"],TransactionMode.READ_WRITE);tx.objectStore("aiStore").put("1");tx.objectStore("aiStore").put("2");tx.objectStore("aiStore").put("3");return transactionToPromise(db,tx)}).addCallback(function(db){var tx=db.createTransaction(["aiStore"]),getAllOperation=tx.objectStore("aiStore").getAll();return getAllOperation.addCallback(function(results){assertEquals(3,results.length);assertNotEquals(-1,results.indexOf("1"));assertNotEquals(-1,results.indexOf("2"));assertNotEquals(-1,results.indexOf("3"))})})}function testPutRecordKeyPathAndAutoIncrementStore(){if(!idbSupported){return}return globalDb.branch().addCallback(function(db){return incrementVersion(db,function(ev,db,tx){db.createObjectStore("hybridStore",{keyPath:"key",autoIncrement:!0})})}).addCallback(function(db){var tx=db.createTransaction(["hybridStore"],TransactionMode.READ_WRITE);return tx.objectStore("hybridStore").put({value:"whatever"}).addCallback(function(){return db})}).addCallback(function(db){var tx=db.createTransaction(["hybridStore"]);return tx.objectStore("hybridStore").getAll().then(function(results){assertEquals(1,results.length);assertEquals("whatever",results[0].value);assertNotUndefined(results[0].key)})})}function testPutIllegalRecords(){if(!idbSupported){return}return globalDb.branch().addCallback(addStore).addCallback(function(db){var tx=db.createTransaction(["store"],TransactionMode.READ_WRITE),promises=[],badKeyFail=function(keyKind){return function(){return fail("putting with "+keyKind+" key should have failed")}},assertExpectedError=function(err){assertEquals(goog.db.Error.ErrorName.DATA_ERR,err.getName())};promises.push(tx.objectStore("store").put("death",null).then(badKeyFail("null"),assertExpectedError));promises.push(tx.objectStore("store").put("death",NaN).then(badKeyFail("NaN"),assertExpectedError));promises.push(tx.objectStore("store").put("death",void 0).then(badKeyFail("undefined"),assertExpectedError));return goog.Promise.all(promises)})}function testPutIllegalRecordsWithIndex(){if(!idbSupported){return}return globalDb.branch().addCallback(addStoreWithIndex).addCallback(function(db){var tx=db.createTransaction(["store"],TransactionMode.READ_WRITE),promises=[],badKeyFail=function(keyKind){return function(){fail("putting with "+keyKind+" key should have failed")}},assertExpectedError=function(err){assertEquals(goog.db.Error.ErrorName.DATA_ERR,err.getName())};promises.push(tx.objectStore("store").put({value:"diediedie",key:null}).then(badKeyFail("null"),assertExpectedError));promises.push(tx.objectStore("store").put({value:"dietodeath",key:NaN}).then(badKeyFail("NaN"),assertExpectedError));promises.push(tx.objectStore("store").put({value:"dietodeath",key:void 0}).then(badKeyFail("undefined"),assertExpectedError));return goog.Promise.all(promises)})}function testDeleteRecord(){if(!idbSupported){return}var db;return globalDb.branch().addCallback(addStore).addCallback(function(openedDb){db=openedDb;return db.createTransaction(["store"],TransactionMode.READ_WRITE).objectStore("store").put({key:"hi",value:"something"},"stuff")}).addCallback(function(){return db.createTransaction(["store"],TransactionMode.READ_WRITE).objectStore("store").remove("stuff")}).addCallback(function(){return db.createTransaction(["store"]).objectStore("store").get("stuff")}).addCallback(function(result){assertUndefined(result)})}function testGetAll(){if(!idbSupported){return}var values=["1","2","3"],keys=["a","b","c"],addData=goog.partial(populateStore,values,keys),checkStore=goog.partial(assertStoreValues,values);return globalDb.branch().addCallback(addStore).addCallback(addData).addCallback(checkStore)}function testGetAllFreesCursor(){if(!idbSupported){return}var values=["1","2","3"],keys=["a","b","c"],addData=goog.partial(populateStore,values,keys),origCursor=goog.db.Cursor,cursors=[],testCursor=function(){origCursor.call(this);cursors.push(this)};goog.object.extend(testCursor,origCursor);testCursor.prototype=origCursor.prototype;propertyReplacer.replace(goog.db,"Cursor",testCursor);var checkStoreAndCursorDisposed=goog.partial(assertStoreValuesAndCursorsDisposed,values,cursors);return globalDb.branch().addCallback(addStore).addCallback(addData).addCallback(checkStoreAndCursorDisposed)}function testObjectStoreCursorGet(){if(!idbSupported){return}var values=["1","2","3","4"],keys=["a","b","c","d"],addData=goog.partial(populateStore,values,keys),db,resultValues=[],resultKeys=[];return globalDb.branch().addCallback(addStore).addCallback(addData).addCallback(function(theDb){db=theDb;var cursorTx=db.createTransaction(["store"]),store=cursorTx.objectStore("store"),cursor=store.openCursor(goog.db.KeyRange.bound("b","c"),goog.db.Cursor.Direction.PREV),whenCursorComplete=forEachRecord(cursor,function(){resultValues.push(cursor.getValue());resultKeys.push(cursor.getKey());cursor.next()});return goog.Promise.all([cursorTx.wait(),whenCursorComplete])}).addCallback(function(){assertArrayEquals(["3","2"],resultValues);assertArrayEquals(["c","b"],resultKeys)})}function testObjectStoreCursorReplace(){if(!idbSupported){return}var values=["1","2","3","4"],keys=["a","b","c","d"],addData=goog.partial(populateStore,values,keys),checkStore=goog.partial(assertStoreValues,["1","2","5","4"]),openCursorAndReplace=function(db){var cursorTx=db.createTransaction(["store"],TransactionMode.READ_WRITE),store=cursorTx.objectStore("store"),cursor=store.openCursor(goog.db.KeyRange.bound("b","c",!0)),whenCursorComplete=forEachRecord(cursor,function(){assertEquals("3",cursor.getValue());return cursor.update("5").addCallback(function(){cursor.next()})});return goog.Promise.all([cursorTx.wait(),whenCursorComplete]).then(function(){return db})};return globalDb.branch().addCallback(addStore).addCallback(addData).addCallback(openCursorAndReplace).addCallback(checkStore)}function testObjectStoreCursorRemove(){if(!idbSupported){return}var values=["1","2","3","4"],keys=["a","b","c","d"],addData=goog.partial(populateStore,values,keys),checkStore=goog.partial(assertStoreValues,["1","2"]),openCursorAndRemove=function(db){var cursorTx=db.createTransaction(["store"],TransactionMode.READ_WRITE),store=cursorTx.objectStore("store"),cursor=store.openCursor(goog.db.KeyRange.lowerBound("b",!0)),whenCursorComplete=forEachRecord(cursor,function(){return cursor.remove("5").addCallback(function(){cursor.next()})});return goog.Promise.all([cursorTx.wait(),whenCursorComplete]).then(function(results){return db})};return globalDb.branch().addCallback(addStore).addCallback(addData).addCallback(openCursorAndRemove).addCallback(checkStore)}function testClear(){if(!idbSupported){return}var db;return globalDb.branch().addCallback(addStore).addCallback(function(theDb){db=theDb;var putTx=db.createTransaction(["store"],TransactionMode.READ_WRITE);putTx.objectStore("store").put("1","a");putTx.objectStore("store").put("2","b");putTx.objectStore("store").put("3","c");return putTx.wait()}).addCallback(function(){return db.createTransaction(["store"]).objectStore("store").getAll()}).addCallback(function(results){assertEquals(3,results.length);return db.createTransaction(["store"],TransactionMode.READ_WRITE).objectStore("store").clear()}).addCallback(function(){return db.createTransaction(["store"]).objectStore("store").getAll()}).addCallback(function(results){assertEquals(0,results.length)})}function testAbortTransaction(){if(!idbSupported){return}var db;return globalDb.branch().addCallback(addStore).addCallback(function(theDb){db=theDb;return new Promise(function(resolve,reject){var abortTx=db.createTransaction(["store"],TransactionMode.READ_WRITE);abortTx.objectStore("store").put("data","stuff").addCallback(function(){abortTx.abort()});goog.events.listen(abortTx,EventTypes.ERROR,reject);goog.events.listen(abortTx,EventTypes.COMPLETE,function(){fail("transaction shouldn't have"+" completed after being aborted")});goog.events.listen(abortTx,EventTypes.ABORT,resolve)})}).addCallback(function(){var checkResultsTx=db.createTransaction(["store"]);return checkResultsTx.objectStore("store").get("stuff")}).addCallback(function(result){assertUndefined(result)})}function testInactiveTransaction(){if(!idbSupported){return}var db,store,index,createAndFinishTransaction=function(theDb){db=theDb;var tx=db.createTransaction(["store"],TransactionMode.READ_WRITE);store=tx.objectStore("store");index=store.getIndex("index");store.put({key:"something",value:"anything"});return tx.wait()},assertCantUseInactiveTransaction=function(){var expectedCode=goog.db.Error.ErrorName.TRANSACTION_INACTIVE_ERR,promises=[],failOp=function(op){return function(){fail(op+" with inactive transaction should have failed")}},assertCorrectError=function(err){assertEquals(expectedCode,err.getName())};promises.push(store.put({key:"another",value:"thing"}).then(failOp("putting"),assertCorrectError));promises.push(store.add({key:"another",value:"thing"}).then(failOp("adding"),assertCorrectError));promises.push(store.remove("something").then(failOp("deleting"),assertCorrectError));promises.push(store.get("something").then(failOp("getting"),assertCorrectError));promises.push(store.getAll().then(failOp("getting all"),assertCorrectError));promises.push(store.clear().then(failOp("clearing all"),assertCorrectError));promises.push(index.get("anything").then(failOp("getting from index"),assertCorrectError));promises.push(index.getKey("anything").then(failOp("getting key from index"),assertCorrectError));promises.push(index.getAll("anything").then(failOp("getting all from index"),assertCorrectError));promises.push(index.getAllKeys("anything").then(failOp("getting all keys from index"),assertCorrectError));return goog.Promise.all(promises)};return globalDb.branch().addCallback(addStoreWithIndex).addCallback(createAndFinishTransaction).addCallback(assertCantUseInactiveTransaction)}function testWrongTransactionMode(){if(!idbSupported){return}return globalDb.branch().addCallback(addStore).addCallback(function(db){var tx=db.createTransaction(["store"]);assertEquals(goog.db.Transaction.TransactionMode.READ_ONLY,tx.getMode());var promises=[tx.objectStore("store").put("KABOOM!","anything").then(function(){fail("putting should have failed")},function(err){assertEquals(goog.db.Error.ErrorName.READ_ONLY_ERR,err.getName())}),tx.objectStore("store").add("EXPLODE!","die").then(function(){fail("adding should have failed")},function(err){assertEquals(goog.db.Error.ErrorName.READ_ONLY_ERR,err.getName())}),tx.objectStore("store").remove("no key","nothing").then(function(){fail("deleting should have failed")},function(err){assertEquals(goog.db.Error.ErrorName.READ_ONLY_ERR,err.getName())})];return goog.Promise.all(promises)})}function testManipulateIndexes(){if(!idbSupported){return}return globalDb.branch().addCallback(function(db){return incrementVersion(db,function(ev,db,tx){var store=db.createObjectStore("store");store.createIndex("index","attr1");store.createIndex("uniqueIndex","attr2",{unique:!0});store.createIndex("multirowIndex","attr3",{multirow:!0})})}).addCallback(function(db){var tx=db.createTransaction(["store"]),store=tx.objectStore("store"),index=store.getIndex("index"),uniqueIndex=store.getIndex("uniqueIndex"),multirowIndex=store.getIndex("multirowIndex");try{var dies=store.getIndex("diediedie");fail("getting non-existent index should have failed")}catch(err){assertEquals(goog.db.Error.ErrorName.NOT_FOUND_ERR,err.getName())}return tx.wait()}).addCallback(function(db){return incrementVersion(db,function(ev,db,tx){var store=tx.objectStore("store");store.deleteIndex("index");try{store.deleteIndex("diediedie");fail("deleting non-existent index should have failed")}catch(err){assertEquals(goog.db.Error.ErrorName.NOT_FOUND_ERR,err.getName())}})}).addCallback(function(db){var tx=db.createTransaction(["store"]),store=tx.objectStore("store");try{var index=store.getIndex("index");fail("getting deleted index should have failed")}catch(err){assertEquals(goog.db.Error.ErrorName.NOT_FOUND_ERR,err.getName())}var uniqueIndex=store.getIndex("uniqueIndex"),multirowIndex=store.getIndex("multirowIndex")})}function testAddRecordWithIndex(){if(!idbSupported){return}var addData=function(db){var store=db.createTransaction(["store"],TransactionMode.READ_WRITE).objectStore("store");assertFalse(store.getIndex("index").isUnique());assertEquals("value",store.getIndex("index").getKeyPath());return store.add({key:"someKey",value:"lookUpThis"}).addCallback(function(){return db})},readAndAssertAboutData=function(db){var index=db.createTransaction(["store"]).objectStore("store").getIndex("index"),promises=[index.get("lookUpThis").addCallback(function(result){assertNotUndefined(result);assertEquals("someKey",result.key);assertEquals("lookUpThis",result.value)}),index.getKey("lookUpThis").addCallback(function(result){assertNotUndefined(result);assertEquals("someKey",result)})];return goog.Promise.all(promises).then(function(){return db})};return globalDb.branch().addCallback(addStoreWithIndex).addCallback(addData).addCallback(readAndAssertAboutData)}function testGetMultipleRecordsFromIndex(){if(!idbSupported){return}var addData=function(db){var addTx=db.createTransaction(["store"],TransactionMode.READ_WRITE);addTx.objectStore("store").add({key:"1",value:"a"});addTx.objectStore("store").add({key:"2",value:"a"});addTx.objectStore("store").add({key:"3",value:"b"});return addTx.wait()},readData=function(db){var index=db.createTransaction(["store"]).objectStore("store").getIndex("index"),promises=[];promises.push(index.getAll().addCallback(function(results){assertNotUndefined(results);assertEquals(3,results.length)}));promises.push(index.getAll("a").addCallback(function(results){assertNotUndefined(results);assertEquals(2,results.length)}));promises.push(index.getAllKeys().addCallback(function(results){assertNotUndefined(results);assertEquals(3,results.length)}));promises.push(index.getAllKeys("b").addCallback(function(results){assertNotUndefined(results);assertEquals(1,results.length)}));return goog.Promise.all(promises).then(function(){return db})};return globalDb.branch().addCallback(addStoreWithIndex).addCallback(addData).addCallback(readData)}function testUniqueIndex(){if(!idbSupported){return}var storeDuplicatesToUniqueIndex=function(db){var tx=db.createTransaction(["store"],TransactionMode.READ_WRITE);assertTrue(tx.objectStore("store").getIndex("index").isUnique());tx.objectStore("store").add({key:"1",value:"a"});tx.objectStore("store").add({key:"2",value:"a"});return transactionToPromise(db,tx).then(function(){fail("Expected transaction violating unique constraint to fail")},function(ev){assertEquals(goog.db.Error.ErrorName.CONSTRAINT_ERR,ev.target.getName())})};return globalDb.branch().addCallback(function(db){return incrementVersion(db,function(ev,db,tx){var store=db.createObjectStore("store",{keyPath:"key"});store.createIndex("index","value",{unique:!0})})}).addCallback(storeDuplicatesToUniqueIndex)}function testDeleteDatabase(){if(!idbSupported){return}return globalDb.branch().addCallback(addStore).addCallback(function(db){db.close();return goog.db.deleteDatabase(dbName,function(){fail("didn't expect deleteDatabase to be blocked")})}).addCallback(openDatabase).addCallback(assertStoreDoesntExist)}function testDeleteDatabaseIsBlocked(){if(!idbSupported){return}var wasBlocked=!1;return globalDb.branch().addCallback(addStore).addCallback(function(db){db.close();return goog.db.openDatabase(dbName)}).addCallback(function(db){dbsToClose.push(db);return goog.db.deleteDatabase(dbName,function(ev){wasBlocked=!0;db.close()})}).addCallback(function(){assertTrue(wasBlocked);return openDatabase()}).addCallback(assertStoreDoesntExist)}function testBlockedDeleteDatabaseWithVersionChangeEvent(){if(!idbSupported){return}var gotVersionChange=!1;return globalDb.branch().addCallback(addStore).addCallback(function(db){db.close();return goog.db.openDatabase(dbName)}).addCallback(function(db){dbsToClose.push(db);goog.events.listen(db,goog.db.IndexedDb.EventType.VERSION_CHANGE,function(ev){gotVersionChange=!0;db.close()});return goog.db.deleteDatabase(dbName)}).addCallback(function(){assertTrue(gotVersionChange);return openDatabase()}).addCallback(assertStoreDoesntExist)}function testDeleteNonExistentDatabase(){if(!idbSupported){return}return globalDb.branch().addCallback(function(db){db.close();return goog.db.deleteDatabase("non-existent-db")})}function testObjectStoreCountAll(){if(!idbSupported){return}var values=["1","2","3","4"],keys=["a","b","c","d"],addData=goog.partial(populateStore,values,keys);return globalDb.branch().addCallback(addStore).addCallback(addData).addCallback(function(db){var tx=db.createTransaction(["store"]);return tx.objectStore("store").count().addCallback(function(count){assertEquals(values.length,count)})})}function testObjectStoreCountSome(){if(!idbSupported){return}var values=["1","2","3","4"],keys=["a","b","c","d"],addData=goog.partial(populateStore,values,keys),countData=function(db){var tx=db.createTransaction(["store"]);return tx.objectStore("store").count(goog.db.KeyRange.bound("b","c")).addCallback(function(count){assertEquals(2,count)})};return globalDb.branch().addCallback(addStore).addCallback(addData).addCallback(countData)}function testIndexCursorGet(){if(!idbSupported){return}var values=["1","2","3","4"],keys=["a","b","c","d"],addData=goog.partial(populateStoreWithObjects,values,keys),valuesResult=[],keysResult=[],walkBackwardsOverCursor=function(db){var cursorTx=db.createTransaction(["store"]),index=cursorTx.objectStore("store").getIndex("index"),values=[],keys=[],cursor=index.openCursor(goog.db.KeyRange.bound("2","3"),goog.db.Cursor.Direction.PREV),cursorFinished=forEachRecord(cursor,function(){valuesResult.push(cursor.getValue().value);keysResult.push(cursor.getValue().key);cursor.next()});return goog.Promise.all([cursorFinished,cursorTx.wait()]).then(function(){return db})};return globalDb.branch().addCallbacks(addStoreWithIndex).addCallback(addData).addCallback(walkBackwardsOverCursor).addCallback(function(db){assertArrayEquals(["3","2"],valuesResult);assertArrayEquals(["c","b"],keysResult)})}function testIndexCursorReplace(){if(!idbSupported){return}var values=["1","2","3","4"],keys=["a","b","c","d"],addData=goog.partial(populateStoreWithObjects,values,keys),valuesResult=[],keysResult=[],checkStore=goog.partial(assertStoreObjectValues,["1","2","5","4"]),openCursorAndReplace=function(db){var cursorTx=db.createTransaction(["store"],TransactionMode.READ_WRITE),index=cursorTx.objectStore("store").getIndex("index"),cursor=index.openCursor(goog.db.KeyRange.bound("3","4",!1,!0)),cursorFinished=forEachRecord(cursor,function(){assertEquals("3",cursor.getValue().value);return cursor.update({key:cursor.getValue().key,value:"5"}).addCallback(function(){cursor.next()})});return goog.Promise.all([cursorFinished,cursorTx.wait()]).then(function(results){return db})};return globalDb.branch().addCallback(addStoreWithIndex).addCallback(addData).addCallback(openCursorAndReplace).addCallback(checkStore)}function testIndexCursorRemove(){if(!idbSupported){return}var values=["1","2","3","4"],keys=["a","b","c","d"],addData=goog.partial(populateStoreWithObjects,values,keys),checkStore=goog.partial(assertStoreObjectValues,["1","2"]),openCursorAndRemove=function(db){var cursorTx=db.createTransaction(["store"],TransactionMode.READ_WRITE),store=cursorTx.objectStore("store"),index=store.getIndex("index"),cursor=index.openCursor(goog.db.KeyRange.lowerBound("2",!0)),cursorFinished=forEachRecord(cursor,function(){return cursor.remove("5").addCallback(function(){cursor.next()})});return goog.Promise.all([cursorFinished,cursorTx.wait()]).then(function(results){return db})};return globalDb.branch().addCallback(addStoreWithIndex).addCallback(addData).addCallback(openCursorAndRemove).addCallback(checkStore)}function testCanWaitForTransactionToComplete(){if(!idbSupported){return}return globalDb.branch().addCallback(addStore).addCallback(function(db){var tx=db.createTransaction(["store"],TransactionMode.READ_WRITE);tx.objectStore("store").add({key:"hi",value:"something"},"stuff");return tx.wait()})}function testWaitingOnTransactionThatHasAnError(){if(!idbSupported){return}return globalDb.branch().addCallback(function(db){return incrementVersion(db,function(ev,db,tx){var store=db.createObjectStore("store",{keyPath:"key"});store.createIndex("index","value",{unique:!0})})}).addCallback(function(db){var tx=db.createTransaction(["store"],TransactionMode.READ_WRITE);assertTrue(tx.objectStore("store").getIndex("index").isUnique());tx.objectStore("store").add({key:"1",value:"a"});tx.objectStore("store").add({key:"2",value:"a"});return transactionToPromise(db,tx).then(function(){fail("expected transaction to fail")},function(ev){assertEquals(goog.db.Error.ErrorName.CONSTRAINT_ERR,ev.target.getName())})})}function testWaitingOnAnAbortedTransaction(){if(!idbSupported){return}return globalDb.addCallback(addStore).addCallback(function(db){var tx=db.createTransaction(["store"],TransactionMode.READ_WRITE),waiting=tx.wait().then(function(){fail("Wait result should have failed")},function(e){assertEquals(goog.db.Error.ErrorName.ABORT_ERR,e.getName())});tx.abort();return waiting})}