goog.provide("goog.vec.QuaternionTest");goog.setTestOnly("goog.vec.QuaternionTest");goog.require("goog.vec.Float32Array");goog.require("goog.vec.Mat3");goog.require("goog.vec.Mat4");goog.require("goog.vec.Quaternion");goog.require("goog.vec.Vec3");goog.require("goog.vec.vec3f");goog.require("goog.vec.Vec4");goog.require("goog.testing.jsunit");function testCreateIdentityFloat32(){var q=goog.vec.Quaternion.createIdentityFloat32();assertElementsEquals([0,0,0,1],q)}function testInvert(){var q0=goog.vec.Quaternion.createFloat32FromValues(1,2,3,4),q1=goog.vec.Quaternion.createFloat32();goog.vec.Quaternion.invert(q0,q1);assertElementsRoughlyEqual([1,2,3,4],q0,goog.vec.EPSILON);assertElementsRoughlyEqual([-.033333,-.066666,-.1,.133333],q1,goog.vec.EPSILON)}function testConjugate(){var q0=goog.vec.Quaternion.createFloat32FromValues(1,2,3,4),q1=goog.vec.Quaternion.createFloat32();goog.vec.Quaternion.conjugate(q0,q1);assertElementsEquals([1,2,3,4],q0);assertElementsEquals([-1,-2,-3,4],q1);goog.vec.Quaternion.conjugate(q1,q1);assertElementsEquals([1,2,3,4],q1);var q2=goog.vec.Quaternion.createFloat32(),q3=goog.vec.Quaternion.createFloat32();goog.vec.Quaternion.normalize(q0,q2);goog.vec.Quaternion.conjugate(q2,q2);goog.vec.Quaternion.normalize(q0,q3);goog.vec.Quaternion.invert(q3,q3);assertElementsRoughlyEqual(q2,q3,goog.vec.EPSILON)}function testConcat(){var q0=goog.vec.Quaternion.createFloat32FromValues(1,2,3,4),q1=goog.vec.Quaternion.createFloat32FromValues(2,3,4,5),q2=goog.vec.Quaternion.createFloat32();goog.vec.Quaternion.concat(q0,q1,q2);assertElementsEquals([12,24,30,0],q2);goog.vec.Quaternion.concat(q0,q1,q0);assertElementsEquals([12,24,30,0],q0)}function testMakeIdentity(){var q=goog.vec.Quaternion.createFloat32FromValues(1,2,3,4);goog.vec.Quaternion.makeIdentity(q);assertElementsEquals([0,0,0,1],q)}function testRotateX(){var _MathPI=Math.PI,q=goog.vec.Quaternion.createIdentityFloat32();goog.vec.Quaternion.rotateX(q,_MathPI/2,q);var axis=goog.vec.Vec3.createFloat32(),angle=goog.vec.Quaternion.toAngleAxis(q,axis);assertElementsRoughlyEqual([1,0,0],axis,goog.vec.EPSILON);assertRoughlyEquals(_MathPI/2,angle,goog.vec.EPSILON)}function testRotateY(){var _MathPI2=Math.PI,q=goog.vec.Quaternion.createIdentityFloat32();goog.vec.Quaternion.rotateY(q,_MathPI2/2,q);var axis=goog.vec.Vec3.createFloat32(),angle=goog.vec.Quaternion.toAngleAxis(q,axis);assertElementsRoughlyEqual([0,1,0],axis,goog.vec.EPSILON);assertRoughlyEquals(_MathPI2/2,angle,goog.vec.EPSILON)}function testRotateZ(){var _MathPI3=Math.PI,q=goog.vec.Quaternion.createIdentityFloat32();goog.vec.Quaternion.rotateZ(q,_MathPI3/2,q);var axis=goog.vec.Vec3.createFloat32(),angle=goog.vec.Quaternion.toAngleAxis(q,axis);assertElementsRoughlyEqual([0,0,1],axis,goog.vec.EPSILON);assertRoughlyEquals(_MathPI3/2,angle,goog.vec.EPSILON)}function testTransformVec(){var q=goog.vec.Quaternion.createIdentityFloat32();goog.vec.Quaternion.rotateX(q,Math.PI/2,q);var v0=goog.vec.vec3f.setFromArray(goog.vec.vec3f.create(),[0,0,1]),v1=goog.vec.vec3f.create();goog.vec.Quaternion.transformVec(v0,q,v1);assertElementsRoughlyEqual([0,-1,0],v1,goog.vec.EPSILON)}function testSlerp(){var q0=goog.vec.Quaternion.createFloat32FromValues(1,2,3,4),q1=goog.vec.Quaternion.createFloat32FromValues(5,-6,7,-8),q2=goog.vec.Quaternion.createFloat32();goog.vec.Quaternion.slerp(q0,q1,0,q2);assertElementsEquals([5,-6,7,-8],q2);goog.vec.Quaternion.normalize(q0,q0);goog.vec.Quaternion.normalize(q1,q1);goog.vec.Quaternion.slerp(q0,q0,.5,q2);assertElementsEquals(q0,q2);goog.vec.Quaternion.slerp(q0,q1,0,q2);assertElementsEquals(q0,q2);goog.vec.Quaternion.slerp(q0,q1,1,q2);if(0>q1[3]*q2[3]){goog.vec.Quaternion.negate(q2,q2)}assertElementsEquals(q1,q2);goog.vec.Quaternion.slerp(q0,q1,.3,q2);assertElementsRoughlyEqual([-.000501537327541,.481761203464,.2398775270769,.842831337398],q2,goog.vec.EPSILON);goog.vec.Quaternion.slerp(q0,q1,.5,q2);assertElementsRoughlyEqual([-.1243045421171,.51879732466,.010789578099,.845743047108],q2,goog.vec.EPSILON);goog.vec.Quaternion.slerp(q0,q1,.8,q0);assertElementsRoughlyEqual([-.291353561485,.506925588797,-.3292443285721,.741442999653],q0,goog.vec.EPSILON)}function testFromRotMatrix(){var m0=goog.vec.Mat3.createFloat32FromValues(-.408248,.8796528,-.244016935,-.4082482,.06315623,.9106836,.8164965,.47140452,.3333333),q0=goog.vec.Quaternion.createFloat32();goog.vec.Quaternion.fromRotationMatrix3(m0,q0);assertElementsRoughlyEqual([.22094256606638,.5334020364603,.64777022739548,.497051689967954],q0,goog.vec.EPSILON);var m1=goog.vec.Mat4.createFloat32FromValues(-.408248,.8796528,-.244016935,0,-.4082482,.06315623,.9106836,0,.8164965,.47140452,.3333333,0,0,0,0,1),q1=goog.vec.Quaternion.createFloat32();goog.vec.Quaternion.fromRotationMatrix4(m1,q1);assertElementsRoughlyEqual([.22094256606638,.5334020364603,.64777022739548,.497051689967954],q1,goog.vec.EPSILON);assertElementsRoughlyEqual(q0,q1,goog.vec.EPSILON)}function testToRotMatrix(){var q0=goog.vec.Quaternion.createFloat32FromValues(.22094256606638,.5334020364603,.64777022739548,.497051689967954),m0=goog.vec.Mat3.createFloat32();goog.vec.Quaternion.toRotationMatrix3(q0,m0);assertElementsRoughlyEqual([-.408248,.8796528,-.244016935,-.4082482,.06315623,.9106836,.8164965,.47140452,.3333333],m0,goog.vec.EPSILON);var m1=goog.vec.Mat4.createFloat32();goog.vec.Quaternion.toRotationMatrix4(q0,m1);assertElementsRoughlyEqual([-.408248,.8796528,-.244016935,0,-.4082482,.06315623,.9106836,0,.8164965,.47140452,.3333333,0,0,0,0,1],m1,goog.vec.EPSILON)}function testToAngleAxis(){var _MathPI4=Math.PI,q0=goog.vec.Quaternion.createFloat32FromValues(0,0,0,1),axis=goog.vec.Vec3.createFloat32(),angle=goog.vec.Quaternion.toAngleAxis(q0,axis);assertRoughlyEquals(0,angle,goog.vec.EPSILON);assertElementsRoughlyEqual([1,0,0],axis,goog.vec.EPSILON);goog.vec.Quaternion.setFromValues(q0,-.288675032,.622008682,-.17254543,.70710678);angle=goog.vec.Quaternion.toAngleAxis(q0,axis);assertRoughlyEquals(_MathPI4/2,angle,goog.vec.EPSILON);assertElementsRoughlyEqual([-.408248,.8796528,-.244016],axis,goog.vec.EPSILON);goog.vec.Quaternion.negate(q0,q0);angle=goog.vec.Quaternion.toAngleAxis(q0,axis);assertRoughlyEquals(-_MathPI4/2,angle,goog.vec.EPSILON);assertElementsRoughlyEqual([.408248,-.8796528,.244016],axis,goog.vec.EPSILON);goog.vec.Quaternion.conjugate(q0,q0);angle=goog.vec.Quaternion.toAngleAxis(q0,axis);assertRoughlyEquals(-_MathPI4/2,angle,goog.vec.EPSILON);assertElementsRoughlyEqual([-.408248,.8796528,-.244016],axis,goog.vec.EPSILON)}function testFromAngleAxis(){var _MathPI5=Math.PI,angle=0,axis=goog.vec.Vec3.createFloat32FromValues(-.408248,.8796528,-.244016),q0=goog.vec.Quaternion.createFloat32();goog.vec.Quaternion.fromAngleAxis(angle,axis,q0);assertElementsRoughlyEqual([0,0,0,1],q0,goog.vec.EPSILON);angle=4*_MathPI5;goog.vec.Quaternion.fromAngleAxis(angle,axis,q0);assertElementsRoughlyEqual([0,0,0,1],q0,goog.vec.EPSILON);angle=_MathPI5/2;goog.vec.Quaternion.fromAngleAxis(angle,axis,q0);assertElementsRoughlyEqual([-.288675032,.622008682,-.17254543,.70710678],q0,goog.vec.EPSILON);angle+=4*_MathPI5;goog.vec.Vec3.scale(axis,7,axis);goog.vec.Quaternion.fromAngleAxis(angle,axis,q0);assertElementsRoughlyEqual([-.288675032,.622008682,-.17254543,.70710678],q0,goog.vec.EPSILON);goog.vec.Vec3.setFromValues(axis,1,5,8);goog.vec.Quaternion.fromAngleAxis(angle,axis,q0);assertElementsRoughlyEqual([.074535599,.372677996,.596284794,.70710678],q0,goog.vec.EPSILON);angle=_MathPI5/5;goog.vec.Vec3.setFromValues(axis,5,-2,-10);goog.vec.Quaternion.fromAngleAxis(angle,axis,q0);assertElementsRoughlyEqual([.136037146,-.0544148586,-.27207429,.951056516],q0,goog.vec.EPSILON);angle=-_MathPI5/5;goog.vec.Vec3.negate(axis,axis);goog.vec.Quaternion.fromAngleAxis(angle,axis,q0);assertElementsRoughlyEqual([.136037146,-.0544148586,-.27207429,.951056516],q0,goog.vec.EPSILON)}