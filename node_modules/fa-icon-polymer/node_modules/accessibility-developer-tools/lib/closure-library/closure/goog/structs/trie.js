goog.provide("goog.structs.Trie");goog.require("goog.object");goog.require("goog.structs");goog.structs.Trie=function(opt_trie){this.value_=void 0;this.childNodes_={};if(opt_trie){this.setAll(opt_trie)}};goog.structs.Trie.prototype.set=function(key,value){this.setOrAdd_(key,value,!1)};goog.structs.Trie.prototype.add=function(key,value){this.setOrAdd_(key,value,!0)};goog.structs.Trie.prototype.setOrAdd_=function(key,value,opt_add){for(var node=this,characterPosition=0,currentCharacter;characterPosition<key.length;characterPosition++){currentCharacter=key.charAt(characterPosition);if(!node.childNodes_[currentCharacter]){node.childNodes_[currentCharacter]=new goog.structs.Trie}node=node.childNodes_[currentCharacter]}if(opt_add&&node.value_!==void 0){throw Error("The collection already contains the key \""+key+"\"")}else{node.value_=value}};goog.structs.Trie.prototype.setAll=function(trie){for(var keys=goog.structs.getKeys(trie),values=goog.structs.getValues(trie),i=0;i<keys.length;i++){this.set(keys[i],values[i])}};goog.structs.Trie.prototype.getChildNode_=function(path){for(var node=this,characterPosition=0,currentCharacter;characterPosition<path.length;characterPosition++){currentCharacter=path.charAt(characterPosition);node=node.childNodes_[currentCharacter];if(!node){return}}return node};goog.structs.Trie.prototype.get=function(key){var node=this.getChildNode_(key);return node?node.value_:void 0};goog.structs.Trie.prototype.getKeyAndPrefixes=function(key,opt_keyStartIndex){var node=this,matches={},characterPosition=opt_keyStartIndex||0;if(node.value_!==void 0){matches[characterPosition]=node.value_}for(;characterPosition<key.length;characterPosition++){var currentCharacter=key.charAt(characterPosition);if(!(currentCharacter in node.childNodes_)){break}node=node.childNodes_[currentCharacter];if(node.value_!==void 0){matches[characterPosition]=node.value_}}return matches};goog.structs.Trie.prototype.getValues=function(){var allValues=[];this.getValuesInternal_(allValues);return allValues};goog.structs.Trie.prototype.getValuesInternal_=function(allValues){if(this.value_!==void 0){allValues.push(this.value_)}for(var childNode in this.childNodes_){this.childNodes_[childNode].getValuesInternal_(allValues)}};goog.structs.Trie.prototype.getKeys=function(opt_prefix){var allKeys=[];if(opt_prefix){for(var node=this,characterPosition=0,currentCharacter;characterPosition<opt_prefix.length;characterPosition++){currentCharacter=opt_prefix.charAt(characterPosition);if(!node.childNodes_[currentCharacter]){return[]}node=node.childNodes_[currentCharacter]}node.getKeysInternal_(opt_prefix,allKeys)}else{this.getKeysInternal_("",allKeys)}return allKeys};goog.structs.Trie.prototype.getKeysInternal_=function(keySoFar,allKeys){if(this.value_!==void 0){allKeys.push(keySoFar)}for(var childNode in this.childNodes_){this.childNodes_[childNode].getKeysInternal_(keySoFar+childNode,allKeys)}};goog.structs.Trie.prototype.containsKey=function(key){return this.get(key)!==void 0};goog.structs.Trie.prototype.containsPrefix=function(prefix){if(0==prefix.length){return!this.isEmpty()}return!!this.getChildNode_(prefix)};goog.structs.Trie.prototype.containsValue=function(value){if(this.value_===value){return!0}for(var childNode in this.childNodes_){if(this.childNodes_[childNode].containsValue(value)){return!0}}return!1};goog.structs.Trie.prototype.clear=function(){this.childNodes_={};this.value_=void 0};goog.structs.Trie.prototype.remove=function(key){for(var node=this,parents=[],characterPosition=0,currentCharacter;characterPosition<key.length;characterPosition++){currentCharacter=key.charAt(characterPosition);if(!node.childNodes_[currentCharacter]){throw Error("The collection does not have the key \""+key+"\"")}parents.push([node,currentCharacter]);node=node.childNodes_[currentCharacter]}var oldValue=node.value_;delete node.value_;while(0<parents.length){var currentParentAndCharacter=parents.pop(),currentParent=currentParentAndCharacter[0],currentCharacter=currentParentAndCharacter[1];if(currentParent.childNodes_[currentCharacter].isEmpty()){delete currentParent.childNodes_[currentCharacter]}else{break}}return oldValue};goog.structs.Trie.prototype.clone=function(){return new goog.structs.Trie(this)};goog.structs.Trie.prototype.getCount=function(){return goog.structs.getCount(this.getValues())};goog.structs.Trie.prototype.isEmpty=function(){return this.value_===void 0&&goog.object.isEmpty(this.childNodes_)};