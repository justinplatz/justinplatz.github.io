goog.provide("goog.events.ListenerMapTest");goog.setTestOnly("goog.events.ListenerMapTest");goog.require("goog.dispose");goog.require("goog.events");goog.require("goog.events.EventId");goog.require("goog.events.EventTarget");goog.require("goog.events.ListenerMap");goog.require("goog.testing.jsunit");var et,map,handler1=function(){},handler2=function(){},handler3=function(){},CLICK_EVENT_ID=new goog.events.EventId(goog.events.getUniqueId("click"));function setUp(){et=new goog.events.EventTarget;map=new goog.events.ListenerMap(et)}function tearDown(){goog.dispose(et)}function testGetTypeCount(){assertEquals(0,map.getTypeCount());map.add("click",handler1,!1);assertEquals(1,map.getTypeCount());map.remove("click",handler1);assertEquals(0,map.getTypeCount());map.add(CLICK_EVENT_ID,handler1,!1);assertEquals(1,map.getTypeCount());map.remove(CLICK_EVENT_ID,handler1);assertEquals(0,map.getTypeCount());map.add("click",handler1,!1,!0);assertEquals(1,map.getTypeCount());map.remove("click",handler1,!0);assertEquals(0,map.getTypeCount());map.add(CLICK_EVENT_ID,handler1,!1,!0);assertEquals(1,map.getTypeCount());map.remove(CLICK_EVENT_ID,handler1,!0);assertEquals(0,map.getTypeCount());map.add("click",handler1,!1);map.add("click",handler1,!1,!0);assertEquals(1,map.getTypeCount());map.remove("click",handler1);assertEquals(1,map.getTypeCount());map.remove("click",handler1,!0);assertEquals(0,map.getTypeCount());map.add(CLICK_EVENT_ID,handler1,!1);map.add(CLICK_EVENT_ID,handler1,!1,!0);assertEquals(1,map.getTypeCount());map.remove(CLICK_EVENT_ID,handler1);assertEquals(1,map.getTypeCount());map.remove(CLICK_EVENT_ID,handler1,!0);assertEquals(0,map.getTypeCount());map.add("click",handler1,!1);map.add("touchstart",handler2,!1);map.add(CLICK_EVENT_ID,handler3,!1);assertEquals(3,map.getTypeCount());map.remove(CLICK_EVENT_ID,handler3);assertEquals(2,map.getTypeCount());map.remove("touchstart",handler2);assertEquals(1,map.getTypeCount());map.remove("click",handler1);assertEquals(0,map.getTypeCount())}function testGetListenerCount(){assertEquals(0,map.getListenerCount());map.add("click",handler1,!1);assertEquals(1,map.getListenerCount());map.remove("click",handler1);assertEquals(0,map.getListenerCount());map.add(CLICK_EVENT_ID,handler1,!1);assertEquals(1,map.getListenerCount());map.remove(CLICK_EVENT_ID,handler1);assertEquals(0,map.getListenerCount());map.add("click",handler1,!1,!0);assertEquals(1,map.getListenerCount());map.remove("click",handler1,!0);assertEquals(0,map.getListenerCount());map.add(CLICK_EVENT_ID,handler1,!1,!0);assertEquals(1,map.getListenerCount());map.remove(CLICK_EVENT_ID,handler1,!0);assertEquals(0,map.getListenerCount());map.add("click",handler1,!1);map.add("click",handler1,!1,!0);assertEquals(2,map.getListenerCount());map.remove("click",handler1);map.remove("click",handler1,!0);assertEquals(0,map.getListenerCount());map.add(CLICK_EVENT_ID,handler1,!1);map.add(CLICK_EVENT_ID,handler1,!1,!0);assertEquals(2,map.getListenerCount());map.remove(CLICK_EVENT_ID,handler1);map.remove(CLICK_EVENT_ID,handler1,!0);assertEquals(0,map.getListenerCount());map.add("click",handler1,!1);map.add("touchstart",handler2,!1);map.add(CLICK_EVENT_ID,handler3,!1);assertEquals(3,map.getListenerCount());map.remove(CLICK_EVENT_ID,handler3);map.remove("touchstart",handler2);map.remove("click",handler1);assertEquals(0,map.getListenerCount())}function testListenerSourceIsSetCorrectly(){map.add("click",handler1,!1);var listener=map.getListener("click",handler1);assertEquals(et,listener.src);map.add(CLICK_EVENT_ID,handler2,!1);listener=map.getListener(CLICK_EVENT_ID,handler2);assertEquals(et,listener.src)}