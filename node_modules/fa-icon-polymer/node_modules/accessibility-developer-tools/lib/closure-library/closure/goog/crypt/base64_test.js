goog.provide("goog.crypt.base64Test");goog.setTestOnly("goog.crypt.base64Test");goog.require("goog.crypt");goog.require("goog.crypt.base64");goog.require("goog.testing.jsunit");var tests=["","","f","Zg==","fo","Zm8=","foo","Zm9v","foob","Zm9vYg==","fooba","Zm9vYmE=","foobar","Zm9vYmFy","\xE4\xB8\x80\xE4\xBA\x8C\xE4\xB8\x89\xE5\x9B\x9B\xE4\xBA\x94\xE5"+"\x85\xAD\xE4\xB8\x83\xE5\x85\xAB\xE4\xB9\x9D\xE5\x8D\x81","5LiA5LqM5LiJ5Zub5LqU5YWt5LiD5YWr5Lmd5Y2B"];function assertDecodeToByteArrayEquals(expected,encoded,opt_webSafe){var dec=goog.crypt.base64.decodeStringToByteArray(encoded,opt_webSafe);assertArrayEquals(expected,dec)}function assertDecodeToUint8ArrayEquals(expected,encoded){if(goog.global.Uint8Array){var dec=goog.crypt.base64.decodeStringToUint8Array(encoded);assertArrayEquals(expected,Array.prototype.slice.call(dec))}}function testByteArrayEncoding(){for(var i=0,enc;i<tests.length;i+=2){enc=goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(tests[i]));assertEquals(tests[i+1],enc);var expected=goog.crypt.stringToByteArray(tests[i]);assertDecodeToByteArrayEquals(expected,enc);assertDecodeToUint8ArrayEquals(expected,enc);assertDecodeToByteArrayEquals(expected,enc,!0);enc=goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(tests[i],!0));assertDecodeToByteArrayEquals(expected,enc);assertDecodeToUint8ArrayEquals(expected,enc);assertDecodeToByteArrayEquals(expected,enc,!0)}}function testOddLengthByteArrayEncoding(){var buffer=[0,0,0],encodedBuffer=goog.crypt.base64.encodeByteArray(buffer);assertEquals("AAAA",encodedBuffer);assertDecodeToByteArrayEquals(buffer,encodedBuffer);assertDecodeToUint8ArrayEquals(buffer,encodedBuffer)}function testOddLengthByteArrayDecoding(){var encodedBuffer="YWJjZA",expected=goog.crypt.stringToByteArray("abcd");assertDecodeToByteArrayEquals(expected,encodedBuffer);assertDecodeToUint8ArrayEquals(expected,encodedBuffer);assertDecodeToByteArrayEquals(expected,encodedBuffer,!0)}function testShortcutPathEncoding(){for(var i=0,enc;i<tests.length;i+=2){enc=goog.crypt.base64.encodeString(tests[i]);assertEquals(tests[i+1],enc);var dec=goog.crypt.base64.decodeString(enc);assertEquals(tests[i],dec)}}function testMultipleIterations(){for(var numIterations=100,i=0,input;i<numIterations;i++){input=[];for(var j=0;j<i;j++)input[j]=j%256;var encoded=goog.crypt.base64.encodeByteArray(input);assertDecodeToByteArrayEquals(input,encoded);assertDecodeToUint8ArrayEquals(input,encoded)}}function testWebSafeEncoding(){var test=">>>???>>>???=/+",testArr=goog.crypt.stringToByteArray(test),enc=goog.crypt.base64.encodeByteArray(testArr);assertEquals("Non-websafe broken?","Pj4+Pz8/Pj4+Pz8/PS8r",enc);enc=goog.crypt.base64.encodeString(test);assertEquals("Non-websafe broken?","Pj4+Pz8/Pj4+Pz8/PS8r",enc);enc=goog.crypt.base64.encodeByteArray(testArr,!0);assertEquals("Websafe encoding broken","Pj4-Pz8_Pj4-Pz8_PS8r",enc);enc=goog.crypt.base64.encodeString(test,!0);assertEquals("Non-websafe broken?","Pj4-Pz8_Pj4-Pz8_PS8r",enc);assertDecodeToByteArrayEquals(testArr,enc);assertDecodeToUint8ArrayEquals(testArr,enc);var dec=goog.crypt.base64.decodeString(enc,!0);assertEquals("Websafe decoding broken",test,dec);assertThrows("Didn't throw on malformed input",function(){goog.crypt.base64.decodeStringToByteArray("foooooo)oooo")});assertThrows("Didn't throw on malformed input",function(){goog.crypt.base64.decodeStringToUint8Array("foooooo)oooo")})}function testDecodeIgnoresSpace(){for(var spaceTests=[[" \n\t\r",""],["Z g =\n=","f"],["Zm 8=","fo"],[" Zm 9v","foo"],["Zm9v Yg ==\t ","foob"],["\nZ m9  vYm\n E=","fooba"],["  \nZ \tm9v YmFy  ","foobar"]],i=0;i<spaceTests.length;i++){var thisTest=spaceTests[i],encoded=thisTest[0],expectedStr=thisTest[1],expected=goog.crypt.stringToByteArray(expectedStr);assertDecodeToByteArrayEquals(expected,encoded);assertDecodeToUint8ArrayEquals(expected,encoded);assertEquals(expectedStr,goog.crypt.base64.decodeString(encoded))}}