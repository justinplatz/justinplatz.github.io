goog.provide("goog.math.interpolator.Pchip1");goog.require("goog.math");goog.require("goog.math.interpolator.Spline1");goog.math.interpolator.Pchip1=function(){goog.math.interpolator.Pchip1.base(this,"constructor")};goog.inherits(goog.math.interpolator.Pchip1,goog.math.interpolator.Spline1);goog.math.interpolator.Pchip1.prototype.computeDerivatives=function(dx,slope){for(var len=dx.length,deriv=Array(len+1),i=1;i<len;++i){if(0>=goog.math.sign(slope[i-1])*goog.math.sign(slope[i])){deriv[i]=0}else{var w1=2*dx[i]+dx[i-1],w2=dx[i]+2*dx[i-1];deriv[i]=(w1+w2)/(w1/slope[i-1]+w2/slope[i])}}deriv[0]=this.computeDerivativeAtBoundary_(dx[0],dx[1],slope[0],slope[1]);deriv[len]=this.computeDerivativeAtBoundary_(dx[len-1],dx[len-2],slope[len-1],slope[len-2]);return deriv};goog.math.interpolator.Pchip1.prototype.computeDerivativeAtBoundary_=function(dx0,dx1,slope0,slope1){var _Mathabs=Math.abs,deriv=((2*dx0+dx1)*slope0-dx0*slope1)/(dx0+dx1);if(goog.math.sign(deriv)!=goog.math.sign(slope0)){deriv=0}else if(goog.math.sign(slope0)!=goog.math.sign(slope1)&&_Mathabs(deriv)>_Mathabs(3*slope0)){deriv=3*slope0}return deriv};