goog.provide("goog.demos.editor.HelloWorldDialogPluginTest");goog.setTestOnly("goog.demos.editor.HelloWorldDialogPluginTest");goog.require("goog.demos.editor.HelloWorldDialog");goog.require("goog.demos.editor.HelloWorldDialog.OkEvent");goog.require("goog.demos.editor.HelloWorldDialogPlugin");goog.require("goog.demos.editor.HelloWorldDialogPlugin.Command");goog.require("goog.dom");goog.require("goog.dom.NodeType");goog.require("goog.testing.ExpectedFailures");goog.require("goog.testing.MockControl");goog.require("goog.testing.MockRange");goog.require("goog.testing.PropertyReplacer");goog.require("goog.testing.editor.FieldMock");goog.require("goog.testing.editor.TestHelper");goog.require("goog.testing.editor.dom");goog.require("goog.testing.events");goog.require("goog.testing.jsunit");goog.require("goog.testing.mockmatchers.ArgumentMatcher");goog.require("goog.userAgent");var plugin,mockCtrl,mockField,mockRange,mockPlaceCursorNextTo,stubs=new goog.testing.PropertyReplacer,fieldObj,CUSTOM_MESSAGE="Hello, cruel world...",expectedFailures=new goog.testing.ExpectedFailures;function setUp(){mockCtrl=new goog.testing.MockControl;mockRange=new goog.testing.MockRange;mockCtrl.addMock(mockRange);mockField=new goog.testing.editor.FieldMock(void 0,void 0,mockRange);mockCtrl.addMock(mockField);mockPlaceCursorNextTo=mockCtrl.createFunctionMock("placeCursorNextTo")}function tearDown(){plugin.dispose();tearDownRealEditableField();expectedFailures.handleTearDown();stubs.reset();goog.dom.removeChildren(goog.dom.getElement("myField"))}function testCreateDialog(){mockField.$replay();plugin=new goog.demos.editor.HelloWorldDialogPlugin;plugin.registerFieldObject(mockField);var dialog=plugin.createDialog(goog.dom.getDomHelper());assertTrue("Dialog should be of type goog.demos.editor.HelloWorldDialog",dialog instanceof goog.demos.editor.HelloWorldDialog);mockField.$verify()}function testOk(){mockField.focus();mockField.dispatchBeforeChange();mockRange.removeContents();var createdNodeMatcher=new goog.testing.mockmatchers.ArgumentMatcher(function(arg){return arg.nodeType==goog.dom.NodeType.ELEMENT&&arg.tagName==goog.dom.TagName.SPAN&&goog.dom.getRawTextContent(arg)==CUSTOM_MESSAGE});mockRange.insertNode(createdNodeMatcher,!1);mockRange.$does(function(node,before){return node});mockPlaceCursorNextTo(createdNodeMatcher,!1);stubs.set(goog.editor.range,"placeCursorNextTo",mockPlaceCursorNextTo);mockField.dispatchSelectionChangeEvent();mockField.dispatchChange();mockCtrl.$replayAll();plugin=new goog.demos.editor.HelloWorldDialogPlugin;plugin.registerFieldObject(mockField);var dialog=plugin.createDialog(goog.dom.getDomHelper());dialog.dispatchEvent(new goog.demos.editor.HelloWorldDialog.OkEvent(CUSTOM_MESSAGE));mockCtrl.$verifyAll()}function setUpRealEditableField(){fieldObj=new goog.editor.Field("myField",document);fieldObj.makeEditable();plugin=new goog.demos.editor.HelloWorldDialogPlugin;fieldObj.registerPlugin(plugin)}function tearDownRealEditableField(){if(fieldObj){fieldObj.makeUneditable();fieldObj.dispose()}}function testRestoreSelectionOnOk(){setUpRealEditableField();fieldObj.setHtml(!1,"12345");var elem=fieldObj.getElement(),helper=new goog.testing.editor.TestHelper(elem);helper.select("12345",1,"12345",4);assertEquals("Incorrect text selected before dialog is opened","234",fieldObj.getRange().getText());plugin.execCommand(goog.demos.editor.HelloWorldDialogPlugin.Command.HELLO_WORLD_DIALOG);elem.parentNode.blur();expectedFailures.expectFailureFor(goog.userAgent.IE||goog.userAgent.OPERA);try{assertNull("There should be no selection while dialog is open",fieldObj.getRange())}catch(e){expectedFailures.handleException(e)}goog.testing.events.fireClickSequence(plugin.dialog_.getOkButtonElement());assertEquals("No text should be selected after clicking ok","",fieldObj.getRange().getText());goog.testing.editor.dom.assertRangeBetweenText("Hello, world!","5",fieldObj.getRange())}