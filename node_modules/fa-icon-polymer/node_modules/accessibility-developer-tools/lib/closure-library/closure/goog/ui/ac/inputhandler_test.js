goog.provide("goog.ui.ac.InputHandlerTest");goog.setTestOnly("goog.ui.ac.InputHandlerTest");goog.require("goog.a11y.aria");goog.require("goog.a11y.aria.Role");goog.require("goog.a11y.aria.State");goog.require("goog.dom");goog.require("goog.dom.TagName");goog.require("goog.dom.selection");goog.require("goog.events.BrowserEvent");goog.require("goog.events.Event");goog.require("goog.events.EventTarget");goog.require("goog.events.KeyCodes");goog.require("goog.functions");goog.require("goog.object");goog.require("goog.testing.MockClock");goog.require("goog.testing.jsunit");goog.require("goog.ui.ac.InputHandler");goog.require("goog.userAgent");function MockElement(){goog.events.EventTarget.call(this);this.setAttributeNS=function(){};this.setAttribute=function(key,value){this[key]=value};this.focus=function(){};this.blur=function(){};this.ownerDocument=document;this.selectionStart=0}goog.inherits(MockElement,goog.events.EventTarget);function MockAutoCompleter(){this.setToken=null;this.setTokenWasCalled=!1;this.selectHilitedWasCalled=!1;this.dismissWasCalled=!1;this.getTarget=function(){return mockElement};this.setTarget=function(){};this.setToken=function(token){this.setTokenWasCalled=!0;this.setToken=token};this.selectHilited=function(){this.selectHilitedWasCalled=!0;return!0};this.cancelDelayedDismiss=function(){};this.dismissOnDelay=function(){};this.dismiss=function(){this.dismissWasCalled=!0};this.isOpen=goog.functions.TRUE}function MockInputHandler(){goog.ui.ac.InputHandler.call(this);this.ac_=new MockAutoCompleter;this.cursorPosition_=0;this.attachInput(mockElement)}goog.inherits(MockInputHandler,goog.ui.ac.InputHandler);MockInputHandler.prototype.update=function(){this.updates++};MockInputHandler.prototype.fireKeyEvents=function(keyCode,down,press,up,opt_properties){if(down)this.fireEvent("keydown",keyCode,opt_properties);if(press)this.fireEvent("keypress",keyCode,opt_properties);if(up)this.fireEvent("keyup",keyCode,opt_properties)};MockInputHandler.prototype.fireEvent=function(type,keyCode,opt_properties){var e={type:type,keyCode:keyCode,preventDefault:function(){}};if(!goog.userAgent.IE){e.which="keydown"==type?keyCode:0}if(opt_properties){goog.object.extend(e,opt_properties)}e=new goog.events.BrowserEvent(e);mockElement.dispatchEvent(e)};MockInputHandler.prototype.setCursorPosition=function(cursorPosition){this.cursorPosition_=cursorPosition};MockInputHandler.prototype.getCursorPosition=function(){return this.cursorPosition_};var mh=null,oldMac,oldWin,oldLinux,oldIe,oldFf,oldWebkit,oldVersion,oldUsesKeyDown,mockElement,mockClock;function setUp(){oldMac=goog.userAgent.MAC;oldWin=goog.userAgent.WINDOWS;oldLinux=goog.userAgent.LINUX;oldIe=goog.userAgent.IE;oldFf=goog.userAgent.GECKO;oldWebkit=goog.userAgent.WEBKIT;oldVersion=goog.userAgent.VERSION;oldUsesKeyDown=goog.events.KeyHandler.USES_KEYDOWN_;mockClock=new goog.testing.MockClock(!0);mockElement=new MockElement;mh=new MockInputHandler}function tearDown(){goog.userAgent.MAC=oldMac;goog.userAgent.WINDOWS=oldWin;goog.userAgent.LINUX=oldLinux;goog.userAgent.IE=oldIe;goog.userAgent.GECKO=oldFf;goog.userAgent.WEBKIT=oldWebkit;goog.userAgent.VERSION=oldVersion;goog.events.KeyHandler.USES_KEYDOWN_=oldUsesKeyDown;mockClock.dispose();mockElement.dispose()}function simulateWinFirefox3(){goog.userAgent.MAC=!1;goog.userAgent.WINDOWS=!0;goog.userAgent.LINUX=!1;goog.userAgent.IE=!1;goog.userAgent.EDGE=!1;goog.userAgent.EDGE_OR_IE=!1;goog.userAgent.GECKO=!0;goog.userAgent.WEBKIT=!1;goog.events.KeyHandler.USES_KEYDOWN_=!1}function simulateWinIe7(){goog.userAgent.MAC=!1;goog.userAgent.WINDOWS=!0;goog.userAgent.LINUX=!1;goog.userAgent.IE=!0;goog.userAgent.EDGE=!1;goog.userAgent.EDGE_OR_IE=!0;goog.userAgent.DOCUMENT_MODE=7;goog.userAgent.GECKO=!1;goog.userAgent.WEBKIT=!1;goog.events.KeyHandler.USES_KEYDOWN_=!0}function simulateWinChrome(){goog.userAgent.MAC=!1;goog.userAgent.WINDOWS=!0;goog.userAgent.LINUX=!1;goog.userAgent.IE=!1;goog.userAgent.EDGE=!1;goog.userAgent.EDGE_OR_IE=!1;goog.userAgent.GECKO=!1;goog.userAgent.WEBKIT=!0;goog.userAgent.VERSION="525";goog.events.KeyHandler.USES_KEYDOWN_=!0}function simulateMacFirefox3(){goog.userAgent.MAC=!0;goog.userAgent.WINDOWS=!1;goog.userAgent.LINUX=!1;goog.userAgent.IE=!1;goog.userAgent.EDGE=!1;goog.userAgent.EDGE_OR_IE=!1;goog.userAgent.GECKO=!0;goog.userAgent.WEBKIT=!1;goog.events.KeyHandler.USES_KEYDOWN_=!0}function simulateMacSafari3(){goog.userAgent.MAC=!0;goog.userAgent.WINDOWS=!1;goog.userAgent.LINUX=!1;goog.userAgent.IE=!1;goog.userAgent.EDGE=!1;goog.userAgent.EDGE_OR_IE=!1;goog.userAgent.GECKO=!1;goog.userAgent.WEBKIT=!0;goog.userAgent.VERSION="525";goog.events.KeyHandler.USES_KEYDOWN_=!0}function simulateLinuxFirefox3(){goog.userAgent.MAC=!1;goog.userAgent.WINDOWS=!1;goog.userAgent.LINUX=!0;goog.userAgent.IE=!1;goog.userAgent.EDGE=!1;goog.userAgent.EDGE_OR_IE=!1;goog.userAgent.GECKO=!0;goog.userAgent.WEBKIT=!1;goog.events.KeyHandler.USES_KEYDOWN_=!0}function testRegularKey(){assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.K,!0,!0,!0);assertFalse("IME should not be triggered by K",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.A,!0,!0,!0);assertFalse("IME should not be triggered by A",mh.waitingForIme_)}function testImeWinFirefox3(){simulateWinFirefox3();mh.fireEvent("focus","");assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.WIN_IME,!0,!0,!1);assertTrue("IME should be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.ENTER,!1,!1,!0);assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.WIN_IME,!0,!0,!1);assertTrue("IME should be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.U,!0,!0,!0);assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireEvent("blur","")}function testImeWinIe7(){simulateWinIe7();mh.fireEvent("focus","");assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.WIN_IME,!0,!1,!1);mh.fireKeyEvents(goog.events.KeyCodes.A,!1,!1,!0);assertTrue("IME should be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.WIN_IME,!0,!1,!1);mh.fireKeyEvents(goog.events.KeyCodes.ENTER,!1,!1,!0);assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.WIN_IME,!0,!1,!1);mh.fireKeyEvents(goog.events.KeyCodes.I,!1,!1,!0);assertTrue("IME should be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.U,!0,!0,!0);assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireEvent("blur","")}function testImeWinChrome(){simulateWinChrome();mh.fireEvent("focus","");assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.WIN_IME,!0,!1,!1);mh.fireKeyEvents(goog.events.KeyCodes.A,!1,!1,!0);assertTrue("IME should be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.WIN_IME,!0,!1,!1);mh.fireKeyEvents(goog.events.KeyCodes.ENTER,!1,!1,!0);assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.WIN_IME,!0,!1,!1);mh.fireKeyEvents(goog.events.KeyCodes.I,!1,!1,!0);assertTrue("IME should be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.U,!0,!0,!0);assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireEvent("blur","")}function testImeMacFirefox3(){simulateMacFirefox3();mh.fireEvent("focus","");assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.WIN_IME,!0,!0,!1);assertTrue("IME should be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.A,!0,!1,!0);assertTrue("IME should be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.ENTER,!0,!0,!0);assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.WIN_IME,!0,!0,!1);mh.fireKeyEvents(goog.events.KeyCodes.I,!0,!1,!0);assertTrue("IME should be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.U,!0,!0,!0);assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireEvent("blur","")}function testImeMacSafari3(){simulateMacSafari3();mh.fireEvent("focus","");assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.WIN_IME,!0,!1,!1);mh.fireKeyEvents(goog.events.KeyCodes.A,!1,!1,!0);assertTrue("IME should be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.WIN_IME,!0,!1,!1);mh.fireKeyEvents(goog.events.KeyCodes.ENTER,!1,!1,!0);assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.WIN_IME,!0,!1,!1);mh.fireKeyEvents(goog.events.KeyCodes.I,!1,!1,!0);assertTrue("IME should be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.U,!0,!0,!0);assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireEvent("blur","")}function testImeLinuxFirefox3(){simulateLinuxFirefox3();mh.fireEvent("focus","");assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.WIN_IME,!0,!0,!1);mh.fireKeyEvents(goog.events.KeyCodes.A,!0,!1,!0);assertTrue("IME should be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.ENTER,!0,!0,!0);assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.WIN_IME,!0,!0,!1);mh.fireKeyEvents(goog.events.KeyCodes.I,!0,!1,!0);assertTrue("IME should be triggered",mh.waitingForIme_);mh.fireKeyEvents(goog.events.KeyCodes.U,!0,!0,!0);assertFalse("IME should not be triggered",mh.waitingForIme_);mh.fireEvent("blur","")}function testAttachEventTarget(){var target=new goog.events.EventTarget;assertNull(mh.activeElement_);mh.attachInput(target);assertNull(mh.activeElement_);mockElement.dispatchEvent(new goog.events.Event("focus",mockElement));assertEquals(mockElement,mh.activeElement_);mh.detachInput(target)}function testActiveElement(){assertNull(mh.activeElement_);mockElement.dispatchEvent("keydown");assertEquals(mockElement,mh.activeElement_);mockElement.dispatchEvent("blur");assertNull(mh.activeElement_);mockElement.dispatchEvent("focus");assertEquals(mockElement,mh.activeElement_);mh.detachInput(mockElement);assertNull(mh.activeElement_)}function testAttachEventTarget(){var target=new goog.events.EventTarget;assertNull(mh.activeElement_);mh.attachInput(target);assertNull(mh.activeElement_);target.dispatchEvent(new goog.events.Event("focus",mockElement));assertEquals(mockElement,mh.activeElement_);mh.detachInput(target)}function testActiveElementAlreadyFocused(){var element=document.getElementById("textInput");element.style.display="";element.focus();assertNull(mh.activeElement_);mh.attachInput(element);assertEquals(element,mh.activeElement_);mh.detachInput(element);element.style.display="none"}function testUpdateDoesNotTriggerSetTokenForSelectRow(){var ih=new goog.ui.ac.InputHandler,mockAutoCompleter=new MockAutoCompleter;ih.ac_=mockAutoCompleter;ih.activeElement_=mockElement;var row={};ih.selectRow(row,!1);ih.update();assertFalse("update should not call setToken on selectRow",mockAutoCompleter.setTokenWasCalled);ih.update();assertFalse("update should not call setToken on selectRow",mockAutoCompleter.setTokenWasCalled)}function testSetTokenText(){var ih=new MockInputHandler,mockAutoCompleter=new MockAutoCompleter;ih.ac_=mockAutoCompleter;ih.activeElement_=mockElement;mockElement.value="bob, wal, joey";ih.setCursorPosition(8);ih.setTokenText("waldo",!0);assertEquals("bob, waldo, joey",mockElement.value)}function testSetTokenTextLeftHandSideOfToken(){var ih=new MockInputHandler;ih.setSeparators(" ");ih.setWhitespaceWrapEntries(!1);var mockAutoCompleter=new MockAutoCompleter;ih.ac_=mockAutoCompleter;ih.activeElement_=mockElement;mockElement.value="foo bar";ih.setCursorPosition(4);ih.setTokenText("bar",!0);assertEquals("foo bar ",mockElement.value)}function testEmptyTokenWithSeparator(){var ih=new goog.ui.ac.InputHandler,mockAutoCompleter=new MockAutoCompleter;ih.ac_=mockAutoCompleter;ih.activeElement_=mockElement;mockElement.value=", ,";goog.dom.selection.setStart(mockElement,2);ih.update();assertTrue("update should call setToken on selectRow",mockAutoCompleter.setTokenWasCalled);assertEquals("update should be called with empty string","",mockAutoCompleter.setToken)}function testNonEmptyTokenWithSeparator(){var ih=new goog.ui.ac.InputHandler,mockAutoCompleter=new MockAutoCompleter;ih.ac_=mockAutoCompleter;ih.activeElement_=mockElement;mockElement.value=", joe ,";goog.dom.selection.setStart(mockElement,5);ih.update();assertTrue("update should call setToken on selectRow",mockAutoCompleter.setTokenWasCalled);assertEquals("update should be called with expected string","joe",mockAutoCompleter.setToken)}function testGetThrottleTime(){var ih=new goog.ui.ac.InputHandler;ih.setThrottleTime(999);assertEquals("throttle time set+get",999,ih.getThrottleTime())}function testGetUpdateDuringTyping(){var ih=new goog.ui.ac.InputHandler;ih.setUpdateDuringTyping(!1);assertFalse("update during typing set+get",ih.getUpdateDuringTyping())}function testEnterToSelect(){mh.fireEvent("focus","");mh.fireKeyEvents(goog.events.KeyCodes.ENTER,!0,!0,!0);assertTrue("Should hilite",mh.ac_.selectHilitedWasCalled);assertFalse("Should NOT be dismissed",mh.ac_.dismissWasCalled)}function testEnterDoesNotSelectWhenClosed(){mh.fireEvent("focus","");mh.ac_.isOpen=goog.functions.FALSE;mh.fireKeyEvents(goog.events.KeyCodes.ENTER,!0,!0,!0);assertFalse("Should NOT hilite",mh.ac_.selectHilitedWasCalled);assertTrue("Should be dismissed",mh.ac_.dismissWasCalled)}function testTabToSelect(){mh.fireEvent("focus","");mh.fireKeyEvents(goog.events.KeyCodes.TAB,!0,!0,!0);assertTrue("Should hilite",mh.ac_.selectHilitedWasCalled);assertFalse("Should NOT be dismissed",mh.ac_.dismissWasCalled)}function testTabDoesNotSelectWhenClosed(){mh.fireEvent("focus","");mh.ac_.isOpen=goog.functions.FALSE;mh.fireKeyEvents(goog.events.KeyCodes.TAB,!0,!0,!0);assertFalse("Should NOT hilite",mh.ac_.selectHilitedWasCalled);assertTrue("Should be dismissed",mh.ac_.dismissWasCalled)}function testShiftTabDoesNotSelect(){mh.fireEvent("focus","");mh.ac_.isOpen=goog.functions.TRUE;mh.fireKeyEvents(goog.events.KeyCodes.TAB,!0,!0,!0,{shiftKey:!0});assertFalse("Should NOT hilite",mh.ac_.selectHilitedWasCalled);assertTrue("Should be dismissed",mh.ac_.dismissWasCalled)}function testEmptySeparatorUsesDefaults(){var inputHandler=new goog.ui.ac.InputHandler("");assertFalse(inputHandler.separatorCheck_.test(""));assertFalse(inputHandler.separatorCheck_.test("x"));assertTrue(inputHandler.separatorCheck_.test(","))}function testMultipleSeparatorUsesEmptyDefaults(){var inputHandler=new goog.ui.ac.InputHandler(",\n",null,!0);inputHandler.setWhitespaceWrapEntries(!1);inputHandler.setSeparators(",\n","");var mockAutoCompleter=new MockAutoCompleter;inputHandler.ac_=mockAutoCompleter;inputHandler.activeElement_=mockElement;mockElement.value="bob,wal";inputHandler.setCursorPosition(8);inputHandler.setTokenText("waldo",!0);assertEquals("bob,waldo",mockElement.value)}function testAriaTags(){var target=goog.dom.createDom(goog.dom.TagName.DIV);mh.attachInput(target);assertEquals(goog.a11y.aria.Role.COMBOBOX,goog.a11y.aria.getRole(target));assertEquals("list",goog.a11y.aria.getState(target,goog.a11y.aria.State.AUTOCOMPLETE));mh.detachInput(target);assertNull(goog.a11y.aria.getRole(target));assertEquals("",goog.a11y.aria.getState(target,goog.a11y.aria.State.AUTOCOMPLETE))}