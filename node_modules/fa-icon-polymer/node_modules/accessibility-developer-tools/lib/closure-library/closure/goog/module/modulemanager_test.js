goog.provide("goog.module.ModuleManagerTest");goog.setTestOnly("goog.module.ModuleManagerTest");goog.require("goog.array");goog.require("goog.functions");goog.require("goog.module.BaseModule");goog.require("goog.module.ModuleManager");goog.require("goog.testing");goog.require("goog.testing.MockClock");goog.require("goog.testing.jsunit");goog.require("goog.testing.recordFunction");var clock,requestCount=0;function tearDown(){clock.dispose()}function setUp(){clock=new goog.testing.MockClock(!0);requestCount=0}function getModuleManager(infoMap){var mm=new goog.module.ModuleManager;mm.setAllModuleInfo(infoMap);mm.isModuleLoaded=function(id){return this.getModuleInfo(id).isLoaded()};return mm}function createSuccessfulBatchLoader(moduleMgr){return{loadModules:function(ids,moduleInfoMap,opt_successFn,opt_errFn,opt_timeoutFn){requestCount++;setTimeout(goog.bind(this.onLoad,this,ids.concat(),0),5)},onLoad:function(ids,idxLoaded){moduleMgr.beforeLoadModuleCode(ids[idxLoaded]);moduleMgr.setLoaded(ids[idxLoaded]);moduleMgr.afterLoadModuleCode(ids[idxLoaded]);var idx=idxLoaded+1;if(idx<ids.length){setTimeout(goog.bind(this.onLoad,this,ids,idx),2)}}}}function createSuccessfulNonBatchLoader(moduleMgr){return{loadModules:function(ids,moduleInfoMap,opt_successFn,opt_errFn,opt_timeoutFn){requestCount++;setTimeout(function(){moduleMgr.beforeLoadModuleCode(ids[0]);moduleMgr.setLoaded(ids[0]);moduleMgr.afterLoadModuleCode(ids[0]);if(opt_successFn){opt_successFn()}},5)}}}function createUnsuccessfulLoader(moduleMgr,status){return{loadModules:function(ids,moduleInfoMap,opt_successFn,opt_errFn,opt_timeoutFn){moduleMgr.beforeLoadModuleCode(ids[0]);setTimeout(function(){opt_errFn(status)},5)}}}function createUnsuccessfulBatchLoader(moduleMgr,status){return{loadModules:function(ids,moduleInfoMap,opt_successFn,opt_errFn,opt_timeoutFn){setTimeout(function(){opt_errFn(status)},5)}}}function createTimeoutLoader(moduleMgr,status){return{loadModules:function(ids,moduleInfoMap,opt_successFn,opt_errFn,opt_timeoutFn){setTimeout(function(){opt_timeoutFn(status)},5)}}}function testExecOnLoad(){var mm=getModuleManager({a:[],b:[],c:[]});mm.setLoader(createSuccessfulNonBatchLoader(mm));execOnLoad_(mm);mm=getModuleManager({a:[],b:[],c:[]});mm.setLoader(createSuccessfulBatchLoader(mm));mm.setBatchModeEnabled(!0);execOnLoad_(mm)}function execOnLoad_(mm){var execCalled1=!1;mm.execOnLoad("a",function(){execCalled1=!0});assertFalse("module \"a\" should not be loaded",mm.isModuleLoaded("a"));assertTrue("module \"a\" should be loading",mm.isModuleLoading("a"));assertFalse("execCalled1 should not be set yet",execCalled1);assertTrue("ModuleManager should be active",mm.isActive());assertFalse("ModuleManager should not be user active",mm.isUserActive());clock.tick(5);assertTrue("module \"a\" should be loaded",mm.isModuleLoaded("a"));assertFalse("module \"a\" should not be loading",mm.isModuleLoading("a"));assertTrue("execCalled1 should be set",execCalled1);assertFalse("ModuleManager should not be active",mm.isActive());assertFalse("ModuleManager should not be user active",mm.isUserActive());var execCalled2=!1;mm.execOnLoad("a",function(){execCalled2=!0});assertTrue("module \"a\" should be loaded",mm.isModuleLoaded("a"));assertFalse("module \"a\" should not be loading",mm.isModuleLoading("a"));assertFalse("execCalled2 should not be set yet",execCalled2);clock.tick(5);assertTrue("execCalled2 should be set",execCalled2);var execCalled5=!1;mm.execOnLoad("c",function(){execCalled5=!0},null,null,!0);assertFalse("module \"c\" should not be loaded",mm.isModuleLoaded("c"));assertTrue("module \"c\" should be loading",mm.isModuleLoading("c"));assertFalse("execCalled1 should not be set yet",execCalled5);assertTrue("ModuleManager should be active",mm.isActive());assertTrue("ModuleManager should be user active",mm.isUserActive());clock.tick(5);assertTrue("module \"c\" should be loaded",mm.isModuleLoaded("c"));assertFalse("module \"c\" should not be loading",mm.isModuleLoading("c"));assertTrue("execCalled1 should be set",execCalled5);assertFalse("ModuleManager should not be active",mm.isActive());assertFalse("ModuleManager should not be user active",mm.isUserActive());var execCalled6=!1;mm.execOnLoad("c",function(){execCalled6=!0},void 0,void 0,void 0,!0);assertTrue("module \"c\" should be loaded",mm.isModuleLoaded("c"));assertFalse("module \"c\" should not be loading",mm.isModuleLoading("c"));assertTrue("execCalled6 should be set",execCalled6);clock.tick(5);assertTrue("execCalled6 should still be set",execCalled6)}function testExecOnLoadAbort(){var mm=getModuleManager({a:[],b:[],c:[]});mm.setLoader(createSuccessfulNonBatchLoader(mm));var execCalled1=!1,callback1=mm.execOnLoad("b",function(){execCalled1=!0});callback1.abort();clock.tick(5);assertTrue("module \"b\" should be loaded",mm.isModuleLoaded("b"));assertFalse("execCalled3 should not be set",execCalled1);var execCalled2=!1,callback2=mm.execOnLoad("a",function(){execCalled2=!0});callback2.abort();clock.tick(5);assertFalse("execCalled2 should not be set",execCalled2)}function testExecOnLoadWhilePreloadingAndViceVersa(){var mm=getModuleManager({c:[],d:[]});mm.setLoader(createSuccessfulNonBatchLoader(mm));execOnLoadWhilePreloadingAndViceVersa_(mm);mm=getModuleManager({c:[],d:[]});mm.setLoader(createSuccessfulBatchLoader(mm));mm.setBatchModeEnabled(!0);execOnLoadWhilePreloadingAndViceVersa_(mm)}function execOnLoadWhilePreloadingAndViceVersa_(mm){var mm=getModuleManager({c:[],d:[]});mm.setLoader(createSuccessfulNonBatchLoader(mm));var origSetLoaded=mm.setLoaded,calls=[0,0,0];mm.beforeLoadModuleCode=function(id){calls[0]++};mm.setLoaded=function(id){calls[1]++;origSetLoaded.call(mm,id)};mm.afterLoadModuleCode=function(id){calls[2]++};mm.preloadModule("c",2);assertFalse("module \"c\" should not be loading yet",mm.isModuleLoading("c"));clock.tick(2);assertTrue("module \"c\" should now be loading",mm.isModuleLoading("c"));mm.execOnLoad("c",function(){});assertTrue("module \"c\" should still be loading",mm.isModuleLoading("c"));clock.tick(5);assertFalse("module \"c\" should be done loading",mm.isModuleLoading("c"));assertEquals("beforeLoad should only be called once for \"c\"",1,calls[0]);assertEquals("setLoaded should only be called once for \"c\"",1,calls[1]);assertEquals("afterLoad should only be called once for \"c\"",1,calls[2]);mm.execOnLoad("d",function(){});assertTrue("module \"d\" should now be loading",mm.isModuleLoading("d"));mm.preloadModule("d",2);clock.tick(5);assertFalse("module \"d\" should be done loading",mm.isModuleLoading("d"));assertTrue("module \"d\" should now be loaded",mm.isModuleLoaded("d"));assertEquals("beforeLoad should only be called once for \"d\"",2,calls[0]);assertEquals("setLoaded should only be called once for \"d\"",2,calls[1]);assertEquals("afterLoad should only be called once for \"d\"",2,calls[2])}function testUserInitiatedExecOnLoadEventuallyLeavesManagerIdle(){var mm=getModuleManager({c:[],d:[]});mm.setLoader(createSuccessfulNonBatchLoader(mm));var calledBack1=!1,calledBack2=!1;mm.execOnLoad("c",function(){calledBack1=!0},void 0,void 0,!0);mm.execOnLoad("c",function(){calledBack2=!0},void 0,void 0,!0);mm.load("c");assertTrue("Manager should be active while waiting for load",mm.isUserActive());clock.tick(5);assertTrue("First callback should be called",calledBack1);assertTrue("Second callback should be called",calledBack2);assertFalse("Manager should be inactive after loading is complete",mm.isUserActive())}function testLoad(){var mm=getModuleManager({a:[],b:[],c:[]});mm.setLoader(createSuccessfulNonBatchLoader(mm));var calledBack=!1,error=null,d=mm.load("a");d.addCallback(function(ctx){calledBack=!0});d.addErrback(function(err){error=err});assertFalse(calledBack);assertNull(error);assertFalse(mm.isUserActive());clock.tick(5);assertTrue(calledBack);assertNull(error)}function testLoad_concurrent(){var mm=getModuleManager({a:[],b:[],c:[]});mm.setConcurrentLoadingEnabled(!0);mm.setLoader(createSuccessfulNonBatchLoader(mm));var calledBack=!1,error=null;mm.load("a");mm.load("b");assertEquals(2,requestCount);clock.tick(5);assertTrue(mm.getModuleInfo("a").isLoaded());assertTrue(mm.getModuleInfo("b").isLoaded())}function testLoad_concurrentSecondIsDepOfFist(){var mm=getModuleManager({a:[],b:[],c:[]});mm.setBatchModeEnabled(!0);mm.setConcurrentLoadingEnabled(!0);mm.setLoader(createSuccessfulBatchLoader(mm));var calledBack=!1,error=null;mm.loadMultiple(["a","b"]);mm.load("b");assertEquals("No 2nd request expected",1,requestCount);clock.tick(5);clock.tick(2);assertTrue(mm.getModuleInfo("a").isLoaded());assertTrue(mm.getModuleInfo("b").isLoaded())}function testLoad_nonConcurrent(){var mm=getModuleManager({a:[],b:[],c:[]});mm.setLoader(createSuccessfulNonBatchLoader(mm));var calledBack=!1,error=null;mm.load("a");mm.load("b");assertEquals(1,requestCount);clock.tick(5);assertTrue(mm.getModuleInfo("a").isLoaded());assertFalse(mm.getModuleInfo("b").isLoaded())}function testLoadUnknown(){var mm=getModuleManager({a:[],b:[],c:[]});mm.setLoader(createSuccessfulNonBatchLoader(mm));var e=assertThrows(function(){mm.load("DoesNotExist")});assertEquals("Unknown module: DoesNotExist",e.message)}function testLoadMultiple(){var mm=getModuleManager({a:[],b:[],c:[]});mm.setBatchModeEnabled(!0);mm.setLoader(createSuccessfulBatchLoader(mm));var calledBack=!1,error=null,calledBack2=!1,error2=null,dMap=mm.loadMultiple(["a","b"]);dMap.a.addCallback(function(ctx){calledBack=!0});dMap.a.addErrback(function(err){error=err});dMap.b.addCallback(function(ctx){calledBack2=!0});dMap.b.addErrback(function(err){error2=err});assertFalse(calledBack);assertFalse(calledBack2);clock.tick(5);assertTrue(calledBack);assertFalse(calledBack2);assertTrue("module \"a\" should be loaded",mm.isModuleLoaded("a"));assertFalse("module \"b\" should not be loaded",mm.isModuleLoaded("b"));assertFalse("module \"c\" should not be loaded",mm.isModuleLoaded("c"));clock.tick(2);assertTrue(calledBack);assertTrue(calledBack2);assertTrue("module \"a\" should be loaded",mm.isModuleLoaded("a"));assertTrue("module \"b\" should be loaded",mm.isModuleLoaded("b"));assertFalse("module \"c\" should not be loaded",mm.isModuleLoaded("c"));assertNull(error);assertNull(error2)}function testLoadMultipleWithDeps(){var mm=getModuleManager({a:[],b:["c"],c:[]});mm.setBatchModeEnabled(!0);mm.setLoader(createSuccessfulBatchLoader(mm));var calledBack=!1,error=null,calledBack2=!1,error2=null,dMap=mm.loadMultiple(["a","b"]);dMap.a.addCallback(function(ctx){calledBack=!0});dMap.a.addErrback(function(err){error=err});dMap.b.addCallback(function(ctx){calledBack2=!0});dMap.b.addErrback(function(err){error2=err});assertFalse(calledBack);assertFalse(calledBack2);clock.tick(5);assertTrue(calledBack);assertFalse(calledBack2);assertTrue("module \"a\" should be loaded",mm.isModuleLoaded("a"));assertFalse("module \"b\" should not be loaded",mm.isModuleLoaded("b"));assertFalse("module \"c\" should not be loaded",mm.isModuleLoaded("c"));clock.tick(2);assertFalse(calledBack2);assertTrue("module \"a\" should be loaded",mm.isModuleLoaded("a"));assertFalse("module \"b\" should not be loaded",mm.isModuleLoaded("b"));assertTrue("module \"c\" should be loaded",mm.isModuleLoaded("c"));clock.tick(2);assertTrue(calledBack2);assertTrue("module \"a\" should be loaded",mm.isModuleLoaded("a"));assertTrue("module \"b\" should be loaded",mm.isModuleLoaded("b"));assertTrue("module \"c\" should be loaded",mm.isModuleLoaded("c"));assertNull(error);assertNull(error2)}function testLoadMultipleWithErrors(){var mm=getModuleManager({a:[],b:[],c:[]});mm.setBatchModeEnabled(!0);mm.setLoader(createUnsuccessfulLoader(mm,500));var calledBack=!1,error=null,calledBack2=!1,error2=null,calledBack3=!1,error3=null,dMap=mm.loadMultiple(["a","b","c"]);dMap.a.addCallback(function(ctx){calledBack=!0});dMap.a.addErrback(function(err){error=err});dMap.b.addCallback(function(ctx){calledBack2=!0});dMap.b.addErrback(function(err){error2=err});dMap.c.addCallback(function(ctx){calledBack3=!0});dMap.c.addErrback(function(err){error3=err});assertFalse(calledBack);assertFalse(calledBack2);assertFalse(calledBack3);clock.tick(4);mm.setLoader(createSuccessfulBatchLoader(mm));clock.tick(1);assertFalse(calledBack);assertFalse(calledBack2);assertFalse(calledBack3);assertFalse("module \"a\" should not be loaded",mm.isModuleLoaded("a"));assertFalse("module \"b\" should not be loaded",mm.isModuleLoaded("b"));assertFalse("module \"c\" should not be loaded",mm.isModuleLoaded("c"));clock.tick(5+mm.getBackOff_());assertTrue(calledBack);assertFalse(calledBack2);assertFalse(calledBack3);assertTrue("module \"a\" should be loaded",mm.isModuleLoaded("a"));assertFalse("module \"b\" should not be loaded",mm.isModuleLoaded("b"));assertFalse("module \"c\" should not be loaded",mm.isModuleLoaded("c"));clock.tick(2);assertTrue(calledBack2);assertFalse(calledBack3);assertTrue("module \"b\" should be loaded",mm.isModuleLoaded("b"));assertFalse("module \"c\" should not be loaded",mm.isModuleLoaded("c"));clock.tick(2);assertTrue(calledBack3);assertTrue("module \"c\" should be loaded",mm.isModuleLoaded("c"));assertNull(error);assertNull(error2);assertNull(error3)}function testLoadMultipleWithErrorsFallbackOnSerial(){var mm=getModuleManager({a:[],b:[],c:[]});mm.setBatchModeEnabled(!0);mm.setLoader(createUnsuccessfulLoader(mm,500));var calledBack=!1,error=null,calledBack2=!1,error2=null,calledBack3=!1,error3=null,dMap=mm.loadMultiple(["a","b","c"]);dMap.a.addCallback(function(ctx){calledBack=!0});dMap.a.addErrback(function(err){error=err});dMap.b.addCallback(function(ctx){calledBack2=!0});dMap.b.addErrback(function(err){error2=err});dMap.c.addCallback(function(ctx){calledBack3=!0});dMap.c.addErrback(function(err){error3=err});assertFalse(calledBack);assertFalse(calledBack2);assertFalse(calledBack3);clock.tick(5);assertFalse(calledBack);assertFalse(calledBack2);assertFalse(calledBack3);assertFalse("module \"a\" should not be loaded",mm.isModuleLoaded("a"));assertFalse("module \"b\" should not be loaded",mm.isModuleLoaded("b"));assertFalse("module \"c\" should not be loaded",mm.isModuleLoaded("c"));clock.tick(5+mm.getBackOff_());assertFalse(calledBack);assertFalse(calledBack2);assertFalse(calledBack3);assertFalse("module \"a\" should not be loaded",mm.isModuleLoaded("a"));assertFalse("module \"b\" should not be loaded",mm.isModuleLoaded("b"));assertFalse("module \"c\" should not be loaded",mm.isModuleLoaded("c"));clock.tick(4+mm.getBackOff_());mm.setLoader(createSuccessfulBatchLoader(mm));clock.tick(1);assertFalse(calledBack);assertFalse(calledBack2);assertFalse(calledBack3);assertFalse("module \"a\" should not be loaded",mm.isModuleLoaded("a"));assertFalse("module \"b\" should not be loaded",mm.isModuleLoaded("b"));assertFalse("module \"c\" should not be loaded",mm.isModuleLoaded("c"));clock.tick(5);assertTrue(calledBack);assertFalse(calledBack2);assertFalse(calledBack3);assertTrue("module \"a\" should be loaded",mm.isModuleLoaded("a"));assertFalse("module \"b\" should not be loaded",mm.isModuleLoaded("b"));assertFalse("module \"c\" should not be loaded",mm.isModuleLoaded("c"));clock.tick(5);assertTrue(calledBack2);assertFalse(calledBack3);assertTrue("module \"b\" should be loaded",mm.isModuleLoaded("b"));assertFalse("module \"c\" should not be loaded",mm.isModuleLoaded("c"));clock.tick(5);assertTrue(calledBack3);assertTrue("module \"c\" should be loaded",mm.isModuleLoaded("c"));assertNull(error);assertNull(error2);assertNull(error3)}function testLoadForUser(){var mm=getModuleManager({a:[],b:[],c:[]});mm.setLoader(createSuccessfulNonBatchLoader(mm));var calledBack=!1,error=null,d=mm.load("a",!0);d.addCallback(function(ctx){calledBack=!0});d.addErrback(function(err){error=err});assertFalse(calledBack);assertNull(error);assertTrue(mm.isUserActive());clock.tick(5);assertTrue(calledBack);assertNull(error)}function testPreloadDeferredWhenNotLoaded(){var mm=getModuleManager({a:[]});mm.setLoader(createSuccessfulNonBatchLoader(mm));var calledBack=!1,d=mm.preloadModule("a");d.addCallback(function(ctx){calledBack=!0});assertFalse("module \"a\" should not be loaded yet",calledBack);clock.tick(5);assertTrue("module \"a\" should be loaded",calledBack)}function testPreloadDeferredWhenLoaded(){var mm=getModuleManager({a:[]});mm.setLoader(createSuccessfulNonBatchLoader(mm));var calledBack=!1;mm.preloadModule("a");clock.tick(5);var d=mm.preloadModule("a");d.addCallback(function(ctx){calledBack=!0});assertFalse("deferred for module \"a\" should not be called yet",calledBack);clock.tick(1);assertTrue("module \"a\" should be loaded",calledBack)}function testPreloadDeferredWhenLoading(){var mm=getModuleManager({a:[]});mm.setLoader(createSuccessfulNonBatchLoader(mm));mm.preloadModule("a");clock.tick(1);var calledBack=!1,d=mm.preloadModule("a");d.addCallback(function(ctx){calledBack=!0});assertFalse("module \"a\" should not be loaded yet",calledBack);clock.tick(4);assertTrue("module \"a\" should be loaded",calledBack)}function testLoadWhenPreloading(){var mm=getModuleManager({a:[],b:[],c:[]});mm.setLoader(createSuccessfulNonBatchLoader(mm));var origSetLoaded=mm.setLoaded,calls=[0,0,0];mm.beforeLoadModuleCode=function(id){calls[0]++};mm.setLoaded=function(id){calls[1]++;origSetLoaded.call(mm,id)};mm.afterLoadModuleCode=function(id){calls[2]++};var calledBack=!1,error=null;mm.preloadModule("c",2);assertFalse("module \"c\" should not be loading yet",mm.isModuleLoading("c"));clock.tick(2);assertTrue("module \"c\" should now be loading",mm.isModuleLoading("c"));var d=mm.load("c");d.addCallback(function(ctx){calledBack=!0});d.addErrback(function(err){error=err});assertTrue("module \"c\" should still be loading",mm.isModuleLoading("c"));clock.tick(5);assertFalse("module \"c\" should be done loading",mm.isModuleLoading("c"));assertEquals("beforeLoad should only be called once for \"c\"",1,calls[0]);assertEquals("setLoaded should only be called once for \"c\"",1,calls[1]);assertEquals("afterLoad should only be called once for \"c\"",1,calls[2]);assertTrue(calledBack);assertNull(error)}function testLoadMultipleWhenPreloading(){var mm=getModuleManager({a:[],b:["d"],c:[],d:[]});mm.setLoader(createSuccessfulBatchLoader(mm));mm.setBatchModeEnabled(!0);var origSetLoaded=mm.setLoaded,calls={a:[0,0,0],b:[0,0,0],c:[0,0,0],d:[0,0,0]};mm.beforeLoadModuleCode=function(id){calls[id][0]++};mm.setLoaded=function(id){calls[id][1]++;origSetLoaded.call(mm,id)};mm.afterLoadModuleCode=function(id){calls[id][2]++};var calledBack=!1,error=null,calledBack2=!1,error2=null,calledBack3=!1,error3=null;mm.preloadModule("c",2);mm.preloadModule("d",3);assertFalse("module \"c\" should not be loading yet",mm.isModuleLoading("c"));assertFalse("module \"d\" should not be loading yet",mm.isModuleLoading("d"));clock.tick(2);assertTrue("module \"c\" should now be loading",mm.isModuleLoading("c"));clock.tick(1);assertTrue("module \"d\" should now be loading",mm.isModuleLoading("d"));var dMap=mm.loadMultiple(["a","b","c"]);dMap.a.addCallback(function(ctx){calledBack=!0});dMap.a.addErrback(function(err){error=err});dMap.b.addCallback(function(ctx){calledBack2=!0});dMap.b.addErrback(function(err){error2=err});dMap.c.addCallback(function(ctx){calledBack3=!0});dMap.c.addErrback(function(err){error3=err});assertTrue("module \"a\" should be loading",mm.isModuleLoading("a"));assertTrue("module \"b\" should be loading",mm.isModuleLoading("b"));assertTrue("module \"c\" should still be loading",mm.isModuleLoading("c"));clock.tick(4);assertTrue(calledBack3);assertFalse("module \"c\" should be done loading",mm.isModuleLoading("c"));assertTrue("module \"d\" should still be loading",mm.isModuleLoading("d"));clock.tick(5);assertFalse("module \"d\" should be done loading",mm.isModuleLoading("d"));assertFalse(calledBack);assertFalse(calledBack2);assertTrue("module \"a\" should still be loading",mm.isModuleLoading("a"));assertTrue("module \"b\" should still be loading",mm.isModuleLoading("b"));clock.tick(7);assertTrue(calledBack);assertTrue(calledBack2);assertFalse("module \"a\" should be done loading",mm.isModuleLoading("a"));assertFalse("module \"b\" should be done loading",mm.isModuleLoading("b"));assertEquals("beforeLoad should only be called once for \"a\"",1,calls.a[0]);assertEquals("setLoaded should only be called once for \"a\"",1,calls.a[1]);assertEquals("afterLoad should only be called once for \"a\"",1,calls.a[2]);assertEquals("beforeLoad should only be called once for \"b\"",1,calls.b[0]);assertEquals("setLoaded should only be called once for \"b\"",1,calls.b[1]);assertEquals("afterLoad should only be called once for \"b\"",1,calls.b[2]);assertEquals("beforeLoad should only be called once for \"c\"",1,calls.c[0]);assertEquals("setLoaded should only be called once for \"c\"",1,calls.c[1]);assertEquals("afterLoad should only be called once for \"c\"",1,calls.c[2]);assertEquals("beforeLoad should only be called once for \"d\"",1,calls.d[0]);assertEquals("setLoaded should only be called once for \"d\"",1,calls.d[1]);assertEquals("afterLoad should only be called once for \"d\"",1,calls.d[2]);assertNull(error);assertNull(error2);assertNull(error3)}function testLoadMultipleWhenPreloadingSameModules(){var mm=getModuleManager({a:[],b:["d"],c:[],d:[]});mm.setLoader(createSuccessfulBatchLoader(mm));mm.setBatchModeEnabled(!0);var origSetLoaded=mm.setLoaded,calls={c:[0,0,0],d:[0,0,0]};mm.beforeLoadModuleCode=function(id){calls[id][0]++};mm.setLoaded=function(id){calls[id][1]++;origSetLoaded.call(mm,id)};mm.afterLoadModuleCode=function(id){calls[id][2]++};var calledBack=!1,error=null,calledBack2=!1,error2=null;mm.preloadModule("c",2);mm.preloadModule("d",3);assertFalse("module \"c\" should not be loading yet",mm.isModuleLoading("c"));assertFalse("module \"d\" should not be loading yet",mm.isModuleLoading("d"));clock.tick(2);assertTrue("module \"c\" should now be loading",mm.isModuleLoading("c"));clock.tick(1);assertTrue("module \"d\" should now be loading",mm.isModuleLoading("d"));var dMap=mm.loadMultiple(["c","d"]);dMap.c.addCallback(function(ctx){calledBack=!0});dMap.c.addErrback(function(err){error=err});dMap.d.addCallback(function(ctx){calledBack2=!0});dMap.d.addErrback(function(err){error2=err});assertTrue("module \"c\" should still be loading",mm.isModuleLoading("c"));clock.tick(4);assertFalse("module \"c\" should be done loading",mm.isModuleLoading("c"));assertTrue("module \"d\" should still be loading",mm.isModuleLoading("d"));clock.tick(5);assertFalse("module \"d\" should be done loading",mm.isModuleLoading("d"));assertTrue(calledBack);assertTrue(calledBack2);assertEquals("beforeLoad should only be called once for \"c\"",1,calls.c[0]);assertEquals("setLoaded should only be called once for \"c\"",1,calls.c[1]);assertEquals("afterLoad should only be called once for \"c\"",1,calls.c[2]);assertEquals("beforeLoad should only be called once for \"d\"",1,calls.d[0]);assertEquals("setLoaded should only be called once for \"d\"",1,calls.d[1]);assertEquals("afterLoad should only be called once for \"d\"",1,calls.d[2]);assertNull(error);assertNull(error2)}function testLoadWhenLoaded(){var mm=getModuleManager({a:[],b:[],c:[]});mm.setLoader(createSuccessfulNonBatchLoader(mm));var calledBack=!1,error=null;mm.preloadModule("b",2);clock.tick(10);assertFalse("module \"b\" should be done loading",mm.isModuleLoading("b"));var d=mm.load("b");d.addCallback(function(ctx){calledBack=!0});d.addErrback(function(err){error=err});assertTrue(calledBack);assertNull(error)}function testLoadWithFailingModule(){var mm=getModuleManager({a:[],b:[],c:[]});mm.setLoader(createUnsuccessfulLoader(mm,401));mm.registerCallback(goog.module.ModuleManager.CallbackType.ERROR,function(callbackType,id,cause){assertEquals("Failure cause was not as expected",goog.module.ModuleManager.FailureType.UNAUTHORIZED,cause);firedLoadFailed=!0});var calledBack=!1,error=null,d=mm.load("a");d.addCallback(function(ctx){calledBack=!0});d.addErrback(function(err){error=err});assertFalse(calledBack);assertNull(error);clock.tick(500);assertFalse(calledBack);assertEquals("Failure cause was not as expected",goog.module.ModuleManager.FailureType.UNAUTHORIZED,+error.message)}function testLoadMultipleWithFailingModule(){var mm=getModuleManager({a:[],b:[],c:[]});mm.setLoader(createUnsuccessfulLoader(mm,401));mm.setBatchModeEnabled(!0);mm.registerCallback(goog.module.ModuleManager.CallbackType.ERROR,function(callbackType,id,cause){assertEquals("Failure cause was not as expected",goog.module.ModuleManager.FailureType.UNAUTHORIZED,cause)});var calledBack11=!1,error11=null,calledBack12=!1,error12=null,calledBack21=!1,error21=null,calledBack22=!1,error22=null,dMap=mm.loadMultiple(["a","b"]);dMap.a.addCallback(function(ctx){calledBack11=!0});dMap.a.addErrback(function(err){error11=err});dMap.b.addCallback(function(ctx){calledBack12=!0});dMap.b.addErrback(function(err){error12=err});var dMap2=mm.loadMultiple(["b","c"]);dMap2.b.addCallback(function(ctx){calledBack21=!0});dMap2.b.addErrback(function(err){error21=err});dMap2.c.addCallback(function(ctx){calledBack22=!0});dMap2.c.addErrback(function(err){error22=err});assertFalse(calledBack11);assertFalse(calledBack12);assertFalse(calledBack21);assertFalse(calledBack22);assertNull(error11);assertNull(error12);assertNull(error21);assertNull(error22);clock.tick(5);assertFalse(calledBack11);assertFalse(calledBack12);assertFalse(calledBack21);assertFalse(calledBack22);assertEquals("Failure cause was not as expected",goog.module.ModuleManager.FailureType.UNAUTHORIZED,+error11.message);assertEquals("Failure cause was not as expected",goog.module.ModuleManager.FailureType.UNAUTHORIZED,+error12.message);assertEquals("Failure cause was not as expected",goog.module.ModuleManager.FailureType.UNAUTHORIZED,+error21.message);assertFalse(calledBack22);assertNull(error22)}function testLoadMultipleWithFailingModuleDependencies(){var mm=getModuleManager({a:[],b:[],c:["b"],d:["c"],e:[]});mm.setLoader(createUnsuccessfulLoader(mm,401));mm.setBatchModeEnabled(!0);var cancelledIds=[];mm.registerCallback(goog.module.ModuleManager.CallbackType.ERROR,function(callbackType,id,cause){assertEquals("Failure cause was not as expected",goog.module.ModuleManager.FailureType.UNAUTHORIZED,cause);cancelledIds.push(id)});var calledBack11=!1,error11=null,calledBack12=!1,error12=null,calledBack21=!1,error21=null,calledBack22=!1,error22=null,calledBack23=!1,error23=null,dMap=mm.loadMultiple(["a","b"]);dMap.a.addCallback(function(ctx){calledBack11=!0});dMap.a.addErrback(function(err){error11=err});dMap.b.addCallback(function(ctx){calledBack12=!0});dMap.b.addErrback(function(err){error12=err});var dMap2=mm.loadMultiple(["c","d","e"]);dMap2.c.addCallback(function(ctx){calledBack21=!0});dMap2.c.addErrback(function(err){error21=err});dMap2.d.addCallback(function(ctx){calledBack22=!0});dMap2.d.addErrback(function(err){error22=err});dMap2.e.addCallback(function(ctx){calledBack23=!0});dMap2.e.addErrback(function(err){error23=err});assertFalse(calledBack11);assertFalse(calledBack12);assertFalse(calledBack21);assertFalse(calledBack22);assertFalse(calledBack23);assertNull(error11);assertNull(error12);assertNull(error21);assertNull(error22);assertNull(error23);clock.tick(5);assertFalse(calledBack11);assertFalse(calledBack12);assertFalse(calledBack21);assertFalse(calledBack22);assertFalse(calledBack23);assertEquals("Failure cause was not as expected",goog.module.ModuleManager.FailureType.UNAUTHORIZED,+error11.message);assertEquals("Failure cause was not as expected",goog.module.ModuleManager.FailureType.UNAUTHORIZED,+error12.message);assertTrue(goog.array.equals(["a","b","c","d"],cancelledIds.sort()))}function testLoadMultipleWithDuplicates(){var mm=getModuleManager({a:[],b:[]});mm.setBatchModeEnabled(!0);mm.setLoader(createSuccessfulBatchLoader(mm));var listWithDuplicates=["a","a","b"];mm.loadMultiple(listWithDuplicates);assertArrayEquals("loadMultiple should not modify its input",["a","a","b"],listWithDuplicates)}function testLoadingDepsInNonBatchMode1(){var mm=getModuleManager({i:[],j:[],k:["j"],l:["i","j","k"]});mm.setLoader(createSuccessfulNonBatchLoader(mm));mm.preloadModule("j");clock.tick(5);assertTrue("module \"j\" should be loaded",mm.isModuleLoaded("j"));assertFalse("module \"i\" should not be loaded (1)",mm.isModuleLoaded("i"));assertFalse("module \"k\" should not be loaded (1)",mm.isModuleLoaded("k"));assertFalse("module \"l\" should not be loaded (1)",mm.isModuleLoaded("l"));mm.preloadModule("l");clock.tick(5);assertTrue("module \"i\" should be loaded",mm.isModuleLoaded("i"));assertFalse("module \"k\" should not be loaded (2)",mm.isModuleLoaded("k"));assertFalse("module \"l\" should not be loaded (2)",mm.isModuleLoaded("l"));clock.tick(5);assertTrue("module \"k\" should be loaded",mm.isModuleLoaded("k"));assertFalse("module \"l\" should not be loaded (3)",mm.isModuleLoaded("l"));clock.tick(5);assertTrue("module \"l\" should be loaded",mm.isModuleLoaded("l"))}function testLoadingDepsInNonBatchMode2(){var mm=getModuleManager({h:[],i:["h"],j:["i"],k:["j"],l:["i","j","k"],m:["l"]});mm.setLoader(createSuccessfulNonBatchLoader(mm));mm.preloadModule("m");clock.tick(5);assertTrue("module \"h\" should be loaded",mm.isModuleLoaded("h"));assertFalse("module \"i\" should not be loaded (1)",mm.isModuleLoaded("i"));assertFalse("module \"j\" should not be loaded (1)",mm.isModuleLoaded("j"));assertFalse("module \"k\" should not be loaded (1)",mm.isModuleLoaded("k"));assertFalse("module \"l\" should not be loaded (1)",mm.isModuleLoaded("l"));assertFalse("module \"m\" should not be loaded (1)",mm.isModuleLoaded("m"));clock.tick(5);assertTrue("module \"i\" should be loaded",mm.isModuleLoaded("i"));assertFalse("module \"j\" should not be loaded (2)",mm.isModuleLoaded("j"));assertFalse("module \"k\" should not be loaded (2)",mm.isModuleLoaded("k"));assertFalse("module \"l\" should not be loaded (2)",mm.isModuleLoaded("l"));assertFalse("module \"m\" should not be loaded (2)",mm.isModuleLoaded("m"));clock.tick(5);assertTrue("module \"j\" should be loaded",mm.isModuleLoaded("j"));assertFalse("module \"k\" should not be loaded (3)",mm.isModuleLoaded("k"));assertFalse("module \"l\" should not be loaded (3)",mm.isModuleLoaded("l"));assertFalse("module \"m\" should not be loaded (3)",mm.isModuleLoaded("m"));clock.tick(5);assertTrue("module \"k\" should be loaded",mm.isModuleLoaded("k"));assertFalse("module \"l\" should not be loaded (4)",mm.isModuleLoaded("l"));assertFalse("module \"m\" should not be loaded (4)",mm.isModuleLoaded("m"));clock.tick(5);assertTrue("module \"l\" should be loaded",mm.isModuleLoaded("l"));assertFalse("module \"m\" should not be loaded (5)",mm.isModuleLoaded("m"));clock.tick(5);assertTrue("module \"m\" should be loaded",mm.isModuleLoaded("m"))}function testLoadingDepsInBatchMode(){var mm=getModuleManager({e:[],f:[],g:["f"],h:["e","f","g"]});mm.setLoader(createSuccessfulBatchLoader(mm));mm.setBatchModeEnabled(!0);mm.preloadModule("f");clock.tick(5);assertTrue("module \"f\" should be loaded",mm.isModuleLoaded("f"));assertFalse("module \"e\" should not be loaded (1)",mm.isModuleLoaded("e"));assertFalse("module \"g\" should not be loaded (1)",mm.isModuleLoaded("g"));assertFalse("module \"h\" should not be loaded (1)",mm.isModuleLoaded("h"));mm.preloadModule("h");clock.tick(5);assertTrue("module \"e\" should be loaded",mm.isModuleLoaded("e"));assertFalse("module \"g\" should not be loaded (2)",mm.isModuleLoaded("g"));assertFalse("module \"h\" should not be loaded (2)",mm.isModuleLoaded("h"));clock.tick(2);assertTrue("module \"g\" should be loaded",mm.isModuleLoaded("g"));assertFalse("module \"h\" should not be loaded (3)",mm.isModuleLoaded("h"));clock.tick(2);assertTrue("module \"h\" should be loaded",mm.isModuleLoaded("h"))}function testUnauthorizedLoading(){var mm=getModuleManager({m:[],n:[],o:["n"]});mm.setLoader(createUnsuccessfulLoader(mm,401));var firedLoadFailed=!1;mm.registerCallback(goog.module.ModuleManager.CallbackType.ERROR,function(callbackType,id,cause){assertEquals("Failure cause was not as expected",goog.module.ModuleManager.FailureType.UNAUTHORIZED,cause);firedLoadFailed=!0});mm.execOnLoad("o",function(){});assertTrue("module \"o\" should be loading",mm.isModuleLoading("o"));assertTrue("module \"n\" should be loading",mm.isModuleLoading("n"));clock.tick(5);assertTrue("should have called unauthorized module callback",firedLoadFailed);assertFalse("module \"o\" should not be loaded",mm.isModuleLoaded("o"));assertFalse("module \"o\" should not be loading",mm.isModuleLoading("o"));assertFalse("module \"n\" should not be loaded",mm.isModuleLoaded("n"));assertFalse("module \"n\" should not be loading",mm.isModuleLoading("n"))}function testErrorLoadingModule(){var mm=getModuleManager({p:["q"],q:[],r:["q","p"]});mm.setLoader(createUnsuccessfulLoader(mm,500));mm.preloadModule("r");clock.tick(4);mm.setLoader(createSuccessfulNonBatchLoader(mm));clock.tick(1);assertFalse("module \"q\" should not be loaded (1)",mm.isModuleLoaded("q"));assertFalse("module \"p\" should not be loaded (1)",mm.isModuleLoaded("p"));assertFalse("module \"r\" should not be loaded (1)",mm.isModuleLoaded("r"));clock.tick(5+mm.getBackOff_());assertTrue("module \"q\" should be loaded",mm.isModuleLoaded("q"));assertFalse("module \"p\" should not be loaded (2)",mm.isModuleLoaded("p"));assertFalse("module \"r\" should not be loaded (2)",mm.isModuleLoaded("r"));clock.tick(5);assertTrue("module \"p\" should be loaded",mm.isModuleLoaded("p"));assertFalse("module \"r\" should not be loaded (3)",mm.isModuleLoaded("r"));clock.tick(5);assertTrue("module \"r\" should be loaded",mm.isModuleLoaded("r"))}function testErrorLoadingModule_batchMode(){var mm=getModuleManager({p:["q"],q:[],r:["q","p"]});mm.setLoader(createUnsuccessfulBatchLoader(mm,500));mm.setBatchModeEnabled(!0);mm.preloadModule("r");clock.tick(4);mm.setLoader(createSuccessfulBatchLoader(mm));clock.tick(1);assertFalse("module \"q\" should not be loaded (1)",mm.isModuleLoaded("q"));assertFalse("module \"p\" should not be loaded (1)",mm.isModuleLoaded("p"));assertFalse("module \"r\" should not be loaded (1)",mm.isModuleLoaded("r"));clock.tick(5+mm.getBackOff_());assertTrue("module \"q\" should be loaded",mm.isModuleLoaded("q"));clock.tick(2);assertTrue("module \"p\" should not be loaded (2)",mm.isModuleLoaded("p"));clock.tick(2);assertTrue("module \"r\" should not be loaded (2)",mm.isModuleLoaded("r"))}function testConsecutiveErrors(){var mm=getModuleManager({s:[]});mm.setLoader(createUnsuccessfulLoader(mm,500));var firedLoadFailed=!1;mm.registerCallback(goog.module.ModuleManager.CallbackType.ERROR,function(callbackType,id,cause){assertEquals("Failure cause was not as expected",goog.module.ModuleManager.FailureType.CONSECUTIVE_FAILURES,cause);firedLoadFailed=!0});mm.preloadModule("s");assertFalse("module \"s\" should not be loaded (0)",mm.isModuleLoaded("s"));for(var i=0;2>i;i++){clock.tick(5+mm.getBackOff_());assertFalse("module \"s\" should not be loaded (1)",mm.isModuleLoaded("s"));assertFalse("should not fire failed callback (1)",firedLoadFailed)}clock.tick(5+mm.getBackOff_());assertFalse("module \"s\" should not be loaded (2)",mm.isModuleLoaded("s"));assertTrue("should have fired failed callback",firedLoadFailed);var triedLoad=!1;mm.setLoader({loadModules:function(ids,moduleInfoMap,opt_successFn,opt_errFn){triedLoad=!0}});firedLoadFailed=!1;clock.tick(10+mm.getBackOff_());assertFalse("module \"s\" should not be loaded (3)",mm.isModuleLoaded("s"));assertFalse("No more loads should have been tried",triedLoad);assertFalse("The load failed callback should be fired only once",firedLoadFailed)}function testOldCodeGoneError(){var mm=getModuleManager({s:[]});mm.setLoader(createUnsuccessfulLoader(mm,410));var firedLoadFailed=!1;mm.registerCallback(goog.module.ModuleManager.CallbackType.ERROR,function(callbackType,id,cause){assertEquals("Failure cause was not as expected",goog.module.ModuleManager.FailureType.OLD_CODE_GONE,cause);firedLoadFailed=!0});mm.preloadModule("s",0);assertFalse("module \"s\" should not be loaded (0)",mm.isModuleLoaded("s"));clock.tick(5);assertFalse("module \"s\" should not be loaded (1)",mm.isModuleLoaded("s"));assertTrue("should have called old code gone callback",firedLoadFailed)}function testTimeout(){var mm=getModuleManager({s:[]});mm.setLoader(createTimeoutLoader(mm));var firedTimeout=!1;mm.registerCallback(goog.module.ModuleManager.CallbackType.ERROR,function(callbackType,id,cause){assertEquals("Failure cause was not as expected",goog.module.ModuleManager.FailureType.TIMEOUT,cause);firedTimeout=!0});mm.preloadModule("s",0);assertFalse("module \"s\" should not be loaded (0)",mm.isModuleLoaded("s"));clock.tick(5);assertFalse("module \"s\" should not be loaded (1)",mm.isModuleLoaded("s"));assertTrue("should have called timeout callback",firedTimeout)}function testExecOnLoadError(){var errorCallback1=goog.testing.createFunctionMock("callback1");errorCallback1(goog.module.ModuleManager.CallbackType.ERROR,"b",goog.module.ModuleManager.FailureType.INIT_ERROR);var errorCallback2=goog.testing.createFunctionMock("callback2");errorCallback2(goog.module.ModuleManager.CallbackType.ERROR,"b",goog.module.ModuleManager.FailureType.INIT_ERROR);errorCallback1.$replay();errorCallback2.$replay();var mm=new goog.module.ModuleManager;mm.setLoader(createSuccessfulNonBatchLoader(mm));mm.registerCallback(goog.module.ModuleManager.CallbackType.ERROR,errorCallback1);mm.setAllModuleInfo({a:[],b:[],c:[]});mm.registerCallback(goog.module.ModuleManager.CallbackType.ERROR,errorCallback2);var execOnLoadBCalled=!1;mm.execOnLoad("b",function(){execOnLoadBCalled=!0;throw new Error});assertThrows(function(){clock.tick(5)});assertTrue("execOnLoad should have been called on module b.",execOnLoadBCalled);errorCallback1.$verify();errorCallback2.$verify()}function testExecOnLoadErrorModuleInfoString(){var errorCallback=goog.testing.createFunctionMock("callback");errorCallback(goog.module.ModuleManager.CallbackType.ERROR,"b",goog.module.ModuleManager.FailureType.INIT_ERROR);errorCallback.$replay();var mm=new goog.module.ModuleManager;mm.setLoader(createSuccessfulNonBatchLoader(mm));mm.registerCallback(goog.module.ModuleManager.CallbackType.ERROR,errorCallback);mm.setAllModuleInfoString("a/b/c");var execOnLoadBCalled=!1;mm.execOnLoad("b",function(){execOnLoadBCalled=!0;throw new Error});assertThrows(function(){clock.tick(5)});assertTrue("execOnLoad should have been called on module b.",execOnLoadBCalled);errorCallback.$verify()}function testDispose(){var mm=getModuleManager({a:[],b:[],c:[]}),moduleInfoA=mm.getModuleInfo("a");assertNotNull(moduleInfoA);var moduleInfoB=mm.getModuleInfo("b");assertNotNull(moduleInfoB);var moduleInfoC=mm.getModuleInfo("c");assertNotNull(moduleInfoC);mm.dispose();assertTrue(moduleInfoA.isDisposed());assertTrue(moduleInfoB.isDisposed());assertTrue(moduleInfoC.isDisposed())}function testDependencyOrderingWithSimpleDeps(){var mm=getModuleManager({a:["b","c"],b:["d"],c:["e","f"],d:[],e:[],f:[]}),ids=mm.getNotYetLoadedTransitiveDepIds_("a");assertDependencyOrder(ids,mm);assertArrayEquals(["d","e","f","b","c","a"],ids)}function testDependencyOrderingWithCommonDepsInDeps(){var mm=getModuleManager({a:["b","c"],b:["d"],c:["d"],d:[]}),ids=mm.getNotYetLoadedTransitiveDepIds_("a");assertDependencyOrder(ids,mm);assertArrayEquals(["d","b","c","a"],ids)}function testDependencyOrderingWithCommonDepsInRoot1(){var mm=getModuleManager({a:["b","c"],b:["c"],c:[]}),ids=mm.getNotYetLoadedTransitiveDepIds_("a");assertDependencyOrder(ids,mm);assertArrayEquals(["c","b","a"],ids)}function testDependencyOrderingWithCommonDepsInRoot2(){var mm=getModuleManager({a:["b","c"],b:[],c:["b"]}),ids=mm.getNotYetLoadedTransitiveDepIds_("a");assertDependencyOrder(ids,mm);assertArrayEquals(["b","c","a"],ids)}function testDependencyOrderingWithGmailExample(){var mm=getModuleManager({s:["dp","ml","md"],dp:["a"],ml:["ld","m"],ld:["a"],m:["ad","mh","n"],md:["mh","ld"],a:[],mh:[],ad:[],n:[]});mm.setLoaded("a");mm.setLoaded("m");mm.setLoaded("n");mm.setLoaded("ad");mm.setLoaded("mh");var ids=mm.getNotYetLoadedTransitiveDepIds_("s");assertDependencyOrder(ids,mm);assertArrayEquals(["ld","dp","ml","md","s"],ids)}function assertDependencyOrder(list,mm){for(var seen={},i=0,id;i<list.length;i++){id=list[i];seen[id]=!0;for(var deps=mm.getModuleInfo(id).getDependencies(),j=0,dep;j<deps.length;j++){dep=deps[j];assertTrue("Unresolved dependency ["+dep+"] for ["+id+"].",seen[dep]||mm.getModuleInfo(dep).isLoaded())}}}function testRegisterInitializationCallback(){var initCalled=0,mm=getModuleManager({a:[],b:[],c:[]});mm.setLoader(createSuccessfulNonBatchLoaderWithRegisterInitCallback(mm,function(){++initCalled}));execOnLoad_(mm);assertTrue(2==initCalled)}function createSuccessfulNonBatchLoaderWithRegisterInitCallback(moduleMgr,fn){return{loadModules:function(ids,moduleInfoMap,opt_successFn,opt_errFn,opt_timeoutFn){moduleMgr.beforeLoadModuleCode(ids[0]);moduleMgr.registerInitializationCallback(fn);setTimeout(function(){moduleMgr.setLoaded(ids[0]);moduleMgr.afterLoadModuleCode(ids[0]);if(opt_successFn){opt_successFn()}},5)}}}function testSetModuleConstructor(){var initCalled=0,mm=getModuleManager({a:[],b:[],c:[]}),info={a:{ctor:AModule,count:0},b:{ctor:BModule,count:0},c:{ctor:CModule,count:0}};function AModule(){++info.a.count;goog.module.BaseModule.call(this)}goog.inherits(AModule,goog.module.BaseModule);function BModule(){++info.b.count;goog.module.BaseModule.call(this)}goog.inherits(BModule,goog.module.BaseModule);function CModule(){++info.c.count;goog.module.BaseModule.call(this)}goog.inherits(CModule,goog.module.BaseModule);mm.setLoader(createSuccessfulNonBatchLoaderWithConstructor(mm,info));execOnLoad_(mm);assertTrue(1==info.a.count);assertTrue(0==info.b.count);assertTrue(1==info.c.count);assertTrue(mm.getModuleInfo("a").getModule()instanceof AModule);assertTrue(mm.getModuleInfo("c").getModule()instanceof CModule)}function testLoadWhenInitializing(){var mm=getModuleManager({a:[]});mm.setLoader(createSuccessfulNonBatchLoader(mm));var info={a:{ctor:AModule,count:0}};function AModule(){++info.a.count;goog.module.BaseModule.call(this)}goog.inherits(AModule,goog.module.BaseModule);AModule.prototype.initialize=function(){mm.load("a")};mm.setLoader(createSuccessfulNonBatchLoaderWithConstructor(mm,info));mm.preloadModule("a");clock.tick(5);assertEquals(info.a.count,1)}function testErrorInEarlyCallback(){var errback=goog.testing.recordFunction(),callback=goog.testing.recordFunction(),mm=getModuleManager({a:[],b:["a"]});mm.getModuleInfo("a").registerEarlyCallback(goog.functions.error("error"));mm.getModuleInfo("a").registerCallback(callback);mm.getModuleInfo("a").registerErrback(errback);mm.setLoader(createSuccessfulNonBatchLoaderWithConstructor(mm,createModulesFor("a","b")));mm.preloadModule("b");var e=assertThrows(function(){clock.tick(5)});assertEquals("error",e.message);assertEquals(0,callback.getCallCount());assertEquals(1,errback.getCallCount());assertEquals(goog.module.ModuleManager.FailureType.INIT_ERROR,errback.getLastCall().getArguments()[0]);assertTrue(mm.getModuleInfo("a").isLoaded());assertFalse(mm.getModuleInfo("b").isLoaded());clock.tick(5);assertTrue(mm.getModuleInfo("b").isLoaded())}function testErrorInNormalCallback(){var earlyCallback=goog.testing.recordFunction(),errback=goog.testing.recordFunction(),mm=getModuleManager({a:[],b:["a"]});mm.getModuleInfo("a").registerEarlyCallback(earlyCallback);mm.getModuleInfo("a").registerEarlyCallback(goog.functions.error("error"));mm.getModuleInfo("a").registerErrback(errback);mm.setLoader(createSuccessfulNonBatchLoaderWithConstructor(mm,createModulesFor("a","b")));mm.preloadModule("b");var e=assertThrows(function(){clock.tick(10)});clock.tick(10);assertEquals("error",e.message);assertEquals(1,errback.getCallCount());assertEquals(goog.module.ModuleManager.FailureType.INIT_ERROR,errback.getLastCall().getArguments()[0]);assertTrue(mm.getModuleInfo("a").isLoaded());assertTrue(mm.getModuleInfo("b").isLoaded())}function testErrorInErrback(){var mm=getModuleManager({a:[],b:["a"]});mm.getModuleInfo("a").registerCallback(goog.functions.error("error1"));mm.getModuleInfo("a").registerErrback(goog.functions.error("error2"));mm.setLoader(createSuccessfulNonBatchLoaderWithConstructor(mm,createModulesFor("a","b")));mm.preloadModule("a");var e=assertThrows(function(){clock.tick(10)});assertEquals("error1",e.message);var e=assertThrows(function(){clock.tick(10)});assertEquals("error2",e.message);assertTrue(mm.getModuleInfo("a").isLoaded())}function createModulesFor(var_args){for(var result={},i=0,key;i<arguments.length;i++){key=arguments[i];result[key]={ctor:goog.module.BaseModule}}return result}function createSuccessfulNonBatchLoaderWithConstructor(moduleMgr,info){return{loadModules:function(ids,moduleInfoMap,opt_successFn,opt_errFn,opt_timeoutFn){setTimeout(function(){moduleMgr.beforeLoadModuleCode(ids[0]);moduleMgr.setModuleConstructor(info[ids[0]].ctor);moduleMgr.setLoaded(ids[0]);moduleMgr.afterLoadModuleCode(ids[0]);if(opt_successFn){opt_successFn()}},5)}}}function testInitCallbackInBaseModule(){var mm=new goog.module.ModuleManager,called=!1,context;mm.registerInitializationCallback(function(mcontext){called=!0;context=mcontext});mm.setAllModuleInfo({a:[],b:["a"]});assertTrue("Base initialization not called",called);assertNull("Context should still be null",context);var mm=new goog.module.ModuleManager;called=!1;mm.registerInitializationCallback(function(mcontext){called=!0;context=mcontext});var appContext={};mm.setModuleContext(appContext);assertTrue("Base initialization not called after setModuleContext",called);assertEquals("Did not receive module context",appContext,context)}function testSetAllModuleInfoString(){var info="base/one:0/two:0/three:0,1,2/four:0,3/five:",mm=new goog.module.ModuleManager;mm.setAllModuleInfoString(info);assertNotNull("Base should exist",mm.getModuleInfo("base"));assertNotNull("One should exist",mm.getModuleInfo("one"));assertNotNull("Two should exist",mm.getModuleInfo("two"));assertNotNull("Three should exist",mm.getModuleInfo("three"));assertNotNull("Four should exist",mm.getModuleInfo("four"));assertNotNull("Five should exist",mm.getModuleInfo("five"));assertArrayEquals(["base","one","two"],mm.getModuleInfo("three").getDependencies());assertArrayEquals(["base","three"],mm.getModuleInfo("four").getDependencies());assertArrayEquals([],mm.getModuleInfo("five").getDependencies())}function testSetAllModuleInfoStringWithEmptyString(){var mm=new goog.module.ModuleManager,called=!1,context;mm.registerInitializationCallback(function(mcontext){called=!0;context=mcontext});mm.setAllModuleInfoString("");assertTrue("Initialization not called",called)}function testBackOffAmounts(){var mm=new goog.module.ModuleManager;assertEquals(0,mm.getBackOff_());mm.consecutiveFailures_++;assertEquals(5e3,mm.getBackOff_());mm.consecutiveFailures_++;assertEquals(2e4,mm.getBackOff_())}function testIdleCallbackWithInitialModules(){var callback=goog.testing.recordFunction(),mm=new goog.module.ModuleManager;mm.setAllModuleInfoString("a",["a"]);mm.registerCallback(goog.module.ModuleManager.CallbackType.IDLE,callback);assertTrue(mm.isActive());mm.beforeLoadModuleCode("a");assertEquals(0,callback.getCallCount());mm.setLoaded("a");mm.afterLoadModuleCode("a");assertFalse(mm.isActive());assertEquals(1,callback.getCallCount())}