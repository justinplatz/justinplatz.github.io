goog.provide("goog.proto2.ObjectSerializer");goog.require("goog.asserts");goog.require("goog.proto2.FieldDescriptor");goog.require("goog.proto2.Serializer");goog.require("goog.string");goog.proto2.ObjectSerializer=function(opt_keyOption,opt_serializeBooleanAsNumber){this.keyOption_=opt_keyOption;this.serializeBooleanAsNumber_=opt_serializeBooleanAsNumber};goog.inherits(goog.proto2.ObjectSerializer,goog.proto2.Serializer);goog.proto2.ObjectSerializer.KeyOption={TAG:0,NAME:1};goog.proto2.ObjectSerializer.prototype.serialize=function(message){for(var descriptor=message.getDescriptor(),fields=descriptor.getFields(),objectValue={},i=0;i<fields.length;i++){var field=fields[i],key=this.keyOption_==goog.proto2.ObjectSerializer.KeyOption.NAME?field.getName():field.getTag();if(message.has(field)){if(field.isRepeated()){var array=[];objectValue[key]=array;for(var j=0;j<message.countOf(field);j++){array.push(this.getSerializedValue(field,message.get(field,j)))}}else{objectValue[key]=this.getSerializedValue(field,message.get(field))}}}message.forEachUnknown(function(tag,value){objectValue[tag]=value});return objectValue};goog.proto2.ObjectSerializer.prototype.getSerializedValue=function(field,value){if(this.serializeBooleanAsNumber_&&field.getFieldType()==goog.proto2.FieldDescriptor.FieldType.BOOL&&goog.isBoolean(value)){return value?1:0}return goog.proto2.ObjectSerializer.base(this,"getSerializedValue",field,value)};goog.proto2.ObjectSerializer.prototype.getDeserializedValue=function(field,value){if(field.getFieldType()==goog.proto2.FieldDescriptor.FieldType.BOOL&&goog.isNumber(value)){return!!value}return goog.proto2.ObjectSerializer.base(this,"getDeserializedValue",field,value)};goog.proto2.ObjectSerializer.prototype.deserializeTo=function(message,data){var descriptor=message.getDescriptor();for(var key in data){var field,value=data[key],isNumeric=goog.string.isNumeric(key);if(isNumeric){field=descriptor.findFieldByTag(key)}else{goog.asserts.assert(this.keyOption_==goog.proto2.ObjectSerializer.KeyOption.NAME,"Key mode "+this.keyOption_+"for key "+key+" is not "+goog.proto2.ObjectSerializer.KeyOption.NAME);field=descriptor.findFieldByName(key)}if(field){if(field.isRepeated()){goog.asserts.assert(goog.isArray(value),"Value for repeated field "+field+" must be an array.");for(var j=0;j<value.length;j++){message.add(field,this.getDeserializedValue(field,value[j]))}}else{goog.asserts.assert(!goog.isArray(value),"Value for non-repeated field "+field+" must not be an array.");message.set(field,this.getDeserializedValue(field,value))}}else{if(isNumeric){message.setUnknown(+key,value)}else{goog.asserts.fail("Failed to find field: "+key)}}}};