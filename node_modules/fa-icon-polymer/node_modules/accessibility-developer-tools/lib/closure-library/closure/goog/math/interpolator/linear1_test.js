goog.provide("goog.math.interpolator.Linear1Test");goog.setTestOnly("goog.math.interpolator.Linear1Test");goog.require("goog.math.interpolator.Linear1");goog.require("goog.testing.jsunit");function testLinear(){var x=[],y=[],interp=new goog.math.interpolator.Linear1;interp.setData(x,y);assertTrue(isNaN(interp.interpolate(1)));x=[0];y=[3];interp=new goog.math.interpolator.Linear1;interp.setData(x,y);assertRoughlyEquals(3,interp.interpolate(1),1e-4);x=[0,1,3,6,7];y=[0,0,0,0,0];for(var i=0;i<x.length;++i){y[i]=Math.sin(x[i])}interp=new goog.math.interpolator.Linear1;interp.setData(x,y);for(var xi=[0,.5,1,2,3,4,5,6,7],expected=[0,.4207,.8415,.4913,.1411,9e-4,-.1392,-.2794,.657],result=[0,0,0,0,0,0,0,0,0],i=0;i<xi.length;++i){result[i]=interp.interpolate(xi[i])}assertElementsRoughlyEqual(expected,result,1e-4)}function testOutOfBounds(){var x=[0,1,2],y=[2,5,4],interp=new goog.math.interpolator.Linear1;interp.setData(x,y);assertRoughlyEquals(interp.interpolate(-1),-1,1e-4);assertRoughlyEquals(interp.interpolate(4),2,1e-4)}function testInverse(){var x=[0,1,3,6,7],y=[0,2,7,8,10],interp=new goog.math.interpolator.Linear1;interp.setData(x,y);for(var invInterp=interp.getInverse(),xi=[0,.5,1,2,3,4,5,6,7],yi=[0,1,2,4.5,7,7.3333,7.6667,8,10],resultX=[0,0,0,0,0,0,0,0,0],resultY=[0,0,0,0,0,0,0,0,0],i=0;i<xi.length;++i){resultY[i]=interp.interpolate(xi[i]);resultX[i]=invInterp.interpolate(yi[i])}assertElementsRoughlyEqual(xi,resultX,1e-4);assertElementsRoughlyEqual(yi,resultY,1e-4)}