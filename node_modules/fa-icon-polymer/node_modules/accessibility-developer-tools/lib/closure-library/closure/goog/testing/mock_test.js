goog.provide("goog.testing.MockTest");goog.setTestOnly("goog.testing.MockTest");goog.require("goog.array");goog.require("goog.testing");goog.require("goog.testing.Mock");goog.require("goog.testing.MockControl");goog.require("goog.testing.MockExpectation");goog.require("goog.testing.jsunit");var RealObject=function(){};RealObject.prototype.a=function(){fail("real object should never be called")};RealObject.prototype.b=function(){fail("real object should never be called")};var matchers=goog.testing.mockmatchers,mock;function setUp(){var obj=new RealObject;mock=new goog.testing.Mock(obj)}function testMockErrorMessage(){var expectation=new goog.testing.MockExpectation("a");assertEquals(0,expectation.getErrorMessageCount());assertEquals("",expectation.getErrorMessage());expectation.addErrorMessage("foo failed");assertEquals(1,expectation.getErrorMessageCount());assertEquals("foo failed",expectation.getErrorMessage());expectation.addErrorMessage("bar failed");assertEquals(2,expectation.getErrorMessageCount());assertEquals("foo failed\nbar failed",expectation.getErrorMessage())}function testVerifyArgumentList(){var expectation=new goog.testing.MockExpectation("a");assertEquals("",expectation.getErrorMessage());expectation.argumentList=["foo"];assertTrue(mock.$verifyCall(expectation,"a",["foo"]));expectation.argumentList=[2];assertTrue(mock.$verifyCall(expectation,"a",[2]));var obj={prop1:"prop1",prop2:2};expectation.argumentList=[obj];assertTrue(mock.$verifyCall(expectation,"a",[obj]));var obj2={prop1:"prop1",prop2:2};expectation.argumentList=[obj];assertTrue(mock.$verifyCall(expectation,"a",[obj2]));assertEquals("",expectation.getErrorMessage());expectation.argumentList=["foo",2,obj,obj2];assertTrue(mock.$verifyCall(expectation,"a",["foo",2,obj,obj2]));expectation.argumentList=["foo",matchers.isNumber];assertTrue(mock.$verifyCall(expectation,"a",["foo",1]));expectation.argumentList=[new matchers.InstanceOf(RealObject)];assertTrue(mock.$verifyCall(expectation,"a",[new RealObject]))}function testVerifyArgumentListForObjectMethods(){var expectation=new goog.testing.MockExpectation("toString");expectation.argumentList=[];assertTrue(mock.$verifyCall(expectation,"toString",[]))}function testRegisterArgumentListVerifier(){var expectationA=new goog.testing.MockExpectation("a"),expectationB=new goog.testing.MockExpectation("b");mock.$registerArgumentListVerifier("a",function(expectedArgs,args){return goog.array.equals(expectedArgs,args,function(a,b){return a===b})});expectationA.argumentList=["foo"];assertTrue(mock.$verifyCall(expectationA,"a",["foo"]));expectationA.argumentList=[2];assertTrue(mock.$verifyCall(expectationA,"a",[2]));var obj={prop1:"prop1",prop2:2};expectationA.argumentList=[obj];expectationB.argumentList=[obj];assertTrue(mock.$verifyCall(expectationA,"a",[obj]));assertTrue(mock.$verifyCall(expectationB,"b",[obj]));var obj2={prop1:"prop1",prop2:2};expectationA.argumentList=[obj];expectationB.argumentList=[obj];assertFalse(mock.$verifyCall(expectationA,"a",[obj2]));assertTrue(mock.$verifyCall(expectationB,"b",[obj2]));expectationA.argumentList=["foo",2,obj,obj2];expectationB.argumentList=["foo",2,obj,obj2];assertFalse(mock.$verifyCall(expectationA,"a",["foo",2,obj2,obj]));assertTrue(mock.$verifyCall(expectationB,"b",["foo",2,obj2,obj]))}function testCreateProxy(){mock=new goog.testing.Mock(RealObject,!1,!0);assertTrue(mock.$proxy instanceof RealObject);assertThrows(function(){new goog.testing.Mock(RealObject,!0,!0)});assertThrows(function(){new goog.testing.Mock(1,!1,!0)})}function testValidConstructorArgument(){var someNamespace={};assertThrows(function(){new goog.testing.Mock(someNamespace.RealObjectWithTypo)})}function testArgumentsAsString(){assertEquals("()",mock.$argumentsAsString([]));assertEquals("(string, number, object, null)",mock.$argumentsAsString(["red",1,{},null]))}function testThrowCallExceptionBadArgs(){var msg;mock.$throwException=function(m){msg=m};mock.$throwCallException("fn1",["b"],{name:"fn1",argumentList:["c"],getErrorMessage:function(){return""}});assertContains("Bad arguments to fn1().\nActual: (string)\nExpected: (string)",msg)}function testThrowCallExceptionUnexpected(){var msg;mock.$throwException=function(m){msg=m};mock.$throwCallException("fn1",["b"]);assertEquals("Unexpected call to fn1(string).",msg)}function testThrowCallExceptionUnexpectedWithNext(){var msg;mock.$throwException=function(m){msg=m};mock.$throwCallException("fn1",["b"],{name:"fn2",argumentList:[3],getErrorMessage:function(){return""}});assertEquals("Unexpected call to fn1(string).\n"+"Next expected call was to fn2(number)",msg)}function testBindNonEnumerableFunctions(){var Foo=function(){};Foo.prototype.constructor=function(){fail("real object should never be called")};Foo.prototype.hasOwnProperty=function(){fail("real object should never be called")};Foo.prototype.isPrototypeOf=function(){fail("real object should never be called")};Foo.prototype.propertyIsEnumerable=function(){fail("real object should never be called")};Foo.prototype.toLocaleString=function(){fail("real object should never be called")};Foo.prototype.toString=function(){fail("real object should never be called")};Foo.prototype.valueOf=function(){fail("real object should never be called")};var mockControl=new goog.testing.MockControl,mock=mockControl.createLooseMock(Foo);mock.constructor().$returns("constructor");mock.hasOwnProperty().$returns("hasOwnProperty");mock.isPrototypeOf().$returns("isPrototypeOf");mock.propertyIsEnumerable().$returns("propertyIsEnumerable");mock.toLocaleString().$returns("toLocaleString");mock.toString().$returns("toString");mock.valueOf().$returns("valueOf");mockControl.$replayAll();assertEquals("constructor",mock.constructor());assertEquals("hasOwnProperty",mock.hasOwnProperty());assertEquals("isPrototypeOf",mock.isPrototypeOf());assertEquals("propertyIsEnumerable",mock.propertyIsEnumerable());assertEquals("toLocaleString",mock.toLocaleString());assertEquals("toString",mock.toString());assertEquals("valueOf",mock.valueOf());mockControl.$verifyAll()}function testMockInheritedMethods(){var SubType=function(){};goog.inherits(SubType,RealObject);SubType.prototype.c=function(){fail("real object should never be called")};var mockControl=new goog.testing.MockControl,mock=mockControl.createLooseMock(SubType);mock.a().$returns("a");mock.b().$returns("b");mock.c().$returns("c");mockControl.$replayAll();assertEquals("a",mock.a());assertEquals("b",mock.b());assertEquals("c",mock.c());mockControl.$verifyAll()}function testMockEs6ClassMethods(){try{eval("var Foo = class {"+"  a() {"+"    fail('real object should never be called');"+"  }"+"}")}catch(e){if(e instanceof SyntaxError){return}}var mockControl=new goog.testing.MockControl,mock=mockControl.createLooseMock(Foo);mock.a().$returns("a");mockControl.$replayAll();assertEquals("a",mock.a());mockControl.$verifyAll()}