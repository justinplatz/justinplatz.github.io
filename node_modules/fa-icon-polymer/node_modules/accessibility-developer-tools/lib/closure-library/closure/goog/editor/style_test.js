goog.provide("goog.editor.styleTest");goog.setTestOnly("goog.editor.styleTest");goog.require("goog.dom");goog.require("goog.dom.TagName");goog.require("goog.editor.BrowserFeature");goog.require("goog.editor.style");goog.require("goog.events.EventHandler");goog.require("goog.events.EventType");goog.require("goog.style");goog.require("goog.testing.LooseMock");goog.require("goog.testing.jsunit");goog.require("goog.testing.mockmatchers");var parentNode=null,childNode1=null,childNode2=null,childNode3=null,gChildWsNode1=null,gChildTextNode1=null,gChildNbspNode1=null,gChildMixedNode1=null,gChildWsNode2a=null,gChildWsNode2b=null,gChildTextNode3a=null,gChildWsNode3=null,gChildTextNode3b=null,$dom=goog.dom.createDom,$text=goog.dom.createTextNode;function setUpGetNodeFunctions(){parentNode=$dom(goog.dom.TagName.P,{id:"parentNode"},childNode1=$dom(goog.dom.TagName.DIV,null,gChildWsNode1=$text(" \t\r\n"),gChildTextNode1=$text("Child node"),gChildNbspNode1=$text("\xA0"),gChildMixedNode1=$text("Text\n plus\xA0")),childNode2=$dom(goog.dom.TagName.DIV,null,gChildWsNode2a=$text(""),gChildWsNode2b=$text(" ")),childNode3=$dom(goog.dom.TagName.DIV,null,gChildTextNode3a=$text("I am a grand child"),gChildWsNode3=$text("   \t  \r   \n"),gChildTextNode3b=$text("I am also a grand child")));document.body.appendChild(parentNode)}function tearDownGetNodeFunctions(){document.body.removeChild(parentNode);parentNode=null;childNode1=null;childNode2=null;childNode3=null;gChildWsNode1=null;gChildTextNode1=null;gChildNbspNode1=null;gChildMixedNode1=null;gChildWsNode2a=null;gChildWsNode2b=null;gChildTextNode3a=null;gChildWsNode3=null;gChildTextNode3b=null}function testIsDisplayBlock(){assertTrue("Body is block style",goog.editor.style.isDisplayBlock(document.body));var tableNode=$dom(goog.dom.TagName.TABLE);assertFalse("Table is not block style",goog.editor.style.isDisplayBlock(tableNode))}function testIsContainer(){var tableNode=$dom(goog.dom.TagName.TABLE),liNode=$dom(goog.dom.TagName.LI),textNode=$text("I am text");document.body.appendChild(textNode);assertTrue("Table is a container",goog.editor.style.isContainer(tableNode));assertTrue("Body is a container",goog.editor.style.isContainer(document.body));assertTrue("List item is a container",goog.editor.style.isContainer(liNode));assertFalse("Text node is not a container",goog.editor.style.isContainer(textNode))}function testGetContainer(){setUpGetNodeFunctions();assertEquals("Should return self",childNode1,goog.editor.style.getContainer(childNode1));assertEquals("Should return parent",childNode1,goog.editor.style.getContainer(gChildWsNode1));assertNull("Document has no ancestors",goog.editor.style.getContainer(document));tearDownGetNodeFunctions()}function testMakeUnselectable(){var div=goog.dom.createElement(goog.dom.TagName.DIV);div.innerHTML="<div>No input</div>"+"<p><input type=\"checkbox\">Checkbox</p>"+"<span><input type=\"text\"></span>";document.body.appendChild(div);var eventHandler=new goog.testing.LooseMock(goog.events.EventHandler);if(goog.editor.BrowserFeature.HAS_UNSELECTABLE_STYLE){eventHandler.listen(div,goog.events.EventType.MOUSEDOWN,goog.testing.mockmatchers.isFunction,!0)}eventHandler.$replay();var childDiv=div.firstChild,p=div.childNodes[1],span=div.lastChild,checkbox=p.firstChild,text=span.firstChild;goog.editor.style.makeUnselectable(div,eventHandler);assertEquals("For browsers with non-overridable selectability, the root should be "+"selectable.  Otherwise it should be unselectable.",!goog.editor.BrowserFeature.HAS_UNSELECTABLE_STYLE,goog.style.isUnselectable(div));assertTrue(goog.style.isUnselectable(childDiv));assertTrue(goog.style.isUnselectable(p));assertTrue(goog.style.isUnselectable(checkbox));assertEquals("For browsers with non-overridable selectability, the span will be "+"selectable.  Otherwise it will be unselectable. ",!goog.editor.BrowserFeature.HAS_UNSELECTABLE_STYLE,goog.style.isUnselectable(span));assertFalse(goog.style.isUnselectable(text));eventHandler.$verify()}