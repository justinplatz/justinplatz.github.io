goog.provide("goog.testing.style.layoutassertsTest");goog.setTestOnly("goog.testing.style.layoutassertsTest");goog.require("goog.dom");goog.require("goog.dom.TagName");goog.require("goog.style");goog.require("goog.testing.TestCase");goog.require("goog.testing.jsunit");goog.require("goog.testing.style.layoutasserts");var div1,div2,DEFAULT_WIDTH=200,DEFAULT_HEIGHT=100;function setUp(){goog.testing.TestCase.getActiveTestCase().failOnUnreportedAsserts=!1;div1=goog.dom.createDom(goog.dom.TagName.DIV,{id:"test",className:"test",style:"position:absolute;top:0;left:0;"+"width:"+DEFAULT_WIDTH+"px;"+"height:"+DEFAULT_HEIGHT+"px;"+"background-color:#EEE",innerHTML:"abc"});div2=goog.dom.createDom(goog.dom.TagName.DIV,{id:"test2",className:"test2",style:"position:absolute;"+"top:0;left:0;"+"width:"+DEFAULT_WIDTH+"px;"+"height:"+DEFAULT_HEIGHT+"px;"+"background-color:#F00",innerHTML:"abc"})}function tearDown(){div1=null;div2=null}function testAssertIsVisible(){assertThrows("Exception should be thrown when asserting visibility.",goog.bind(assertIsVisible,null,null));document.body.appendChild(div1);assertIsVisible("Div should be visible.",div1);failed=!1;goog.style.setElementShown(div1,!1);assertThrows("Exception should be thrown when asserting visibility.",goog.bind(assertIsVisible,null,div1));document.body.removeChild(div1)}function testAssertNotVisible(){var element=null;assertNotVisible(element);document.body.appendChild(div1);assertThrows("Exception should be thrown when asserting non-visibility.",goog.bind(assertNotVisible,null,div1));document.body.removeChild(div1)}function testAssertIntersect(){document.body.appendChild(div1);document.body.appendChild(div2);goog.style.setPosition(div1,0,0);goog.style.setPosition(div2,500,500);assertThrows("Exception should be thrown when asserting intersection.",goog.bind(assertIntersect,null,div1,div2));assertNoIntersect(div1,div2);goog.style.setPosition(div1,0,0);goog.style.setPosition(div2,50,50);assertThrows("Exception should be thrown when asserting no intersection.",goog.bind(assertNoIntersect,null,div1,div2));assertIntersect(div1,div2);goog.style.setPosition(div1,0,0);goog.style.setPosition(div2,0,0);assertThrows("Exception should be thrown when asserting no intersection.",goog.bind(assertNoIntersect,null,div1,div2));assertIntersect(div1,div2)}function testAssertWidth(){document.body.appendChild(div1);assertWidth(div1,DEFAULT_WIDTH);assertThrows("Exception should be thrown when elements has wrong width",goog.bind(assertWidth,null,div1,400));assertWidthWithinTolerance(div1,180,20);assertThrows("Exception should be thrown when element's width exceeds tolerance",goog.bind(assertWidthWithinTolerance,null,div1,100,.1))}function testAssertHeight(){document.body.appendChild(div1);assertHeight(div1,DEFAULT_HEIGHT);assertThrows("Exception should be thrown when element has wrong height.",goog.bind(assertHeightWithinTolerance,null,div1,300));assertHeightWithinTolerance(div1,90,10);assertThrows("Exception should be thrown when element's height exceeds tolerance",goog.bind(assertHeight,null,div1,50,.2))}function testAssertIsLeftOf(){document.body.appendChild(div1);document.body.appendChild(div2);assertThrows("Exception should be thrown when elements intersect.",goog.bind(assertIsLeftOf,null,div1,div2));assertThrows("Exception should be thrown when elements intersect.",goog.bind(assertIsStrictlyLeftOf,null,div1,div2));goog.style.setPosition(div1,100,0);goog.style.setPosition(div2,0,0);assertThrows("Exception should be thrown when elements are not left to right.",goog.bind(assertIsLeftOf,null,div1,div2));assertThrows("Exception should be thrown when elements are not left to right.",goog.bind(assertIsStrictlyLeftOf,null,div1,div2));goog.style.setPosition(div1,0,0);goog.style.setPosition(div2,100,0);assertIsLeftOf(div1,div2);assertThrows("Exception should be thrown when elements intersect.",goog.bind(assertIsStrictlyLeftOf,null,div1,div2));goog.style.setPosition(div1,0,0);goog.style.setPosition(div2,999,0);assertIsLeftOf(div1,div2);assertIsStrictlyLeftOf(div1,div2)}function testAssertIsAbove(){document.body.appendChild(div1);document.body.appendChild(div2);assertThrows("Exception should be thrown when elements intersect.",goog.bind(assertIsAbove,null,div1,div2));assertThrows("Exception should be thrown when elements intersect.",goog.bind(assertIsStrictlyAbove,null,div1,div2));goog.style.setPosition(div1,0,999);goog.style.setPosition(div2,0,0);assertThrows("Exception should be thrown when elements are not top to bottom.",goog.bind(assertIsAbove,null,div1,div2));assertThrows("Exception should be thrown when elements are not top to bottom.",goog.bind(assertIsStrictlyAbove,null,div1,div2));goog.style.setPosition(div1,0,0);goog.style.setPosition(div2,0,50);assertIsAbove(div1,div2);assertThrows("Exception should be thrown when elements intersect.",goog.bind(assertIsStrictlyAbove,null,div1,div2));goog.style.setPosition(div1,0,0);goog.style.setPosition(div2,0,999);assertIsAbove(div1,div2);assertIsStrictlyAbove(div1,div2)}