goog.provide("goog.proto2.PbLiteSerializerTest");goog.setTestOnly("goog.proto2.PbLiteSerializerTest");goog.require("goog.proto2.PbLiteSerializer");goog.require("goog.testing.jsunit");goog.require("proto2.TestAllTypes");function testSerializationAndDeserialization(){var message=createPopulatedMessage(),serializer=new goog.proto2.PbLiteSerializer,pblite=serializer.serialize(message);assertTrue(goog.isArray(pblite));assertEquals(101,pblite[1]);assertEquals("102",pblite[2]);assertEquals(103,pblite[3]);assertEquals("104",pblite[4]);assertEquals(105,pblite[5]);assertEquals("106",pblite[6]);assertEquals(107,pblite[7]);assertEquals("108",pblite[8]);assertEquals(109,pblite[9]);assertEquals("110",pblite[10]);assertEquals(111.5,pblite[11]);assertEquals(112.5,pblite[12]);assertEquals(1,pblite[13]);assertEquals("test",pblite[14]);assertEquals("abcd",pblite[15]);assertEquals(111,pblite[16][17]);assertEquals(112,pblite[18][1]);assertTrue(pblite[19]===void 0);assertTrue(pblite[20]===void 0);assertEquals(proto2.TestAllTypes.NestedEnum.FOO,pblite[21]);assertEquals(201,pblite[31][0]);assertEquals(202,pblite[31][1]);assertEquals("foo",pblite[44][0]);assertEquals("bar",pblite[44][1]);var serializer=new goog.proto2.PbLiteSerializer,messageCopy=serializer.deserialize(proto2.TestAllTypes.getDescriptor(),pblite);assertNotEquals(messageCopy,message);assertDeserializationMatches(messageCopy)}function testZeroBasedSerializationAndDeserialization(){var message=createPopulatedMessage(),serializer=new goog.proto2.PbLiteSerializer;serializer.setZeroIndexed(!0);var pblite=serializer.serialize(message);assertTrue(goog.isArray(pblite));assertEquals(101,pblite[0]);assertEquals("102",pblite[1]);assertEquals(103,pblite[2]);assertEquals("104",pblite[3]);assertEquals(105,pblite[4]);assertEquals("106",pblite[5]);assertEquals(107,pblite[6]);assertEquals("108",pblite[7]);assertEquals(109,pblite[8]);assertEquals("110",pblite[9]);assertEquals(111.5,pblite[10]);assertEquals(112.5,pblite[11]);assertEquals(1,pblite[12]);assertEquals("test",pblite[13]);assertEquals("abcd",pblite[14]);assertEquals(111,pblite[15][16]);assertEquals(112,pblite[17][0]);assertTrue(pblite[18]===void 0);assertTrue(pblite[19]===void 0);assertEquals(proto2.TestAllTypes.NestedEnum.FOO,pblite[20]);assertEquals(201,pblite[30][0]);assertEquals(202,pblite[30][1]);assertEquals("foo",pblite[43][0]);assertEquals("bar",pblite[43][1]);var messageCopy=serializer.deserialize(proto2.TestAllTypes.getDescriptor(),pblite);assertNotEquals(messageCopy,message);assertEquals(message.getOptionalInt32(),messageCopy.getOptionalInt32());assertDeserializationMatches(messageCopy)}function createPopulatedMessage(){var message=new proto2.TestAllTypes;message.setOptionalInt32(101);message.setOptionalInt64("102");message.setOptionalUint32(103);message.setOptionalUint64("104");message.setOptionalSint32(105);message.setOptionalSint64("106");message.setOptionalFixed32(107);message.setOptionalFixed64("108");message.setOptionalSfixed32(109);message.setOptionalSfixed64("110");message.setOptionalFloat(111.5);message.setOptionalDouble(112.5);message.setOptionalBool(!0);message.setOptionalString("test");message.setOptionalBytes("abcd");var group=new proto2.TestAllTypes.OptionalGroup;group.setA(111);message.setOptionalgroup(group);var nestedMessage=new proto2.TestAllTypes.NestedMessage;nestedMessage.setB(112);message.setOptionalNestedMessage(nestedMessage);message.setOptionalNestedEnum(proto2.TestAllTypes.NestedEnum.FOO);message.addRepeatedInt32(201);message.addRepeatedInt32(202);message.addRepeatedString("foo");message.addRepeatedString("bar");return message}function testDeserializationFromExternalSource(){var pblite=[,101,"102",103,"104",105,"106",107,"108",109,"110",111.5,112.5,1,"test","abcd",[,,,,,,,,,,,,,,,,,111],,[,112],,,proto2.TestAllTypes.NestedEnum.FOO,,,,,,,,,,[201,202],,,,,,,,,,,,,["foo","bar"]];pblite.length=50;var serializer=new goog.proto2.PbLiteSerializer,messageCopy=serializer.deserialize(proto2.TestAllTypes.getDescriptor(),pblite);assertDeserializationMatches(messageCopy);assertFalse(messageCopy.hasRepeatedInt64());assertEquals(0,messageCopy.repeatedInt64Count());messageCopy.repeatedInt64Array();assertFalse(messageCopy.hasRepeatedInt64());assertEquals(0,messageCopy.repeatedInt64Count());assertNotNull(messageCopy.getOptionalNestedMessage());assertEquals("array",goog.typeOf(pblite[16]));messageCopy.setOptionalBool(!0);assertTrue(messageCopy.getOptionalBool());messageCopy.setOptionalBool(!1);assertFalse(messageCopy.getOptionalBool());messageCopy.setOptionalInt32(1234);assertEquals(1234,messageCopy.getOptionalInt32())}function testModifyLazyDeserializedMessage(){var pblite=[,101,"102",103,"104",105,"106",107,"108",109,"110",111.5,112.5,1,"test","abcd",[,,,,,,,,,,,,,,,,,111],,[,112],,,proto2.TestAllTypes.NestedEnum.FOO,,,,,,,,,,[201,202],,,,,,,,,,,,,["foo","bar"]];pblite.length=50;var serializer=new goog.proto2.PbLiteSerializer,message=serializer.deserialize(proto2.TestAllTypes.getDescriptor(),pblite);assertEquals(101,message.getOptionalInt32());message.setOptionalInt32(401);assertEquals(401,message.getOptionalInt32());assertEquals(2,message.repeatedInt32Count());assertEquals(201,message.getRepeatedInt32(0));assertEquals(202,message.getRepeatedInt32(1));message.clearRepeatedInt32();assertEquals(0,message.repeatedInt32Count());message.addRepeatedInt32(101);assertEquals(1,message.repeatedInt32Count());assertEquals(101,message.getRepeatedInt32(0));message.setUnknown(12345,601);message.forEachUnknown(function(tag,value){assertEquals(12345,tag);assertEquals(601,value)});var messageCopy=new proto2.TestAllTypes;messageCopy.copyFrom(message);assertEquals(1,messageCopy.repeatedInt32Count());assertEquals(101,messageCopy.getRepeatedInt32(0))}function testModifyLazyDeserializedMessageByAddingMessage(){var pblite=[,101,"102",103,"104",105,"106",107,"108",109,"110",111.5,112.5,1,"test","abcd",[,,,,,,,,,,,,,,,,,111],,[,112],,,proto2.TestAllTypes.NestedEnum.FOO,,,,,,,,,,[201,202],,,,,,,,,,,,,["foo","bar"]];pblite.length=50;var serializer=new goog.proto2.PbLiteSerializer,message=serializer.deserialize(proto2.TestAllTypes.getDescriptor(),pblite),nested1=new proto2.TestAllTypes.NestedMessage;nested1.setB(1234);var nested2=new proto2.TestAllTypes.NestedMessage;nested2.setB(4567);message.addRepeatedNestedMessage(nested1);assertEquals(1,message.repeatedNestedMessageArray().length);assertTrue(message.repeatedNestedMessageArray()[0].equals(nested1));message.addRepeatedNestedMessage(nested2);assertEquals(2,message.repeatedNestedMessageArray().length);assertTrue(message.repeatedNestedMessageArray()[0].equals(nested1));assertTrue(message.repeatedNestedMessageArray()[1].equals(nested2))}function assertDeserializationMatches(messageCopy){assertNotNull(messageCopy);assertTrue(messageCopy.hasOptionalInt32());assertTrue(messageCopy.hasOptionalInt64());assertTrue(messageCopy.hasOptionalUint32());assertTrue(messageCopy.hasOptionalUint64());assertTrue(messageCopy.hasOptionalSint32());assertTrue(messageCopy.hasOptionalSint64());assertTrue(messageCopy.hasOptionalFixed32());assertTrue(messageCopy.hasOptionalFixed64());assertTrue(messageCopy.hasOptionalSfixed32());assertTrue(messageCopy.hasOptionalSfixed64());assertTrue(messageCopy.hasOptionalFloat());assertTrue(messageCopy.hasOptionalDouble());assertTrue(messageCopy.hasOptionalBool());assertTrue(messageCopy.hasOptionalString());assertTrue(messageCopy.hasOptionalBytes());assertTrue(messageCopy.hasOptionalgroup());assertTrue(messageCopy.hasOptionalNestedMessage());assertTrue(messageCopy.hasOptionalNestedEnum());assertTrue(messageCopy.hasRepeatedInt32());assertFalse(messageCopy.hasRepeatedInt64());assertFalse(messageCopy.hasRepeatedUint32());assertFalse(messageCopy.hasRepeatedUint64());assertFalse(messageCopy.hasRepeatedSint32());assertFalse(messageCopy.hasRepeatedSint64());assertFalse(messageCopy.hasRepeatedFixed32());assertFalse(messageCopy.hasRepeatedFixed64());assertFalse(messageCopy.hasRepeatedSfixed32());assertFalse(messageCopy.hasRepeatedSfixed64());assertFalse(messageCopy.hasRepeatedFloat());assertFalse(messageCopy.hasRepeatedDouble());assertFalse(messageCopy.hasRepeatedBool());assertTrue(messageCopy.hasRepeatedString());assertFalse(messageCopy.hasRepeatedBytes());assertFalse(messageCopy.hasRepeatedgroup());assertFalse(messageCopy.hasRepeatedNestedMessage());assertFalse(messageCopy.hasRepeatedNestedEnum());assertEquals(1,messageCopy.optionalInt32Count());assertEquals(1,messageCopy.optionalInt64Count());assertEquals(1,messageCopy.optionalUint32Count());assertEquals(1,messageCopy.optionalUint64Count());assertEquals(1,messageCopy.optionalSint32Count());assertEquals(1,messageCopy.optionalSint64Count());assertEquals(1,messageCopy.optionalFixed32Count());assertEquals(1,messageCopy.optionalFixed64Count());assertEquals(1,messageCopy.optionalSfixed32Count());assertEquals(1,messageCopy.optionalSfixed64Count());assertEquals(1,messageCopy.optionalFloatCount());assertEquals(1,messageCopy.optionalDoubleCount());assertEquals(1,messageCopy.optionalBoolCount());assertEquals(1,messageCopy.optionalStringCount());assertEquals(1,messageCopy.optionalBytesCount());assertEquals(1,messageCopy.optionalgroupCount());assertEquals(1,messageCopy.optionalNestedMessageCount());assertEquals(1,messageCopy.optionalNestedEnumCount());assertEquals(2,messageCopy.repeatedInt32Count());assertEquals(0,messageCopy.repeatedInt64Count());assertEquals(0,messageCopy.repeatedUint32Count());assertEquals(0,messageCopy.repeatedUint64Count());assertEquals(0,messageCopy.repeatedSint32Count());assertEquals(0,messageCopy.repeatedSint64Count());assertEquals(0,messageCopy.repeatedFixed32Count());assertEquals(0,messageCopy.repeatedFixed64Count());assertEquals(0,messageCopy.repeatedSfixed32Count());assertEquals(0,messageCopy.repeatedSfixed64Count());assertEquals(0,messageCopy.repeatedFloatCount());assertEquals(0,messageCopy.repeatedDoubleCount());assertEquals(0,messageCopy.repeatedBoolCount());assertEquals(2,messageCopy.repeatedStringCount());assertEquals(0,messageCopy.repeatedBytesCount());assertEquals(0,messageCopy.repeatedgroupCount());assertEquals(0,messageCopy.repeatedNestedMessageCount());assertEquals(0,messageCopy.repeatedNestedEnumCount());assertEquals(101,messageCopy.getOptionalInt32());assertEquals("102",messageCopy.getOptionalInt64());assertEquals(103,messageCopy.getOptionalUint32());assertEquals("104",messageCopy.getOptionalUint64());assertEquals(105,messageCopy.getOptionalSint32());assertEquals("106",messageCopy.getOptionalSint64());assertEquals(107,messageCopy.getOptionalFixed32());assertEquals("108",messageCopy.getOptionalFixed64());assertEquals(109,messageCopy.getOptionalSfixed32());assertEquals("110",messageCopy.getOptionalSfixed64());assertEquals(111.5,messageCopy.getOptionalFloat());assertEquals(112.5,messageCopy.getOptionalDouble());assertEquals(!0,messageCopy.getOptionalBool());assertEquals("test",messageCopy.getOptionalString());assertEquals("abcd",messageCopy.getOptionalBytes());assertEquals(111,messageCopy.getOptionalgroup().getA());assertEquals(112,messageCopy.getOptionalNestedMessage().getB());assertEquals(proto2.TestAllTypes.NestedEnum.FOO,messageCopy.getOptionalNestedEnum());assertEquals(201,messageCopy.getRepeatedInt32(0));assertEquals(202,messageCopy.getRepeatedInt32(1))}function testMergeFromLazyTarget(){var serializer=new goog.proto2.PbLiteSerializer,source=new proto2.TestAllTypes,nested=new proto2.TestAllTypes.NestedMessage;nested.setB(66);source.setOptionalNestedMessage(nested);source.setOptionalInt32(32);source.setOptionalString("foo");source.setOptionalNestedEnum(proto2.TestAllTypes.NestedEnum.FOO);source.addRepeatedInt32(2);var target=new proto2.TestAllTypes;nested=new proto2.TestAllTypes.NestedMessage;nested.setC(77);target.setOptionalNestedMessage(nested);target.setOptionalInt64("64");target.setOptionalString("bar");target.setOptionalNestedEnum(proto2.TestAllTypes.NestedEnum.BAR);target.addRepeatedInt32(1);var pbliteTarget=serializer.serialize(target),lazyTarget=serializer.deserialize(proto2.TestAllTypes.getDescriptor(),pbliteTarget),expected=new proto2.TestAllTypes;nested=new proto2.TestAllTypes.NestedMessage;nested.setB(66);nested.setC(77);expected.setOptionalNestedMessage(nested);expected.setOptionalInt32(32);expected.setOptionalInt64("64");expected.setOptionalString("foo");expected.setOptionalNestedEnum(proto2.TestAllTypes.NestedEnum.FOO);expected.addRepeatedInt32(1);expected.addRepeatedInt32(2);lazyTarget.mergeFrom(source);assertTrue("expected and lazyTarget are equal after mergeFrom",lazyTarget.equals(expected))}