goog.provide("goog.net.streams.PbStreamParser");goog.require("goog.asserts");goog.require("goog.net.streams.StreamParser");goog.scope(function(){goog.net.streams.PbStreamParser=function(){this.errorMessage_=null;this.result_=[];this.streamPos_=0;this.state_=Parser.State_.INIT;this.tag_=0;this.length_=0;this.countLengthBytes_=0;this.messageBuffer_=null;this.countMessageBytes_=0};var Parser=goog.net.streams.PbStreamParser;Parser.State_={INIT:0,LENGTH:1,MESSAGE:2,INVALID:3};Parser.PADDING_TAG_=15;goog.net.streams.PbStreamParser.prototype.isInputValid=function(){return this.state_!=Parser.State_.INVALID};goog.net.streams.PbStreamParser.prototype.getErrorMessage=function(){return this.errorMessage_};Parser.prototype.error_=function(inputBytes,pos,errorMsg){this.state_=Parser.State_.INVALID;this.errorMessage_="The stream is broken @"+this.streamPos_+"/"+pos+". "+"Error: "+errorMsg+". "+"With input:\n"+inputBytes;throw Error(this.errorMessage_)};goog.net.streams.PbStreamParser.prototype.parse=function(input){goog.asserts.assert(input instanceof Array||input instanceof ArrayBuffer);var parser=this,inputBytes=input instanceof Array?input:new Uint8Array(input),pos=0;while(pos<inputBytes.length){switch(parser.state_){case Parser.State_.INVALID:{parser.error_(inputBytes,pos,"stream already broken");break}case Parser.State_.INIT:{processTagByte(inputBytes[pos]);break}case Parser.State_.LENGTH:{processLengthByte(inputBytes[pos]);break}case Parser.State_.MESSAGE:{processMessageByte(inputBytes[pos]);break}default:{throw Error("unexpected parser state: "+parser.state_)}}parser.streamPos_++;pos++}var msgs=parser.result_;parser.result_=[];return 0<msgs.length?msgs:null;function processTagByte(b){if(128&b){parser.error_(inputBytes,pos,"invalid tag")}var wireType=7&b;if(2!=wireType){parser.error_(inputBytes,pos,"invalid wire type")}parser.tag_=b>>>3;if(1!=parser.tag_&&2!=parser.tag_&&15!=parser.tag_){parser.error_(inputBytes,pos,"unexpected tag")}parser.state_=Parser.State_.LENGTH;parser.length_=0;parser.countLengthBytes_=0}function processLengthByte(b){parser.countLengthBytes_++;if(5==parser.countLengthBytes_){if(240&b){parser.error_(inputBytes,pos,"message length too long")}}parser.length_|=(127&b)<<7*(parser.countLengthBytes_-1);if(!(128&b)){parser.state_=Parser.State_.MESSAGE;parser.countMessageBytes_=0;if("undefined"!==typeof Uint8Array){parser.messageBuffer_=new Uint8Array(parser.length_)}else{parser.messageBuffer_=Array(parser.length_)}if(0==parser.length_){finishMessage()}}}function processMessageByte(b){parser.messageBuffer_[parser.countMessageBytes_++]=b;if(parser.countMessageBytes_==parser.length_){finishMessage()}}function finishMessage(){if(parser.tag_<Parser.PADDING_TAG_){var message={};message[parser.tag_]=parser.messageBuffer_;parser.result_.push(message)}parser.state_=Parser.State_.INIT}}});