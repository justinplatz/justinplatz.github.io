goog.provide("goog.db");goog.provide("goog.db.BlockedCallback");goog.provide("goog.db.UpgradeNeededCallback");goog.require("goog.asserts");goog.require("goog.async.Deferred");goog.require("goog.db.Error");goog.require("goog.db.IndexedDb");goog.require("goog.db.Transaction");goog.db.indexedDb_=goog.global.indexedDB||goog.global.mozIndexedDB||goog.global.webkitIndexedDB||goog.global.moz_indexedDB;goog.db.BlockedCallback;goog.db.UpgradeNeededCallback;goog.db.openDatabase=function(name,opt_version,opt_onUpgradeNeeded,opt_onBlocked){goog.asserts.assert(goog.isDef(opt_version)==goog.isDef(opt_onUpgradeNeeded),"opt_version must be passed to goog.db.openDatabase if and only if "+"opt_onUpgradeNeeded is also passed");var d=new goog.async.Deferred,openRequest=opt_version?goog.db.indexedDb_.open(name,opt_version):goog.db.indexedDb_.open(name);openRequest.onsuccess=function(ev){var db=new goog.db.IndexedDb(ev.target.result);d.callback(db)};openRequest.onerror=function(ev){var msg="opening database "+name;d.errback(goog.db.Error.fromRequest(ev.target,msg))};openRequest.onupgradeneeded=function(ev){if(!opt_onUpgradeNeeded)return;var db=new goog.db.IndexedDb(ev.target.result);opt_onUpgradeNeeded(new goog.db.IndexedDb.VersionChangeEvent(ev.oldVersion,ev.newVersion),db,new goog.db.Transaction(ev.target.transaction,db))};openRequest.onblocked=function(ev){if(opt_onBlocked){opt_onBlocked(new goog.db.IndexedDb.VersionChangeEvent(ev.oldVersion,ev.newVersion))}};return d};goog.db.deleteDatabase=function(name,opt_onBlocked){var d=new goog.async.Deferred,deleteRequest=goog.db.indexedDb_.deleteDatabase(name);deleteRequest.onsuccess=function(ev){d.callback()};deleteRequest.onerror=function(ev){var msg="deleting database "+name;d.errback(goog.db.Error.fromRequest(ev.target,msg))};deleteRequest.onblocked=function(ev){if(opt_onBlocked){opt_onBlocked(new goog.db.IndexedDb.VersionChangeEvent(ev.oldVersion,ev.newVersion))}};return d};