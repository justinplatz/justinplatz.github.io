goog.provide("goog.debug.ErrorTest");goog.setTestOnly("goog.debug.ErrorTest");goog.require("goog.debug.Error");goog.require("goog.testing.ExpectedFailures");goog.require("goog.testing.jsunit");goog.require("goog.userAgent");goog.require("goog.userAgent.product");var expectedFailures;function setUpPage(){expectedFailures=new goog.testing.ExpectedFailures}function tearDown(){expectedFailures.handleTearDown()}function testError(){function xxxxx(){yyyyy()}function yyyyy(){zzzzz()}function zzzzz(){throw new goog.debug.Error("testing")}var stack=null,message=null;try{xxxxx()}catch(e){message=e.message;if(e.stack){stack=e.stack.split("\n")}}assertEquals("Message property should be set","testing",message);expectedFailures.expectFailureFor(goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("10")||goog.userAgent.product.SAFARI||goog.userAgent.product.CHROME&&!goog.userAgent.isVersionOrHigher(532),"error.stack is not widely supported");try{assertNotNull(stack);if(goog.userAgent.product.FIREFOX&&goog.userAgent.isVersionOrHigher("2.0")){stack.splice(0,0,"Error")}if(!Error.captureStackTrace&&!goog.userAgent.IE){stack.splice(1,1)}assertContains("1st line of stack should have \"Error\"","Error",stack[0]);assertContains("2nd line of stack should have \"zzzzz\"","zzzzz",stack[1]);assertContains("3rd line of stack should have \"yyyyy\"","yyyyy",stack[2]);assertContains("4th line of stack should have \"xxxxx\"","xxxxx",stack[3])}catch(e){expectedFailures.handleException(e)}}function testInheriting(){function MyError(){goog.debug.Error.call(this)}goog.inherits(MyError,goog.debug.Error);MyError.prototype.message="My custom error";var message=null;try{throw new MyError}catch(e){message=e.message}assertEquals("My custom error",message)}