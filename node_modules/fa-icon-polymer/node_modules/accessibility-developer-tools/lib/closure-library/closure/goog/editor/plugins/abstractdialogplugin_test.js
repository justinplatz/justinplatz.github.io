goog.provide("goog.editor.plugins.AbstractDialogPluginTest");goog.setTestOnly("goog.editor.plugins.AbstractDialogPluginTest");goog.require("goog.dom");goog.require("goog.dom.SavedRange");goog.require("goog.dom.TagName");goog.require("goog.editor.Field");goog.require("goog.editor.plugins.AbstractDialogPlugin");goog.require("goog.events.Event");goog.require("goog.events.EventHandler");goog.require("goog.functions");goog.require("goog.testing.MockClock");goog.require("goog.testing.MockControl");goog.require("goog.testing.PropertyReplacer");goog.require("goog.testing.editor.FieldMock");goog.require("goog.testing.editor.TestHelper");goog.require("goog.testing.events");goog.require("goog.testing.jsunit");goog.require("goog.testing.mockmatchers.ArgumentMatcher");goog.require("goog.ui.editor.AbstractDialog");goog.require("goog.userAgent");var plugin,mockCtrl,mockField,mockSavedRange,mockOpenedHandler,mockClosedHandler,COMMAND="myCommand",stubs=new goog.testing.PropertyReplacer,mockClock,fieldObj,fieldElem,mockHandler;function setUp(){mockCtrl=new goog.testing.MockControl;mockOpenedHandler=mockCtrl.createLooseMock(goog.events.EventHandler);mockClosedHandler=mockCtrl.createLooseMock(goog.events.EventHandler);mockField=new goog.testing.editor.FieldMock(void 0,void 0,{});mockCtrl.addMock(mockField);mockField.focus();plugin=createDialogPlugin()}function setUpMockRange(){mockSavedRange=mockCtrl.createLooseMock(goog.dom.SavedRange);mockSavedRange.restore();stubs.setPath("goog.editor.range.saveUsingNormalizedCarets",goog.functions.constant(mockSavedRange))}function tearDown(){stubs.reset();tearDownRealEditableField();if(mockClock){mockClock.dispose()}if(plugin){mockField.$setIgnoreUnexpectedCalls(!0);plugin.dispose()}}function createDialog(domHelper){var dialog=new goog.ui.editor.AbstractDialog(domHelper);dialog.createDialogControl=function(){return new goog.ui.editor.AbstractDialog.Builder(dialog).build()};return dialog}function createDialogPlugin(){var plugin=new goog.editor.plugins.AbstractDialogPlugin(COMMAND);plugin.createDialog=createDialog;plugin.returnControlToEditableField=plugin.restoreOriginalSelection;plugin.registerFieldObject(mockField);plugin.addEventListener(goog.editor.plugins.AbstractDialogPlugin.EventType.OPENED,mockOpenedHandler);plugin.addEventListener(goog.editor.plugins.AbstractDialogPlugin.EventType.CLOSED,mockClosedHandler);return plugin}function expectOpened(opt_times){mockOpenedHandler.handleEvent(new goog.testing.mockmatchers.ArgumentMatcher(function(arg){return arg.type==goog.editor.plugins.AbstractDialogPlugin.EventType.OPENED}));mockField.dispatchSelectionChangeEvent();if(opt_times){mockOpenedHandler.$times(opt_times);mockField.$times(opt_times)}}function expectClosed(opt_times){mockClosedHandler.handleEvent(new goog.testing.mockmatchers.ArgumentMatcher(function(arg){return arg.type==goog.editor.plugins.AbstractDialogPlugin.EventType.CLOSED}));mockField.dispatchSelectionChangeEvent();if(opt_times){mockClosedHandler.$times(opt_times);mockField.$times(opt_times)}}function testExecAndDispose(opt_reuse){setUpMockRange();expectOpened();expectClosed();mockField.debounceEvent(goog.editor.Field.EventType.SELECTIONCHANGE);mockCtrl.$replayAll();if(opt_reuse){plugin.setReuseDialog(!0)}assertFalse("Dialog should not be open yet",!!plugin.getDialog()&&plugin.getDialog().isOpen());plugin.execCommand(COMMAND);assertTrue("Dialog should be open now",!!plugin.getDialog()&&plugin.getDialog().isOpen());var tempDialog=plugin.getDialog();plugin.dispose();assertFalse("Dialog should not still be open after disposal",tempDialog.isOpen());mockCtrl.$verifyAll()}function testExecAndDisposeReuse(){testExecAndDispose(!0)}function testExecAndHide(opt_reuse){setUpMockRange();expectOpened();expectClosed();mockField.debounceEvent(goog.editor.Field.EventType.SELECTIONCHANGE);mockCtrl.$replayAll();if(opt_reuse){plugin.setReuseDialog(!0)}assertFalse("Dialog should not be open yet",!!plugin.getDialog()&&plugin.getDialog().isOpen());plugin.execCommand(COMMAND);assertTrue("Dialog should be open now",!!plugin.getDialog()&&plugin.getDialog().isOpen());var tempDialog=plugin.getDialog();plugin.getDialog().hide();assertFalse("Dialog should not still be open after hiding",tempDialog.isOpen());if(opt_reuse){assertFalse("Dialog should not be disposed after hiding (will be reused)",tempDialog.isDisposed())}else{assertTrue("Dialog should be disposed after hiding",tempDialog.isDisposed())}plugin.dispose();mockCtrl.$verifyAll()}function testExecAndHideReuse(){testExecAndHide(!0)}function testExecTwice(opt_reuse){setUpMockRange();if(opt_reuse){expectOpened(2);expectClosed();plugin.setReuseDialog(!0);mockField.debounceEvent(goog.editor.Field.EventType.SELECTIONCHANGE)}else{expectOpened(2);expectClosed(2);mockSavedRange.restore();mockField.focus();mockField.debounceEvent(goog.editor.Field.EventType.SELECTIONCHANGE);mockField.$times(2)}mockCtrl.$replayAll();assertFalse("Dialog should not be open yet",!!plugin.getDialog()&&plugin.getDialog().isOpen());plugin.execCommand(COMMAND);assertTrue("Dialog should be open now",!!plugin.getDialog()&&plugin.getDialog().isOpen());var tempDialog=plugin.getDialog();plugin.execCommand(COMMAND);if(opt_reuse){assertTrue("Reused dialog should still be open after second exec",tempDialog.isOpen());assertFalse("Reused dialog should not be disposed after second exec",tempDialog.isDisposed())}else{assertFalse("First dialog should not still be open after opening second",tempDialog.isOpen());assertTrue("First dialog should be disposed after opening second",tempDialog.isDisposed())}plugin.dispose();mockCtrl.$verifyAll()}function testExecTwiceReuse(){if(goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("8")){return}testExecTwice(!0)}function testRestoreSelection(){setUpRealEditableField();fieldObj.setHtml(!1,"12345");var elem=fieldObj.getElement(),helper=new goog.testing.editor.TestHelper(elem);helper.select("12345",1,"12345",4);assertEquals("Incorrect text selected before dialog is opened","234",fieldObj.getRange().getText());plugin.execCommand(COMMAND);if(!goog.userAgent.IE&&!goog.userAgent.OPERA){assertNull("There should be no selection while dialog is open",fieldObj.getRange())}plugin.getDialog().hide();assertEquals("Incorrect text selected after dialog is closed","234",fieldObj.getRange().getText())}function setUpRealEditableField(){fieldElem=goog.dom.createElement(goog.dom.TagName.DIV);fieldElem.id="myField";document.body.appendChild(fieldElem);fieldObj=new goog.editor.Field("myField",document);fieldObj.makeEditable();plugin.getTrogClassId=goog.functions.constant("myClassId");fieldObj.registerPlugin(plugin)}function tearDownRealEditableField(){if(fieldObj){fieldObj.makeUneditable();fieldObj.dispose();fieldObj=null}if(fieldElem&&fieldElem.parentNode==document.body){document.body.removeChild(fieldElem)}}function testDebounceSelectionChange(){mockClock=new goog.testing.MockClock(!0);mockClock.tick(1);setUpRealEditableField();var count=0;fieldObj.addEventListener(goog.editor.Field.EventType.SELECTIONCHANGE,function(e){count++});assertEquals(0,count);plugin.execCommand(COMMAND);assertEquals(1,count);plugin.getDialog().hide();assertEquals(2,count);var e=new goog.events.Event("keyup",plugin.fieldObject.getElement());e.keyCode=13;goog.testing.events.fireBrowserEvent(e);mockClock.tick(goog.editor.Field.SELECTION_CHANGE_FREQUENCY_+1);assertEquals(2,count)}