goog.provide("goog.tweak.TweakUiTest");goog.setTestOnly("goog.tweak.TweakUiTest");goog.require("goog.dom");goog.require("goog.dom.TagName");goog.require("goog.string");goog.require("goog.testing.jsunit");goog.require("goog.tweak");goog.require("goog.tweak.TweakUi");goog.require("goog.tweak.testhelpers");var root,registry,EXPECTED_ENTRIES_COUNT=14;function setUp(){root=document.getElementById("root");createRegistryEntries("");registry=goog.tweak.getRegistry()}function tearDown(){goog.tweak.activeBooleanGroup_=null;if(-1==window.location.search.indexOf("runTests")){goog.dom.removeChildren(root)}}function tearDownPage(){if(-1!=window.location.search.indexOf("runTests")){return}createRegistryEntries("");registry=goog.tweak.getRegistry();var entryCounter=0;goog.tweak.registerButton("CreateNewTweak","Creates a new tweak. Meant "+"to simulate a tweak being registered in a lazy-loaded module.",function(){goog.tweak.registerBoolean("Lazy"+ ++entryCounter,"Lazy-loaded tweak.")});goog.tweak.registerButton("CreateNewTweakInNamespace1","Creates a new tweak within a namespace. Meant to simulate a tweak "+"being registered in a lazy-loaded module.",function(){goog.tweak.registerString("foo.bar.Lazy"+ ++entryCounter,"Lazy-loaded tweak.")});goog.tweak.registerButton("CreateNewTweakInNamespace2","Creates a new tweak within a namespace. Meant to simulate a tweak "+"being registered in a lazy-loaded module.",function(){goog.tweak.registerNumber("foo.bar.baz.Lazy"+ ++entryCounter,"Lazy combo",3,{validValues:[1,2,3],label:"Lazy!"})});var label=document.createElement("h3");goog.dom.setTextContent(label,"TweakUi:");root.appendChild(label);createUi(!1);label=document.createElement("h3");goog.dom.setTextContent(label,"Collapsible:");root.appendChild(label);createUi(!0)}function createUi(collapsible){var tweakUiElem=collapsible?goog.tweak.TweakUi.createCollapsible():goog.tweak.TweakUi.create();root.appendChild(tweakUiElem)}function getAllEntryDivs(){return goog.dom.getElementsByTagNameAndClass(goog.dom.TagName.DIV,goog.tweak.TweakUi.ENTRY_CSS_CLASS_)}function getEntryDiv(entry){for(var label=goog.tweak.TweakUi.getNamespacedLabel_(entry),allDivs=getAllEntryDivs(),ret,i=0,div,divText;div=allDivs[i];i++){divText=goog.dom.getTextContent(div);if(goog.string.startsWith(divText,label)&&goog.string.contains(divText,entry.description)){assertFalse("Found multiple divs matching entry "+entry.getId(),!!ret);ret=div}}assertTrue("getEntryDiv failed for "+entry.getId(),!!ret);return ret}function getEntryInput(entry){var div=getEntryDiv(entry);return goog.dom.getElementsByTagName(goog.dom.TagName.INPUT,div)[0]||goog.dom.getElementsByTagName(goog.dom.TagName.SELECT,div)[0]}function testCreate(){createUi(!1);assertEquals("Wrong number of entry divs.",EXPECTED_ENTRIES_COUNT,getAllEntryDivs().length);assertFalse("checkbox should not be checked 1",getEntryInput(boolEntry).checked);assertTrue("checkbox should be checked 2",getEntryInput(boolEntry2).checked);var html=goog.dom.getElementsByTagName(goog.dom.TagName.BUTTON)[0].innerHTML;assertTrue("Button label is wrong",-1<html.indexOf("&lt;btn&gt;"));html=getEntryDiv(numEnumEntry).innerHTML;assertTrue("Enum2 label is wrong",-1<html.indexOf("second&amp;"))}function testToggleBooleanSetting(){boolEntry.setValue(!0);createUi(!1);assertTrue("checkbox should be checked",getEntryInput(boolEntry).checked);boolEntry.setValue(!1);assertFalse("checkbox should not be checked 1",getEntryInput(boolEntry).checked)}function testToggleStringSetting(){strEntry.setValue("val1");createUi(!1);assertEquals("Textbox has wrong value 1","val1",getEntryInput(strEntry).value);strEntry.setValue("val2");assertEquals("Textbox has wrong value 2","val2",getEntryInput(strEntry).value)}function testToggleStringEnumSetting(){strEnumEntry.setValue("B");createUi(!1);assertEquals("wrong value 1","B",getEntryInput(strEnumEntry).value);strEnumEntry.setValue("C");assertEquals("wrong value 2","C",getEntryInput(strEnumEntry).value)}function testToggleNumericSetting(){numEntry.setValue(3);createUi(!1);assertEquals("wrong value 1","3",getEntryInput(numEntry).value);numEntry.setValue(4);assertEquals("wrong value 2","4",getEntryInput(numEntry).value)}function testToggleNumericEnumSetting(){numEnumEntry.setValue(2);createUi(!1);assertEquals("wrong value 1","2",getEntryInput(numEnumEntry).value);numEnumEntry.setValue(3);assertEquals("wrong value 2","3",getEntryInput(numEnumEntry).value)}function testClickBooleanSetting(){createUi(!1);var input=getEntryInput(boolEntry);input.checked=!0;input.onchange();assertTrue("setting should be true",boolEntry.getNewValue());input.checked=!1;input.onchange();assertFalse("setting should be false",boolEntry.getNewValue())}function testToggleDescriptions(){createUi(!1);var toggleLink=goog.dom.getElementsByTagName(goog.dom.TagName.A,root)[0],heightBefore=root.offsetHeight;toggleLink.onclick();assertTrue("Expected div height to grow from toggle descriptions.",root.offsetHeight>heightBefore);toggleLink.onclick();assertEquals("Expected div height to revert from toggle descriptions.",heightBefore,root.offsetHeight)}function assertEntryOrder(entryId1,entryId2){var entry1=registry.getEntry(entryId1),entry2=registry.getEntry(entryId2),div1=getEntryDiv(entry1),div2=getEntryDiv(entry2),order=goog.dom.compareNodeOrder(div1,div2);assertTrue(entry1.getId()+" should be before "+entry2.getId(),0>order)}function testAddEntry(){createUi(!1);goog.tweak.registerBoolean("Lazy1","Lazy-loaded tweak.");goog.tweak.registerBoolean("Lazy2","Lazy-loaded tweak.",!1,{restartRequired:!1});goog.tweak.beginBooleanGroup("LazyGroup","Lazy-loaded tweak.");goog.tweak.registerBoolean("Lazy3","Lazy-loaded tweak.");goog.tweak.endBooleanGroup();assertEquals("Wrong number of entry divs.",EXPECTED_ENTRIES_COUNT+4,getAllEntryDivs().length);assertEntryOrder("Enum2","Lazy1");assertEntryOrder("Lazy1","Lazy2");assertEntryOrder("Lazy2","Num");assertEntryOrder("BoolGroup","Lazy3")}function testAddNamespacedEntries(){createUi(!1);goog.tweak.beginBooleanGroup("NS.LazyGroup","Lazy-loaded tweak.");goog.tweak.registerBoolean("NS.InGroup","Lazy-loaded tweak.");goog.tweak.endBooleanGroup();goog.tweak.registerBoolean("NS.Banana","Lazy-loaded tweak.");goog.tweak.registerBoolean("NS.Apple","Lazy-loaded tweak.");assertEquals("Wrong number of entry divs.",EXPECTED_ENTRIES_COUNT+5,getAllEntryDivs().length);assertEntryOrder("Enum2","NS.Apple");assertEntryOrder("NS.Apple","NS.Banana");assertEntryOrder("NS.Banana","NS.InGroup")}function testCollapsibleIsLazy(){if(document.createEvent){createUi(!0);assertEquals("Expected no entry divs.",0,getAllEntryDivs().length);var showLink=goog.dom.getElementsByTagName(goog.dom.TagName.A,root)[0],event=document.createEvent("MouseEvents");event.initMouseEvent("click",!0,!0,window,0,0,0,0,0,!1,!1,!1,!1,0,null);showLink.dispatchEvent(event);assertEquals("Wrong number of entry divs.",EXPECTED_ENTRIES_COUNT,getAllEntryDivs().length)}}