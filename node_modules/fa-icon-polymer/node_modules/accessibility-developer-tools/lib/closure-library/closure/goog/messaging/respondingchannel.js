goog.provide("goog.messaging.RespondingChannel");goog.require("goog.Disposable");goog.require("goog.log");goog.require("goog.messaging.MultiChannel");goog.messaging.RespondingChannel=function(messageChannel){goog.messaging.RespondingChannel.base(this,"constructor");this.messageChannel_=new goog.messaging.MultiChannel(messageChannel);this.sigCallbackMap_={};this.privateChannel_=this.messageChannel_.createVirtualChannel(goog.messaging.RespondingChannel.PRIVATE_CHANNEL_);this.publicChannel_=this.messageChannel_.createVirtualChannel(goog.messaging.RespondingChannel.PUBLIC_CHANNEL_);this.privateChannel_.registerService(goog.messaging.RespondingChannel.CALLBACK_SERVICE_,goog.bind(this.callbackServiceHandler_,this),!0)};goog.inherits(goog.messaging.RespondingChannel,goog.Disposable);goog.messaging.RespondingChannel.CALLBACK_SERVICE_="mics";goog.messaging.RespondingChannel.PRIVATE_CHANNEL_="private";goog.messaging.RespondingChannel.PUBLIC_CHANNEL_="public";goog.messaging.RespondingChannel.prototype.nextSignatureIndex_=0;goog.messaging.RespondingChannel.prototype.logger_=goog.log.getLogger("goog.messaging.RespondingChannel");goog.messaging.RespondingChannel.prototype.getNextSignature_=function(){return this.nextSignatureIndex_++};goog.messaging.RespondingChannel.prototype.disposeInternal=function(){goog.dispose(this.messageChannel_);delete this.messageChannel_;delete this.publicChannel_;delete this.privateChannel_};goog.messaging.RespondingChannel.prototype.send=function(serviceName,payload,callback){var signature=this.getNextSignature_();this.sigCallbackMap_[signature]=callback;var message={signature:signature,data:payload};this.publicChannel_.send(serviceName,message)};goog.messaging.RespondingChannel.prototype.callbackServiceHandler_=function(message){var signature=message.signature,result=message.data;if(signature in this.sigCallbackMap_){var callback=this.sigCallbackMap_[signature];callback(result);delete this.sigCallbackMap_[signature]}else{goog.log.warning(this.logger_,"Received signature is invalid")}};goog.messaging.RespondingChannel.prototype.registerService=function(serviceName,callback){this.publicChannel_.registerService(serviceName,goog.bind(this.callbackProxy_,this,callback),!0)};goog.messaging.RespondingChannel.prototype.callbackProxy_=function(callback,message){var resultMessage={data:callback(message.data),signature:message.signature};if(this.privateChannel_){this.privateChannel_.send(goog.messaging.RespondingChannel.CALLBACK_SERVICE_,resultMessage)}};