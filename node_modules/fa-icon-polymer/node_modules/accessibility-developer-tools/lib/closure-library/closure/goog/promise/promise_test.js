goog.provide("goog.PromiseTest");goog.require("goog.Promise");goog.require("goog.Thenable");goog.require("goog.Timer");goog.require("goog.functions");goog.require("goog.testing.MockClock");goog.require("goog.testing.PropertyReplacer");goog.require("goog.testing.TestCase");goog.require("goog.testing.jsunit");goog.require("goog.testing.recordFunction");goog.require("goog.userAgent");goog.setTestOnly("goog.PromiseTest");function setUpPage(){goog.testing.TestCase.getActiveTestCase().promiseTimeout=1e4}var SUPPORTS_ACCESSORS=!!window.Object.defineProperty&&(!goog.userAgent.IE||goog.userAgent.isVersionOrHigher("9"))&&(!goog.userAgent.SAFARI||goog.userAgent.isVersionOrHigher("534.48.3")),mockClock=new goog.testing.MockClock,stubs=new goog.testing.PropertyReplacer,unhandledRejections,dummy={toString:goog.functions.constant("[object dummy]")},sentinel={toString:goog.functions.constant("[object sentinel]")};function setUp(){unhandledRejections=goog.testing.recordFunction();goog.Promise.setUnhandledRejectionHandler(unhandledRejections)}function tearDown(){mockClock.tick(1/0);mockClock.uninstall();mockClock.reset();stubs.reset()}function shouldNotCall(result){fail("This should not have been called (result: "+(result+"")+")")}function fulfillSoon(value,delay){return new goog.Promise(function(resolve,reject){window.setTimeout(function(){resolve(value)},delay)})}function fulfillThenableSoon(value,delay){return createThenable(value,delay,!0)}function fulfillBuiltInSoon(value,delay){if(!window.Promise){return fulfillSoon(value,delay)}return new window.Promise(function(resolve,reject){window.setTimeout(function(){resolve(value)},delay)})}function rejectSoon(reason,delay){return new goog.Promise(function(resolve,reject){window.setTimeout(function(){reject(reason)},delay)})}function rejectThenableSoon(value,delay){return createThenable(value,delay,!1)}function rejectBuiltInSoon(value,delay){if(!window.Promise){return rejectSoon(value,delay)}return new window.Promise(function(resolve,reject){window.setTimeout(function(){reject(value)},delay)})}function createThenableResolver(){var resolver=goog.Promise.withResolver(),thenable={},then=function(onFulfilled,onRejected){var next=createThenableResolver();next.resolve(resolver.promise.then(onFulfilled,onRejected));return next.thenable};if(SUPPORTS_ACCESSORS){thenable.thenAccesses=0;window.Object.defineProperty(thenable,"then",{get:function(){thenable.thenAccesses++;return then}})}else{thenable.then=then}return{resolve:resolver.resolve,reject:resolver.reject,thenable:thenable}}function createThenable(value,delay,fulfill){var resolver=createThenableResolver();window.setTimeout(function(){if(fulfill){resolver.resolve(value)}else{resolver.reject(value)}},delay);return resolver.thenable}function createThrowingThenable(value){if(!SUPPORTS_ACCESSORS){return rejectThenableSoon(value,0)}var thenable={};window.Object.defineProperty(thenable,"then",{get:function(){throw value}});return thenable}function testThenIsFulfilled(){var timesCalled=0,p=new goog.Promise(function(resolve,reject){resolve(sentinel)});p.then(function(value){timesCalled++;assertEquals(sentinel,value)});assertEquals("then() must return before callbacks are invoked.",0,timesCalled);return p.then(function(){assertEquals("onFulfilled must be called exactly once.",1,timesCalled)})}function testThenVoidIsFulfilled(){var timesCalled=0,p=goog.Promise.resolve(sentinel);p.thenVoid(function(value){timesCalled++;assertEquals(sentinel,value)});assertEquals("thenVoid() must return before callbacks are invoked.",0,timesCalled);return p.then(function(){assertEquals("onFulfilled must be called exactly once.",1,timesCalled)})}function testThenIsRejected(){var timesCalled=0,p=goog.Promise.reject(sentinel);p.then(shouldNotCall,function(value){timesCalled++;assertEquals(sentinel,value)});assertEquals("then() must return before callbacks are invoked.",0,timesCalled);return p.then(shouldNotCall,function(){assertEquals("onRejected must be called exactly once.",1,timesCalled)})}function testThenVoidIsRejected(){var timesCalled=0,p=goog.Promise.reject(sentinel);p.thenVoid(shouldNotCall,function(value){timesCalled++;assertEquals(sentinel,value);assertEquals("onRejected must be called exactly once.",1,timesCalled)});assertEquals("thenVoid() must return before callbacks are invoked.",0,timesCalled);return p.then(shouldNotCall,function(){assertEquals("onRejected must be called exactly once.",1,timesCalled)})}function testThenAsserts(){var p=goog.Promise.resolve(),m=assertThrows(function(){p.then({})});assertContains("opt_onFulfilled should be a function.",m.message);m=assertThrows(function(){p.then(function(){},{})});assertContains("opt_onRejected should be a function.",m.message)}function testThenVoidAsserts(){var p=goog.Promise.resolve(),m=assertThrows(function(){p.thenVoid({})});assertContains("opt_onFulfilled should be a function.",m.message);m=assertThrows(function(){p.thenVoid(function(){},{})});assertContains("opt_onRejected should be a function.",m.message)}function testOptionalOnFulfilled(){return goog.Promise.resolve(sentinel).then(null,null).then(null,shouldNotCall).then(function(value){assertEquals(sentinel,value)})}function testOptionalOnRejected(){return goog.Promise.reject(sentinel).then(null,null).then(shouldNotCall).then(null,function(reason){assertEquals(sentinel,reason)})}function testMultipleResolves(){var timesCalled=0,resolvePromise,p=new goog.Promise(function(resolve,reject){resolvePromise=resolve;resolve("foo");resolve("bar")});p.then(function(value){timesCalled++;assertEquals("onFulfilled must be called exactly once.",1,timesCalled)});return goog.Timer.promise(10).then(function(){resolvePromise("baz");assertEquals(1,timesCalled)})}function testMultipleRejects(){var timesCalled=0,rejectPromise,p=new goog.Promise(function(resolve,reject){rejectPromise=reject;reject("foo");reject("bar")});p.then(shouldNotCall,function(value){timesCalled++;assertEquals("onRejected must be called exactly once.",1,timesCalled)});return goog.Timer.promise(10).then(function(){rejectPromise("baz");assertEquals(1,timesCalled)})}function testAsynchronousThenCalls(){var timesCalled=[0,0,0,0],p=new goog.Promise(function(resolve,reject){window.setTimeout(function(){resolve()},30)});p.then(function(){timesCalled[0]++;assertArrayEquals([1,0,0,0],timesCalled)});window.setTimeout(function(){p.then(function(){timesCalled[1]++;assertArrayEquals([1,1,0,0],timesCalled)})},10);window.setTimeout(function(){p.then(function(){timesCalled[2]++;assertArrayEquals([1,1,1,0],timesCalled)})},20);return goog.Timer.promise(40).then(function(){return p.then(function(){timesCalled[3]++;assertArrayEquals([1,1,1,1],timesCalled)})})}function testResolveWithPromise(){var resolveBlocker,hasFulfilled=!1,blocker=new goog.Promise(function(resolve,reject){resolveBlocker=resolve}),p=goog.Promise.resolve(blocker);p.then(function(value){hasFulfilled=!0;assertEquals(sentinel,value)},shouldNotCall);assertFalse(hasFulfilled);resolveBlocker(sentinel);return p.then(function(){assertTrue(hasFulfilled)})}function testResolveWithRejectedPromise(){var rejectBlocker,hasRejected=!1,blocker=new goog.Promise(function(resolve,reject){rejectBlocker=reject}),p=goog.Promise.resolve(blocker),child=p.then(shouldNotCall,function(reason){hasRejected=!0;assertEquals(sentinel,reason)});assertFalse(hasRejected);rejectBlocker(sentinel);return child.thenCatch(function(){assertTrue(hasRejected)})}function testRejectWithPromise(){var resolveBlocker,hasFulfilled=!1,blocker=new goog.Promise(function(resolve,reject){resolveBlocker=resolve}),p=goog.Promise.reject(blocker),child=p.then(function(value){hasFulfilled=!0;assertEquals(sentinel,value)},shouldNotCall);assertFalse(hasFulfilled);resolveBlocker(sentinel);return child.thenCatch(function(){assertTrue(hasRejected)})}function testRejectWithRejectedPromise(){var rejectBlocker,hasRejected=!1,blocker=new goog.Promise(function(resolve,reject){rejectBlocker=reject}),p=goog.Promise.reject(blocker),child=p.then(shouldNotCall,function(reason){hasRejected=!0;assertEquals(sentinel,reason)});assertFalse(hasRejected);rejectBlocker(sentinel);return child.thenCatch(function(){assertTrue(hasRejected)})}function testResolveAndReject(){var onFulfilledCalled=!1,onRejectedCalled=!1,p=new goog.Promise(function(resolve,reject){resolve();reject()});p.then(function(){onFulfilledCalled=!0},function(){onRejectedCalled=!0});return p.then(function(){assertTrue(onFulfilledCalled);assertFalse(onRejectedCalled)})}function testResolveWithSelfRejects(){var r,p=new goog.Promise(function(resolve){r=resolve});r(p);return p.then(shouldNotCall,function(e){assertEquals(e.message,"Promise cannot resolve to itself")})}function testResolveWithObjectStringResolves(){return goog.Promise.resolve("[object Object]").then(function(v){assertEquals(v,"[object Object]")})}function testRejectAndResolve(){return new goog.Promise(function(resolve,reject){reject();resolve()}).then(shouldNotCall,function(){return!0})}function testThenReturnsBeforeCallbackWithFulfill(){var thenHasReturned=!1,p=goog.Promise.resolve(),child=p.then(function(){assertTrue("Callback must be called only after then() has returned.",thenHasReturned)});thenHasReturned=!0;return child}function testThenReturnsBeforeCallbackWithReject(){var thenHasReturned=!1,p=goog.Promise.reject(),child=p.then(shouldNotCall,function(){assertTrue("Callback must be called only after then() has returned.",thenHasReturned)});thenHasReturned=!0;return child}function testResolutionOrder(){var callbacks=[];return goog.Promise.resolve().then(function(){callbacks.push(1)},shouldNotCall).then(function(){callbacks.push(2)},shouldNotCall).then(function(){callbacks.push(3)},shouldNotCall).then(function(){assertArrayEquals([1,2,3],callbacks)})}function testResolutionOrderWithThrow(){var callbacks=[],p=goog.Promise.resolve();p.then(function(){callbacks.push(1)},shouldNotCall);var child=p.then(function(){callbacks.push(2);throw Error()},shouldNotCall);child.then(shouldNotCall,function(){callbacks.push(4)});p.then(function(){callbacks.push(3)},shouldNotCall);return child.then(shouldNotCall,function(){callbacks.push(5);assertArrayEquals([1,2,3,4,5],callbacks)})}function testResolutionOrderWithNestedThen(){var resolver=goog.Promise.withResolver(),callbacks=[],p=goog.Promise.resolve();p.then(function(){callbacks.push(1);p.then(function(){callbacks.push(3);resolver.resolve()})});p.then(function(){callbacks.push(2)});return resolver.promise.then(function(){assertArrayEquals([1,2,3],callbacks)})}function testRejectionOrder(){var callbacks=[],p=goog.Promise.reject();p.then(shouldNotCall,function(){callbacks.push(1)});p.then(shouldNotCall,function(){callbacks.push(2)});p.then(shouldNotCall,function(){callbacks.push(3)});return p.then(shouldNotCall,function(){assertArrayEquals([1,2,3],callbacks)})}function testRejectionOrderWithThrow(){var callbacks=[],p=goog.Promise.reject();p.then(shouldNotCall,function(){callbacks.push(1)});p.then(shouldNotCall,function(){callbacks.push(2);throw Error()});p.then(shouldNotCall,function(){callbacks.push(3)});return p.then(shouldNotCall,function(){assertArrayEquals([1,2,3],callbacks)})}function testRejectionOrderWithNestedThen(){var resolver=goog.Promise.withResolver(),callbacks=[],p=goog.Promise.reject();p.then(shouldNotCall,function(){callbacks.push(1);p.then(shouldNotCall,function(){callbacks.push(3);resolver.resolve()})});p.then(shouldNotCall,function(){callbacks.push(2)});return resolver.promise.then(function(){assertArrayEquals([1,2,3],callbacks)})}function testBranching(){var p=goog.Promise.resolve(2),branch1=p.then(function(value){assertEquals("then functions should see the same value",2,value);return value/2}).then(function(value){assertEquals("branch should receive the returned value",1,value)}),branch2=p.then(function(value){assertEquals("then functions should see the same value",2,value);throw value+1}).then(shouldNotCall,function(reason){assertEquals("branch should receive the thrown value",3,reason)}),branch3=p.then(function(value){assertEquals("then functions should see the same value",2,value);return 2*value}).then(function(value){assertEquals("branch should receive the returned value",4,value)});return goog.Promise.all([branch1,branch2,branch3])}function testThenReturnsPromise(){var parent=goog.Promise.resolve(),child=parent.then();assertTrue(child instanceof goog.Promise);assertNotEquals("The returned Promise must be different from the input.",parent,child)}function testThenVoidReturnsUndefined(){var parent=goog.Promise.resolve(),child=parent.thenVoid();assertUndefined(child)}function testBlockingPromise(){var p=goog.Promise.resolve(),wasFulfilled=!1,wasRejected=!1,p2=p.then(function(){return new goog.Promise(function(resolve,reject){})});p2.then(function(){wasFulfilled=!0},function(){wasRejected=!0});return goog.Timer.promise(10).then(function(){assertFalse("p2 should be blocked on the returned Promise",wasFulfilled);assertFalse("p2 should be blocked on the returned Promise",wasRejected)})}function testBlockingPromiseFulfilled(){var blockingPromise=new goog.Promise(function(resolve,reject){window.setTimeout(function(){resolve(sentinel)},0)}),p=goog.Promise.resolve(dummy),p2=p.then(function(value){return blockingPromise});return p2.then(function(value){assertEquals(sentinel,value)})}function testBlockingPromiseRejected(){var blockingPromise=new goog.Promise(function(resolve,reject){window.setTimeout(function(){reject(sentinel)},0)}),p=goog.Promise.resolve(blockingPromise);return p.then(shouldNotCall,function(reason){assertEquals(sentinel,reason)})}function testBlockingThenableFulfilled(){var thenable={then:function(onFulfill,onReject){onFulfill(sentinel)}};return goog.Promise.resolve(thenable).then(function(reason){assertEquals(sentinel,reason)})}function testBlockingThenableRejected(){var thenable={then:function(onFulfill,onReject){onReject(sentinel)}};return goog.Promise.resolve(thenable).then(shouldNotCall,function(reason){assertEquals(sentinel,reason)})}function testBlockingThenableThrows(){var thenable={then:function(onFulfill,onReject){throw sentinel}};return goog.Promise.resolve(thenable).then(shouldNotCall,function(reason){assertEquals(sentinel,reason)})}function testBlockingThenableMisbehaves(){var thenable={then:function(onFulfill,onReject){onFulfill(sentinel);onFulfill(dummy);onReject(dummy);throw dummy}};return goog.Promise.resolve(thenable).then(function(value){assertEquals("Only the first resolution of the Thenable should have a result.",sentinel,value)})}function testNestingThenables(){var thenableA={then:function(onFulfill,onReject){onFulfill(sentinel)}},thenableB={then:function(onFulfill,onReject){onFulfill(thenableA)}},thenableC={then:function(onFulfill,onReject){onFulfill(thenableB)}};return goog.Promise.resolve(thenableC).then(function(value){assertEquals("Should resolve to the fulfillment value of thenableA",sentinel,value)})}function testNestingThenablesRejected(){var thenableA={then:function(onFulfill,onReject){onReject(sentinel)}},thenableB={then:function(onFulfill,onReject){onReject(thenableA)}},thenableC={then:function(onFulfill,onReject){onReject(thenableB)}};return goog.Promise.reject(thenableC).then(shouldNotCall,function(reason){assertEquals("Should resolve to rejection reason of thenableA",sentinel,reason)})}function testThenCatch(){var catchCalled=!1;return goog.Promise.reject().thenCatch(function(reason){catchCalled=!0;return sentinel}).then(function(value){assertTrue(catchCalled);assertEquals(sentinel,value)})}function testRaceWithEmptyList(){return goog.Promise.race([]).then(function(value){assertUndefined(value)})}function testRaceWithFulfill(){var a=fulfillSoon("a",40),b=fulfillSoon("b",30),c=fulfillSoon("c",10),d=fulfillSoon("d",20);return goog.Promise.race([a,b,c,d]).then(function(value){assertEquals("c",value);return a}).then(function(value){assertEquals("The slowest promise should resolve eventually.","a",value)})}function testRaceWithThenables(){var a=fulfillThenableSoon("a",40),b=fulfillThenableSoon("b",30),c=fulfillThenableSoon("c",10),d=fulfillThenableSoon("d",20);return goog.Promise.race([a,b,c,d]).then(function(value){assertEquals("c",value);if(SUPPORTS_ACCESSORS){assertEquals(1,c.thenAccesses)}return a}).then(function(value){assertEquals("The slowest thenable should resolve eventually.","a",value)})}function testRaceWithBuiltIns(){var a=fulfillBuiltInSoon("a",40),b=fulfillBuiltInSoon("b",30),c=fulfillBuiltInSoon("c",10),d=fulfillBuiltInSoon("d",20);return goog.Promise.race([a,b,c,d]).then(function(value){assertEquals("c",value);return a}).then(function(value){assertEquals("The slowest promise should resolve eventually.","a",value)})}function testRaceWithNonThenable(){var a=fulfillSoon("a",40),b="b",c=fulfillSoon("c",10),d=fulfillSoon("d",20);return goog.Promise.race([a,b,c,d]).then(function(value){assertEquals("b",value);return a}).then(function(value){assertEquals("The slowest promise should resolve eventually.","a",value)})}function testRaceWithFalseyNonThenable(){var a=fulfillSoon("a",40),b=0,c=fulfillSoon("c",10),d=fulfillSoon("d",20);return goog.Promise.race([a,b,c,d]).then(function(value){assertEquals(0,value);return a}).then(function(value){assertEquals("The slowest promise should resolve eventually.","a",value)})}function testRaceWithFulfilledBeforeNonThenable(){var a=fulfillSoon("a",40),b=goog.Promise.resolve("b"),c="c",d=fulfillSoon("d",20);return goog.Promise.race([a,b,c,d]).then(function(value){assertEquals("b",value);return a}).then(function(value){assertEquals("The slowest promise should resolve eventually.","a",value)})}function testRaceWithReject(){var a=rejectSoon("rejected-a",40),b=rejectSoon("rejected-b",30),c=rejectSoon("rejected-c",10),d=rejectSoon("rejected-d",20);return goog.Promise.race([a,b,c,d]).then(shouldNotCall,function(value){assertEquals("rejected-c",value);return a}).then(shouldNotCall,function(reason){assertEquals("The slowest promise should resolve eventually.","rejected-a",reason)})}function testRaceWithRejectThenable(){var a=rejectThenableSoon("rejected-a",40),b=rejectThenableSoon("rejected-b",30),c=rejectThenableSoon("rejected-c",10),d=rejectThenableSoon("rejected-d",20);return goog.Promise.race([a,b,c,d]).then(shouldNotCall,function(value){assertEquals("rejected-c",value);return a}).then(shouldNotCall,function(reason){assertEquals("The slowest promise should resolve eventually.","rejected-a",reason)})}function testRaceWithRejectBuiltIn(){var a=rejectBuiltInSoon("rejected-a",40),b=rejectBuiltInSoon("rejected-b",30),c=rejectBuiltInSoon("rejected-c",10),d=rejectBuiltInSoon("rejected-d",20);return goog.Promise.race([a,b,c,d]).then(shouldNotCall,function(value){assertEquals("rejected-c",value);return a}).then(shouldNotCall,function(reason){assertEquals("The slowest promise should resolve eventually.","rejected-a",reason)})}function testRaceWithRejectAndThrowingThenable(){var a=rejectSoon("rejected-a",40),b=rejectThenableSoon("rejected-b",30),c=rejectBuiltInSoon("rejected-c",10),d=createThrowingThenable("rejected-d");return goog.Promise.race([a,b,c,d]).then(shouldNotCall,function(value){assertEquals("rejected-d",value);return a}).then(shouldNotCall,function(reason){assertEquals("The slowest promise should resolve eventually.","rejected-a",reason)})}function testAllWithEmptyList(){return goog.Promise.all([]).then(function(value){assertArrayEquals([],value)})}function testAllWithFulfill(){var a=fulfillSoon("a",40),b=fulfillSoon("b",30),c=fulfillSoon("c",10),d=fulfillSoon("d",20),z=fulfillSoon(0,30);return goog.Promise.all([a,b,c,d,z]).then(function(value){assertArrayEquals(["a","b","c","d",0],value)})}function testAllWithThenable(){var a=fulfillSoon("a",40),b=fulfillThenableSoon("b",30),c=fulfillSoon("c",10),d=fulfillSoon("d",20);return goog.Promise.all([a,b,c,d]).then(function(value){assertArrayEquals(["a","b","c","d"],value);if(SUPPORTS_ACCESSORS){assertEquals(1,b.thenAccesses)}})}function testAllWithBuiltIn(){var a=fulfillSoon("a",40),b=fulfillBuiltInSoon("b",30),c=fulfillSoon("c",10),d=fulfillSoon("d",20);return goog.Promise.all([a,b,c,d]).then(function(value){assertArrayEquals(["a","b","c","d"],value)})}function testAllWithNonThenable(){var a=fulfillSoon("a",40),b="b",c=fulfillSoon("c",10),d=fulfillSoon("d",20),z=0;return goog.Promise.all([a,b,c,d,z]).then(function(value){assertArrayEquals(["a","b","c","d",0],value)})}function testAllWithReject(){var a=fulfillSoon("a",40),b=rejectSoon("rejected-b",30),c=fulfillSoon("c",10),d=fulfillSoon("d",20);return goog.Promise.all([a,b,c,d]).then(shouldNotCall,function(reason){assertEquals("rejected-b",reason);return a}).then(function(value){assertEquals("Promise \"a\" should be fulfilled even though the all()"+"was rejected.","a",value)})}function testAllSettledWithEmptyList(){return goog.Promise.allSettled([]).then(function(results){assertArrayEquals([],results)})}function testAllSettledWithFulfillAndReject(){var a=fulfillSoon("a",40),b=rejectSoon("rejected-b",30),c="c",d=rejectBuiltInSoon("rejected-d",20),e=fulfillThenableSoon("e",40),f=fulfillBuiltInSoon("f",30),g=rejectThenableSoon("rejected-g",10),h=createThrowingThenable("rejected-h"),z=0;return goog.Promise.allSettled([a,b,c,d,e,f,g,h,z]).then(function(results){assertArrayEquals([{fulfilled:!0,value:"a"},{fulfilled:!1,reason:"rejected-b"},{fulfilled:!0,value:"c"},{fulfilled:!1,reason:"rejected-d"},{fulfilled:!0,value:"e"},{fulfilled:!0,value:"f"},{fulfilled:!1,reason:"rejected-g"},{fulfilled:!1,reason:"rejected-h"},{fulfilled:!0,value:0}],results);if(SUPPORTS_ACCESSORS){assertEquals(1,e.thenAccesses);assertEquals(1,g.thenAccesses)}})}function testFirstFulfilledWithEmptyList(){return goog.Promise.firstFulfilled([]).then(function(value){assertUndefined(value)})}function testFirstFulfilledWithFulfill(){var a=fulfillSoon("a",40),b=rejectSoon("rejected-b",30),c=rejectSoon("rejected-c",10),d=fulfillSoon("d",20);return goog.Promise.firstFulfilled([a,b,c,d]).then(function(value){assertEquals("d",value);return c}).then(shouldNotCall,function(reason){assertEquals("Promise \"c\" should be rejected before firstFulfilled() resolves.","rejected-c",reason);return a}).then(function(value){assertEquals("Promise \"a\" should be fulfilled after firstFulfilled() resolves.","a",value)})}function testFirstFulfilledWithThenables(){var a=fulfillThenableSoon("a",40),b=rejectThenableSoon("rejected-b",30),c=rejectThenableSoon("rejected-c",10),d=fulfillThenableSoon("d",20);return goog.Promise.firstFulfilled([a,b,c,d]).then(function(value){assertEquals("d",value);if(SUPPORTS_ACCESSORS){assertEquals(1,d.thenAccesses)}return c}).then(shouldNotCall,function(reason){assertEquals("Thenable \"c\" should be rejected before firstFulfilled() resolves.","rejected-c",reason);return a}).then(function(value){assertEquals("Thenable \"a\" should be fulfilled after firstFulfilled() resolves.","a",value)})}function testFirstFulfilledWithBuiltIns(){var a=fulfillBuiltInSoon("a",40),b=rejectBuiltInSoon("rejected-b",30),c=rejectBuiltInSoon("rejected-c",10),d=fulfillBuiltInSoon("d",20);return goog.Promise.firstFulfilled([a,b,c,d]).then(function(value){assertEquals("d",value);return c}).then(shouldNotCall,function(reason){assertEquals("Promise \"c\" should be rejected before firstFulfilled() resolves.","rejected-c",reason);return a}).then(function(value){assertEquals("Promise \"a\" should be fulfilled after firstFulfilled() resolves.","a",value)})}function testFirstFulfilledWithNonThenable(){var a=fulfillSoon("a",40),b=rejectSoon("rejected-b",30),c=rejectSoon("rejected-c",10),d="d";return goog.Promise.firstFulfilled([a,b,c,d]).then(function(value){assertEquals("d",value);return a}).then(function(value){assertEquals("The slowest promise should resolve eventually.","a",value)})}function testFirstFulfilledWithFalseyNonThenable(){var a=fulfillSoon("a",40),b=rejectSoon("rejected-b",30),c=rejectSoon("rejected-c",10),d=0;return goog.Promise.firstFulfilled([a,b,c,d]).then(function(value){assertEquals(0,value);return a}).then(function(value){assertEquals("The slowest promise should resolve eventually.","a",value)})}function testFirstFulfilledWithFulfilledBeforeNonThenable(){var a=fulfillSoon("a",40),b=goog.Promise.resolve("b"),c=rejectSoon("rejected-c",10),d="d";return goog.Promise.firstFulfilled([a,b,c,d]).then(function(value){assertEquals("b",value);return a}).then(function(value){assertEquals("The slowest promise should resolve eventually.","a",value)})}function testFirstFulfilledWithReject(){var a=rejectSoon("rejected-a",40),b=rejectThenableSoon("rejected-b",30),c=rejectBuiltInSoon("rejected-c",10),d=createThrowingThenable("rejected-d");return goog.Promise.firstFulfilled([a,b,c,d]).then(shouldNotCall,function(reason){assertArrayEquals(["rejected-a","rejected-b","rejected-c","rejected-d"],reason);if(SUPPORTS_ACCESSORS){assertEquals(1,b.thenAccesses)}})}function testThenAlwaysWithFulfill(){var thenAlwaysCalled=!1;return goog.Promise.resolve(sentinel).thenAlways(function(){assertEquals("thenAlways should have no arguments",0,arguments.length);thenAlwaysCalled=!0}).then(function(value){assertEquals(sentinel,value);assertTrue(thenAlwaysCalled)})}function testThenAlwaysWithReject(){var thenAlwaysCalled=!1;return goog.Promise.reject(sentinel).thenAlways(function(arg){assertEquals("thenAlways should have no arguments",0,arguments.length);thenAlwaysCalled=!0}).then(shouldNotCall,function(err){assertEquals(sentinel,err);return null})}function testThenAlwaysCalledMultipleTimes(){var calls=[],p=goog.Promise.resolve(sentinel);p.then(function(value){assertEquals(sentinel,value);calls.push(1);return value});p.thenAlways(function(){assertEquals(0,arguments.length);calls.push(2);throw Error("thenAlways throw")});p.then(function(value){assertEquals("Promise result should not mutate after throw from thenAlways.",sentinel,value);calls.push(3)});p.thenAlways(function(){assertArrayEquals([1,2,3],calls)});p.thenAlways(function(){assertEquals("Should be one unhandled exception from the \"thenAlways throw\".",1,unhandledRejections.getCallCount());var rejectionCall=unhandledRejections.popLastCall();assertEquals(1,rejectionCall.getArguments().length);var err=rejectionCall.getArguments()[0];assertEquals("thenAlways throw",err.message);assertEquals(goog.global,rejectionCall.getThis())});return p.thenAlways(function(){assertEquals(3,calls.length)})}function testContextWithInit(){var initContext,p=new goog.Promise(function(resolve,reject){initContext=this},sentinel);assertEquals(sentinel,initContext)}function testContextWithInitDefault(){var initContext,p=new goog.Promise(function(resolve,reject){initContext=this});assertEquals("initFunc should default to being called in the global scope",goog.global,initContext)}function testContextWithFulfillment(){return goog.Promise.resolve().then(function(){assertEquals("Call should be made in the global scope if no context is specified.",goog.global,this)}).then(function(){assertEquals(sentinel,this)},shouldNotCall,sentinel).thenAlways(function(){assertEquals(sentinel,this)},sentinel)}function testContextWithRejection(){return goog.Promise.reject().then(shouldNotCall,function(){assertEquals("Call should be in the default scope when no context is set.",goog.global,this);throw new Error("Intentional rejection")}).then(shouldNotCall,function(){assertEquals(sentinel,this)},sentinel).thenAlways(function(){assertEquals(sentinel,this)},sentinel).thenCatch(function(){assertEquals(sentinel,this)},sentinel)}function testCancel(){var p=new goog.Promise(goog.nullFunction),child=p.then(shouldNotCall,function(reason){assertTrue(reason instanceof goog.Promise.CancellationError);assertEquals("cancellation message",reason.message);return null});p.cancel("cancellation message");return child}function testThenVoidCancel(){var thenVoidCalled=!1,p=new goog.Promise(goog.nullFunction);p.thenVoid(shouldNotCall,function(reason){assertTrue(reason instanceof goog.Promise.CancellationError);assertEquals("cancellation message",reason.message);thenVoidCalled=!0});p.cancel("cancellation message");assertFalse(thenVoidCalled);return p.thenCatch(function(){assertTrue(thenVoidCalled);return null})}function testCancelAfterResolve(){var p=goog.Promise.resolve();p.cancel();return p.then(null,shouldNotCall)}function testThenVoidCancelAfterResolve(){var p=goog.Promise.resolve();p.cancel();p.thenVoid(null,shouldNotCall);return p}function testCancelAfterReject(){var p=goog.Promise.reject(sentinel);p.cancel();return p.then(shouldNotCall,function(reason){assertEquals(sentinel,reason)})}function testThenVoidCancelAfterReject(){var thenVoidCalled=!1,p=goog.Promise.reject(sentinel);p.cancel();p.thenVoid(shouldNotCall,function(reason){assertEquals(sentinel,reason);thenVoidCalled=!0});return p.thenCatch(function(){assertTrue(thenVoidCalled)})}function testCancelPropagation(){var cancelError,p=new goog.Promise(goog.nullFunction),p2=p.then(shouldNotCall,function(reason){cancelError=reason;assertTrue(reason instanceof goog.Promise.CancellationError);assertEquals("parent cancel message",reason.message);return sentinel}).then(function(value){assertEquals("Child promises should receive the returned value of the parent.",sentinel,value)},shouldNotCall),p3=p.then(shouldNotCall,function(reason){assertEquals("Every onRejected handler should receive the same cancel error.",cancelError,reason);assertEquals("parent cancel message",reason.message);return null});p.cancel("parent cancel message");return goog.Promise.all([p2,p3])}function testThenVoidCancelPropagation(){var resolver=goog.Promise.withResolver(),toResolveCount=2,partialResolve=function(){if(0==--toResolveCount){resolver.resolve()}},cancelError,p=new goog.Promise(goog.nullFunction),p2=p.then(shouldNotCall,function(reason){cancelError=reason;assertTrue(reason instanceof goog.Promise.CancellationError);assertEquals("parent cancel message",reason.message);return sentinel});p2.thenVoid(function(value){assertEquals("Child promises should receive the returned value of the parent.",sentinel,value);partialResolve()},shouldNotCall);p.thenVoid(shouldNotCall,function(reason){assertEquals("Every onRejected handler should receive the same cancel error.",cancelError,reason);assertEquals("parent cancel message",reason.message);partialResolve()});p.cancel("parent cancel message");return resolver.promise}function testCancelPropagationUpward(){var cancelError,cancelCalls=[],parent=new goog.Promise(goog.nullFunction),child=parent.then(shouldNotCall,function(reason){assertTrue(reason instanceof goog.Promise.CancellationError);assertEquals("grandChild cancel message",reason.message);cancelError=reason;cancelCalls.push("parent")}),grandChild=child.then(shouldNotCall,function(reason){assertEquals("Child should receive the same cancel error.",cancelError,reason);cancelCalls.push("child")}),descendant=grandChild.then(shouldNotCall,function(reason){assertEquals("GrandChild should receive the same cancel error.",cancelError,reason);cancelCalls.push("grandChild");assertArrayEquals("Each promise in the hierarchy has a single child, so canceling the "+"grandChild should cancel each ancestor in order.",["parent","child","grandChild"],cancelCalls);return null});grandChild.cancel("grandChild cancel message");return descendant}function testThenVoidCancelPropagationUpward(){var cancelError,cancelCalls=[],parent=new goog.Promise(goog.nullFunction),child=parent.then(shouldNotCall,function(reason){assertTrue(reason instanceof goog.Promise.CancellationError);assertEquals("grandChild cancel message",reason.message);cancelError=reason;cancelCalls.push("parent")}),grandChild=child.then(shouldNotCall,function(reason){assertEquals("Child should receive the same cancel error.",cancelError,reason);cancelCalls.push("child")});grandChild.thenVoid(shouldNotCall,function(reason){assertEquals("GrandChild should receive the same cancel error.",cancelError,reason);cancelCalls.push("grandChild")});grandChild.cancel("grandChild cancel message");return grandChild.thenCatch(function(reason){assertEquals(cancelError,reason);assertArrayEquals("Each promise in the hierarchy has a single child, so canceling the "+"grandChild should cancel each ancestor in order.",["parent","child","grandChild"],cancelCalls);return null})}function testCancelPropagationUpwardWithMultipleChildren(){var cancelError,cancelCalls=[],parent=fulfillSoon(sentinel,0);parent.then(function(value){assertEquals("Non-canceled callbacks should be called after a sibling is canceled.",sentinel,value)});var child=parent.then(shouldNotCall,function(reason){assertTrue(reason instanceof goog.Promise.CancellationError);assertEquals("grandChild cancel message",reason.message);cancelError=reason;cancelCalls.push("child")}),grandChild=child.then(shouldNotCall,function(reason){assertEquals(reason,cancelError);cancelCalls.push("grandChild")});grandChild.cancel("grandChild cancel message");return grandChild.then(shouldNotCall,function(reason){assertEquals(reason,cancelError);assertArrayEquals("The parent promise has multiple children, so only the child and "+"grandChild should be canceled.",["child","grandChild"],cancelCalls);return null})}function testThenVoidCancelPropagationUpwardWithMultipleChildren(){var cancelError,cancelCalls=[],parent=fulfillSoon(sentinel,0);parent.thenVoid(function(value){assertEquals("Non-canceled callbacks should be called after a sibling is canceled.",sentinel,value)},shouldNotCall);var child=parent.then(shouldNotCall,function(reason){assertTrue(reason instanceof goog.Promise.CancellationError);assertEquals("grandChild cancel message",reason.message);cancelError=reason;cancelCalls.push("child")}),grandChild=child.then(shouldNotCall,function(reason){assertEquals(reason,cancelError);cancelCalls.push("grandChild")});grandChild.cancel("grandChild cancel message");grandChild.thenVoid(shouldNotCall,function(reason){assertEquals(reason,cancelError);cancelCalls.push("void grandChild")});return grandChild.then(shouldNotCall,function(reason){assertEquals(reason,cancelError);assertArrayEquals("The parent promise has multiple children, so only the child and "+"grandChildren should be canceled.",["child","grandChild","void grandChild"],cancelCalls);return null})}function testCancelRecovery(){var cancelError,cancelCalls=[],parent=fulfillSoon(sentinel,100),sibling1=parent.then(function(value){assertEquals("Non-canceled callbacks should be called after a sibling is canceled.",sentinel,value)}),sibling2=parent.then(shouldNotCall,function(reason){assertTrue(reason instanceof goog.Promise.CancellationError);cancelError=reason;cancelCalls.push("sibling2");return sentinel}),grandChild=sibling2.then(function(value){cancelCalls.push("child");assertEquals("Returning a non-cancel value should uncancel the grandChild.",value,sentinel);assertArrayEquals(["sibling2","child"],cancelCalls)},shouldNotCall);grandChild.cancel();return goog.Promise.all([sibling1,grandChild])}function testCancellationError(){var err=new goog.Promise.CancellationError("cancel message");assertTrue(err instanceof Error);assertTrue(err instanceof goog.Promise.CancellationError);assertEquals("cancel",err.name);assertEquals("cancel message",err.message)}function testMockClock(){mockClock.install();var resolveA,resolveB,calls=[],p=new goog.Promise(function(resolve,reject){resolveA=resolve});p.then(function(value){assertEquals(sentinel,value);calls.push("then")});var fulfilledChild=p.then(function(value){assertEquals(sentinel,value);return goog.Promise.resolve(1)}).then(function(value){assertEquals(1,value);calls.push("fulfilledChild")}),rejectedChild=p.then(function(value){assertEquals(sentinel,value);return goog.Promise.reject(2)}).then(shouldNotCall,function(reason){assertEquals(2,reason);calls.push("rejectedChild")}),unresolvedChild=p.then(function(value){assertEquals(sentinel,value);return new goog.Promise(function(r){resolveB=r})}).then(function(value){assertEquals(3,value);calls.push("unresolvedChild")});resolveA(sentinel);assertArrayEquals("Calls must not be resolved until the clock ticks.",[],calls);mockClock.tick();assertArrayEquals("All resolved Promises should execute in the same timestep.",["then","fulfilledChild","rejectedChild"],calls);resolveB(3);assertArrayEquals("New calls must not resolve until the clock ticks.",["then","fulfilledChild","rejectedChild"],calls);mockClock.tick();assertArrayEquals("All callbacks should have executed.",["then","fulfilledChild","rejectedChild","unresolvedChild"],calls)}function testHandledRejection(){mockClock.install();goog.Promise.reject(sentinel).then(shouldNotCall,function(reason){});mockClock.tick();assertEquals(0,unhandledRejections.getCallCount())}function testThenVoidHandledRejection(){mockClock.install();goog.Promise.reject(sentinel).thenVoid(shouldNotCall,function(reason){});mockClock.tick();assertEquals(0,unhandledRejections.getCallCount())}function testUnhandledRejection1(){mockClock.install();goog.Promise.reject(sentinel);mockClock.tick();assertEquals(1,unhandledRejections.getCallCount());var rejectionCall=unhandledRejections.popLastCall();assertArrayEquals([sentinel],rejectionCall.getArguments());assertEquals(goog.global,rejectionCall.getThis())}function testUnhandledRejection2(){mockClock.install();goog.Promise.reject(sentinel).then(shouldNotCall);mockClock.tick();assertEquals(1,unhandledRejections.getCallCount());var rejectionCall=unhandledRejections.popLastCall();assertArrayEquals([sentinel],rejectionCall.getArguments());assertEquals(goog.global,rejectionCall.getThis())}function testThenVoidUnhandledRejection(){mockClock.install();goog.Promise.reject(sentinel).thenVoid(shouldNotCall);mockClock.tick();assertEquals(1,unhandledRejections.getCallCount());var rejectionCall=unhandledRejections.popLastCall();assertArrayEquals([sentinel],rejectionCall.getArguments());assertEquals(goog.global,rejectionCall.getThis())}function testUnhandledRejection(){var resolver=goog.Promise.withResolver();goog.Promise.setUnhandledRejectionHandler(function(err){assertEquals(sentinel,err);resolver.resolve()});goog.Promise.reject(sentinel);return resolver.promise}function testUnhandledThrow(){var resolver=goog.Promise.withResolver();goog.Promise.setUnhandledRejectionHandler(function(err){assertEquals(sentinel,err);resolver.resolve()});goog.Promise.resolve().then(function(){throw sentinel});return resolver.promise}function testThenVoidUnhandledThrow(){var resolver=goog.Promise.withResolver();goog.Promise.setUnhandledRejectionHandler(function(error){assertEquals(sentinel,error);resolver.resolve()});goog.Promise.resolve().thenVoid(function(){throw sentinel});return resolver.promise}function testUnhandledBlockingRejection(){mockClock.install();var blocker=goog.Promise.reject(sentinel);goog.Promise.resolve(blocker);mockClock.tick();assertEquals(1,unhandledRejections.getCallCount());var rejectionCall=unhandledRejections.popLastCall();assertArrayEquals([sentinel],rejectionCall.getArguments());assertEquals(goog.global,rejectionCall.getThis())}function testUnhandledRejectionAfterThenAlways(){mockClock.install();var resolver=goog.Promise.withResolver();resolver.promise.thenAlways(function(){});resolver.reject(sentinel);mockClock.tick();assertEquals(1,unhandledRejections.getCallCount());var rejectionCall=unhandledRejections.popLastCall();assertArrayEquals([sentinel],rejectionCall.getArguments());assertEquals(goog.global,rejectionCall.getThis())}function testHandledBlockingRejection(){mockClock.install();var blocker=goog.Promise.reject(sentinel);goog.Promise.resolve(blocker).then(shouldNotCall,function(reason){});mockClock.tick();assertEquals(0,unhandledRejections.getCallCount())}function testThenVoidHandledBlockingRejection(){var shouldCall=goog.testing.recordFunction();mockClock.install();var blocker=goog.Promise.reject(sentinel);goog.Promise.resolve(blocker).thenVoid(shouldNotCall,shouldCall);mockClock.tick();assertEquals(0,unhandledRejections.getCallCount());assertEquals(1,shouldCall.getCallCount())}function testUnhandledRejectionWithTimeout(){mockClock.install();stubs.replace(goog.Promise,"UNHANDLED_REJECTION_DELAY",200);goog.Promise.reject(sentinel);mockClock.tick(199);assertEquals(0,unhandledRejections.getCallCount());mockClock.tick(1);assertEquals(1,unhandledRejections.getCallCount())}function testHandledRejectionWithTimeout(){mockClock.install();stubs.replace(goog.Promise,"UNHANDLED_REJECTION_DELAY",200);var p=goog.Promise.reject(sentinel);mockClock.tick(199);p.then(shouldNotCall,function(reason){});mockClock.tick(1);assertEquals(0,unhandledRejections.getCallCount())}function testUnhandledRejectionDisabled(){mockClock.install();stubs.replace(goog.Promise,"UNHANDLED_REJECTION_DELAY",-1);goog.Promise.reject(sentinel);mockClock.tick();assertEquals(0,unhandledRejections.getCallCount())}function testThenableInterface(){var promise=new goog.Promise(function(resolve,reject){});assertTrue(goog.Thenable.isImplementedBy(promise));assertFalse(goog.Thenable.isImplementedBy({}));assertFalse(goog.Thenable.isImplementedBy("string"));assertFalse(goog.Thenable.isImplementedBy(1));assertFalse(goog.Thenable.isImplementedBy({then:function(){}}));function T(){}T.prototype.then=function(opt_a,opt_b,opt_c){};goog.Thenable.addImplementation(T);assertTrue(goog.Thenable.isImplementedBy(new T));try{COMPILED=!0;function C(){}C.prototype.then=function(opt_a,opt_b,opt_c){};goog.Thenable.addImplementation(C);assertTrue(goog.Thenable.isImplementedBy(new C))}finally{COMPILED=!1}}function testCreateWithResolver_Resolved(){mockClock.install();var timesCalled=0,resolver=goog.Promise.withResolver();resolver.promise.then(function(value){timesCalled++;assertEquals(sentinel,value)},fail);assertEquals("then() must return before callbacks are invoked.",0,timesCalled);mockClock.tick();assertEquals("promise is not resolved until resolver is invoked.",0,timesCalled);resolver.resolve(sentinel);assertEquals("resolution is delayed until the next tick",0,timesCalled);mockClock.tick();assertEquals("onFulfilled must be called exactly once.",1,timesCalled)}function testCreateWithResolver_Rejected(){mockClock.install();var timesCalled=0,resolver=goog.Promise.withResolver();resolver.promise.then(fail,function(reason){timesCalled++;assertEquals(sentinel,reason)});assertEquals("then() must return before callbacks are invoked.",0,timesCalled);mockClock.tick();assertEquals("promise is not resolved until resolver is invoked.",0,timesCalled);resolver.reject(sentinel);assertEquals("resolution is delayed until the next tick",0,timesCalled);mockClock.tick();assertEquals("onFulfilled must be called exactly once.",1,timesCalled)}function testLinksBetweenParentsAndChildrenAreCutOnResolve(){mockClock.install();var parentResolver=goog.Promise.withResolver(),parent=parentResolver.promise,child=parent.then(function(){});assertNotNull(child.parent_);assertEquals(null,parent.callbackEntries_.next);parentResolver.resolve();mockClock.tick();assertNull(child.parent_);assertEquals(null,parent.callbackEntries_)}function testLinksBetweenParentsAndChildrenAreCutWithUnresolvedChild(){mockClock.install();var parentResolver=goog.Promise.withResolver(),parent=parentResolver.promise,child=parent.then(function(){return new goog.Promise(function(){})});assertNotNull(child.parent_);assertNull(parent.callbackEntries_.next);parentResolver.resolve();mockClock.tick();assertNull(child.parent_);assertEquals(null,parent.callbackEntries_)}function testLinksBetweenParentsAndChildrenAreCutOnCancel(){mockClock.install();var parent=new goog.Promise(function(){}),child=parent.then(function(){}),grandChild=child.then(function(){});assertEquals(null,child.callbackEntries_.next);assertNotNull(child.parent_);assertEquals(null,parent.callbackEntries_.next);parent.cancel();mockClock.tick();assertNull(child.parent_);assertNull(grandChild.parent_);assertEquals(null,parent.callbackEntries_);assertEquals(null,child.callbackEntries_)}