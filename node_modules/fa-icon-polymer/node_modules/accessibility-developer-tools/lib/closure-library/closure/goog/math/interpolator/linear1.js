goog.provide("goog.math.interpolator.Linear1");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.math");goog.require("goog.math.interpolator.Interpolator1");goog.math.interpolator.Linear1=function(){this.x_=[];this.y_=[]};goog.math.interpolator.Linear1.prototype.setData=function(x,y){goog.asserts.assert(x.length==y.length,"input arrays to setData should have the same length");if(1==x.length){this.x_=[x[0],x[0]+1];this.y_=[y[0],y[0]]}else{this.x_=x.slice();this.y_=y.slice()}};goog.math.interpolator.Linear1.prototype.interpolate=function(x){var pos=goog.array.binarySearch(this.x_,x);if(0>pos){pos=-pos-2}pos=goog.math.clamp(pos,0,this.x_.length-2);var progress=(x-this.x_[pos])/(this.x_[pos+1]-this.x_[pos]);return goog.math.lerp(this.y_[pos],this.y_[pos+1],progress)};goog.math.interpolator.Linear1.prototype.getInverse=function(){var interpolator=new goog.math.interpolator.Linear1;interpolator.setData(this.y_,this.x_);return interpolator};