goog.provide("goog.ui.MenuButtonTest");goog.setTestOnly("goog.ui.MenuButtonTest");goog.require("goog.Timer");goog.require("goog.a11y.aria");goog.require("goog.a11y.aria.State");goog.require("goog.dom");goog.require("goog.dom.TagName");goog.require("goog.events");goog.require("goog.events.Event");goog.require("goog.events.EventType");goog.require("goog.events.KeyCodes");goog.require("goog.events.KeyHandler");goog.require("goog.positioning");goog.require("goog.positioning.Corner");goog.require("goog.positioning.MenuAnchoredPosition");goog.require("goog.positioning.Overflow");goog.require("goog.style");goog.require("goog.testing.ExpectedFailures");goog.require("goog.testing.PropertyReplacer");goog.require("goog.testing.events");goog.require("goog.testing.jsunit");goog.require("goog.testing.recordFunction");goog.require("goog.ui.Component");goog.require("goog.ui.Menu");goog.require("goog.ui.MenuButton");goog.require("goog.ui.MenuItem");goog.require("goog.ui.SubMenu");goog.require("goog.userAgent");goog.require("goog.userAgent.product");goog.require("goog.userAgent.product.isVersion");var menuButton,clonedMenuButtonDom,expectedFailures;function setUpPage(){expectedFailures=new goog.testing.ExpectedFailures}var originalPositionAtCoordinate=goog.positioning.positionAtCoordinate;goog.positioning.positionAtCoordinate=function(absolutePos,movableElement,movableElementCorner,opt_margin,opt_viewport,opt_overflow,opt_preferredSize){return originalPositionAtCoordinate.call(this,absolutePos,movableElement,movableElementCorner,opt_margin,opt_viewport,goog.positioning.Overflow.IGNORE,opt_preferredSize)};function MyFakeEvent(keyCode,opt_eventType){this.type=opt_eventType||goog.events.KeyHandler.EventType.KEY;this.keyCode=keyCode;this.propagationStopped=!1;this.preventDefault=goog.nullFunction;this.stopPropagation=function(){this.propagationStopped=!0}}function setUp(){window.scrollTo(0,0);var viewportSize=goog.dom.getViewportSize();if(600>viewportSize.width||600>viewportSize.height){window.moveTo(0,0);window.resizeTo(640,640)}clonedMenuButtonDom=goog.dom.getElement("demoMenuButton").cloneNode(!0);menuButton=new goog.ui.MenuButton}function tearDown(){expectedFailures.handleTearDown();menuButton.dispose();var element=goog.dom.getElement("demoMenuButton");element.parentNode.replaceChild(clonedMenuButtonDom,element)}function checkHasPopUp(){menuButton.enterDocument();assertFalse("Menu button must have aria-haspopup attribute set to false",goog.a11y.aria.getState(menuButton.getElement(),goog.a11y.aria.State.HASPOPUP));var menu=new goog.ui.Menu;menu.createDom();menuButton.setMenu(menu);assertTrue("Menu button must have aria-haspopup attribute set to true",goog.a11y.aria.getState(menuButton.getElement(),goog.a11y.aria.State.HASPOPUP));menuButton.setMenu(null);assertFale("Menu button must have aria-haspopup attribute set to false",goog.a11y.aria.getState(menuButton.getElement(),goog.a11y.aria.State.HASPOPUP))}function testBasicButtonBehavior(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);assertEquals("Menu button must have aria-haspopup attribute set to true","true",goog.a11y.aria.getState(menuButton.getElement(),goog.a11y.aria.State.HASPOPUP));goog.testing.events.fireClickSequence(node);assertTrue("Menu must open after click",menuButton.isOpen());var menuItemClicked=0,lastMenuItemClicked=null;goog.events.listen(menuButton.getMenu(),goog.ui.Component.EventType.ACTION,function(e){menuItemClicked++;lastMenuItemClicked=e.target});var menuItem2=goog.dom.getElement("menuItem2");goog.testing.events.fireClickSequence(menuItem2);assertFalse("Menu must close on clicking when open",menuButton.isOpen());assertEquals("Number of menu items clicked should be 1",1,menuItemClicked);assertEquals("menuItem2 should be the last menuitem clicked",menuItem2,lastMenuItemClicked.getElement())}function testHighlightItemBehavior(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);goog.testing.events.fireClickSequence(node);assertTrue("Menu must open after click",menuButton.isOpen());menuButton.handleKeyEvent(new MyFakeEvent(goog.events.KeyCodes.DOWN));assertNotNull(menuButton.getElement());assertEquals("First menuitem must be the aria-activedescendant","menuItem1",goog.a11y.aria.getState(menuButton.getElement(),goog.a11y.aria.State.ACTIVEDESCENDANT));menuButton.handleKeyEvent(new MyFakeEvent(goog.events.KeyCodes.DOWN));assertEquals("Second menuitem must be the aria-activedescendant","menuItem2",goog.a11y.aria.getState(menuButton.getElement(),goog.a11y.aria.State.ACTIVEDESCENDANT))}function testHighlightFirstOnOpen(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);menuButton.handleKeyEvent(new MyFakeEvent(goog.events.KeyCodes.ENTER));assertEquals("By default no items should be highlighted when opened with enter.",null,menuButton.getMenu().getHighlighted());menuButton.setOpen(!1);menuButton.handleKeyEvent(new MyFakeEvent(goog.events.KeyCodes.DOWN));assertTrue("Menu must open after down key",menuButton.isOpen());assertEquals("First menuitem must be highlighted","menuItem1",menuButton.getMenu().getHighlighted().getElement().id)}function testHighlightFirstOnOpen_withFirstDisabled(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);var menu=menuButton.getMenu();menu.getItemAt(0).setEnabled(!1);menuButton.handleKeyEvent(new MyFakeEvent(goog.events.KeyCodes.ENTER));assertEquals("By default no items should be highlighted when opened with enter.",null,menuButton.getMenu().getHighlighted());menuButton.setOpen(!1);menuButton.handleKeyEvent(new MyFakeEvent(goog.events.KeyCodes.DOWN));assertTrue("Menu must open after down key",menuButton.isOpen());assertEquals("First enabled menuitem must be highlighted","menuItem2",menuButton.getMenu().getHighlighted().getElement().id)}function testHighlightFirstOnOpen_withEnterOrSpaceSet(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);menuButton.setSelectFirstOnEnterOrSpace(!0);menuButton.handleKeyEvent(new MyFakeEvent(goog.events.KeyCodes.ENTER));assertEquals("The first item should be highlighted when opened with enter "+"after setting selectFirstOnEnterOrSpace","menuItem1",menuButton.getMenu().getHighlighted().getElement().id)}function testHighlightFirstOnOpen_withEnterOrSpaceSetAndFirstDisabled(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);menuButton.setSelectFirstOnEnterOrSpace(!0);var menu=menuButton.getMenu();menu.getItemAt(0).setEnabled(!1);menuButton.handleKeyEvent(new MyFakeEvent(goog.events.KeyCodes.ENTER));assertEquals("The first enabled item should be highlighted when opened "+"with enter after setting selectFirstOnEnterOrSpace","menuItem2",menuButton.getMenu().getHighlighted().getElement().id)}function testCloseSubMenuBehavior(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);var menu=menuButton.getMenu(),subMenu=new goog.ui.SubMenu("Submenu");menu.addItem(subMenu);subMenu.getElement().id="subMenu";var subMenuMenu=new goog.ui.Menu;subMenu.setMenu(subMenuMenu);var subMenuItem=new goog.ui.MenuItem("Submenu item 1");subMenuMenu.addItem(subMenuItem);subMenuItem.getElement().id="subMenuItem1";menuButton.setOpen(!0);for(var i=0;4>i;i++){menuButton.handleKeyEvent(new MyFakeEvent(goog.events.KeyCodes.DOWN))}assertEquals("Submenu must be the aria-activedescendant","subMenu",goog.a11y.aria.getState(menuButton.getElement(),goog.a11y.aria.State.ACTIVEDESCENDANT));menuButton.handleKeyEvent(new MyFakeEvent(goog.events.KeyCodes.RIGHT));assertEquals("Submenu item 1 must be the aria-activedescendant","subMenuItem1",goog.a11y.aria.getState(menuButton.getElement(),goog.a11y.aria.State.ACTIVEDESCENDANT));menuButton.handleKeyEvent(new MyFakeEvent(goog.events.KeyCodes.LEFT));assertEquals("Submenu must be the aria-activedescendant","subMenu",goog.a11y.aria.getState(menuButton.getElement(),goog.a11y.aria.State.ACTIVEDESCENDANT))}function testEnterOpensMenu(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);menuButton.handleKeyEvent(new MyFakeEvent(goog.events.KeyCodes.ENTER));assertTrue("Menu must open after enter",menuButton.isOpen())}function testSpaceOrEnterClosesMenu(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);menuButton.setOpen(!0);menuButton.handleKeyEvent(new MyFakeEvent(goog.events.KeyCodes.ENTER));assertFalse("Menu should close after pressing Enter",menuButton.isOpen());menuButton.setOpen(!0);menuButton.handleKeyEvent(new MyFakeEvent(goog.events.KeyCodes.SPACE,goog.events.EventType.KEYUP));assertFalse("Menu should close after pressing Space",menuButton.isOpen())}function testStopEscapePropagationMenuClosed(){var node=goog.dom.getElement("demoMenuButton"),fakeEvent=new MyFakeEvent(goog.events.KeyCodes.ESCAPE,goog.events.EventType.KEYDOWN);menuButton.decorate(node);menuButton.setOpen(!1);menuButton.handleKeyDownEvent_(fakeEvent);assertFalse("Event propagation was erroneously stopped.",fakeEvent.propagationStopped)}function testStopEscapePropagationMenuOpen(){var node=goog.dom.getElement("demoMenuButton"),fakeEvent=new MyFakeEvent(goog.events.KeyCodes.ESCAPE,goog.events.EventType.KEYDOWN);menuButton.decorate(node);menuButton.setOpen(!0);menuButton.handleKeyDownEvent_(fakeEvent);assertTrue("Event propagation was not stopped.",fakeEvent.propagationStopped)}function testButtonAfterEnterDocument(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);menuButton.exitDocument();menuButton.enterDocument();goog.testing.events.fireClickSequence(node);assertTrue("Menu must open after click",menuButton.isOpen());var menuItem2=goog.dom.getElement("menuItem2");goog.testing.events.fireClickSequence(menuItem2);assertFalse("Menu must close on clicking when open",menuButton.isOpen())}function testPositionMenu(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);var menu=menuButton.getMenu();menu.setVisible(!0,!0);menu.setPosition(500,500);menuButton.positionMenu();var menuNode=goog.dom.getElement("demoMenu");assertRoughlyEquals(menuNode.offsetTop,node.offsetTop+node.offsetHeight,20);assertRoughlyEquals(menuNode.offsetLeft,node.offsetLeft,20)}function testPositionMenuNotInDocument(){var menu=new goog.ui.Menu;menu.createDom();menuButton.setMenu(menu);menuButton.positionMenu()}function testOpenedMenuPositionCorrection(){var iframe=goog.dom.getElement("iframe1"),iframeDoc=goog.dom.getFrameContentDocument(iframe),iframeDom=goog.dom.getDomHelper(iframeDoc),iframeWindow=goog.dom.getWindow(iframeDoc),button=new goog.ui.MenuButton;iframeWindow.scrollTo(0,0);var node=iframeDom.getElement("demoMenuButton");button.decorate(node);var mockTimer=new goog.Timer;mockTimer.start=goog.nullFunction;button.timer_=mockTimer;var replacer=new goog.testing.PropertyReplacer,positionMenuCalled,origPositionMenu=goog.bind(button.positionMenu,button);replacer.set(button,"positionMenu",function(){positionMenuCalled=!0;origPositionMenu()});button.setOpen(!0);var menuNode=iframeDom.getElement("demoMenu");assertRoughlyEquals(menuNode.offsetTop,node.offsetTop+node.offsetHeight,20);assertRoughlyEquals(menuNode.offsetLeft,node.offsetLeft,20);positionMenuCalled=!1;mockTimer.dispatchEvent(goog.Timer.TICK);assertFalse("positionMenu() shouldn't be called.",positionMenuCalled);var p1=iframeDom.createDom(goog.dom.TagName.P,null,iframeDom.createTextNode("foo")),p2=iframeDom.createDom(goog.dom.TagName.P,null,iframeDom.createTextNode("foo")),p3=iframeDom.createDom(goog.dom.TagName.P,null,iframeDom.createTextNode("foo"));iframeDom.insertSiblingBefore(p1,node);iframeDom.insertSiblingBefore(p2,node);iframeDom.insertSiblingBefore(p3,node);assertTrue(20<Math.abs(node.offsetTop+node.offsetHeight-menuNode.offsetTop));positionMenuCalled=!1;mockTimer.dispatchEvent(goog.Timer.TICK);assertTrue("positionMenu() should be called.",positionMenuCalled);assertRoughlyEquals(menuNode.offsetTop,node.offsetTop+node.offsetHeight,20);var viewportHeight=iframeDom.getViewportSize().height,footer=iframeDom.getElement("footer");goog.style.setSize(footer,1,2*viewportHeight);iframeWindow.scrollTo(0,viewportHeight);positionMenuCalled=!1;mockTimer.dispatchEvent(goog.Timer.TICK);assertTrue("positionMenu() should be called.",positionMenuCalled);goog.style.setSize(footer,1,1);iframeDom.removeNode(p1);iframeDom.removeNode(p2);iframeDom.removeNode(p3);replacer.reset();button.dispose()}function testAlternatePositioningElement(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);var posElement=goog.dom.getElement("positionElement");menuButton.setPositionElement(posElement);menuButton.setOpen(!0);var menuNode=menuButton.getMenu().getElement();assertRoughlyEquals(menuNode.offsetTop,posElement.offsetTop+posElement.offsetHeight,20);assertRoughlyEquals(menuNode.offsetLeft,posElement.offsetLeft,20)}function testPositioningAboveAnchor(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);menuButton.setAlignMenuToStart(!0);menuButton.setScrollOnOverflow(!0);var position=new goog.positioning.MenuAnchoredPosition(menuButton.getElement(),goog.positioning.Corner.TOP_START,!1,!1);menuButton.setMenuPosition(position);menuButton.setOpen(!0);var buttonBounds=goog.style.getBounds(node),menuNode=menuButton.getMenu().getElement(),menuBounds=goog.style.getBounds(menuNode);assertRoughlyEquals(menuBounds.top+menuBounds.height,buttonBounds.top,3);assertRoughlyEquals(menuBounds.left,buttonBounds.left,3);assertRoughlyEquals(node.offsetHeight,19,3)}function testPositioningBelowAnchor(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);menuButton.setAlignMenuToStart(!0);menuButton.setScrollOnOverflow(!0);var position=new goog.positioning.MenuAnchoredPosition(menuButton.getElement(),goog.positioning.Corner.BOTTOM_START,!1,!1);menuButton.setMenuPosition(position);menuButton.setOpen(!0);var buttonBounds=goog.style.getBounds(node),menuNode=menuButton.getMenu().getElement(),menuBounds=goog.style.getBounds(menuNode);expectedFailures.expectFailureFor(isWinSafariBefore5());try{assertRoughlyEquals(menuBounds.top,buttonBounds.top+buttonBounds.height,3);assertRoughlyEquals(menuBounds.left,buttonBounds.left,3)}catch(e){expectedFailures.handleException(e)}assertRoughlyEquals(node.offsetHeight,19,3)}function isWinSafariBefore5(){return goog.userAgent.WINDOWS&&goog.userAgent.product.SAFARI&&goog.userAgent.product.isVersion(4)&&!goog.userAgent.product.isVersion(5)}function testSpaceFireOnKeyUp(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);e=new goog.events.Event(goog.events.KeyHandler.EventType.KEY,menuButton);e.preventDefault=goog.testing.recordFunction();e.keyCode=goog.events.KeyCodes.SPACE;menuButton.handleKeyEvent(e);assertFalse("Menu must not have been triggered by Space keypress",menuButton.isOpen());assertNotNull("Page scrolling is prevented",e.preventDefault.getLastCall());e=new goog.events.Event(goog.events.EventType.KEYUP,menuButton);e.keyCode=goog.events.KeyCodes.SPACE;menuButton.handleKeyEvent(e);assertTrue("Menu must have been triggered by Space keyup",menuButton.isOpen());menuButton.getMenu().setHighlightedIndex(0);e=new goog.events.Event(goog.events.KeyHandler.EventType.KEY,menuButton);e.keyCode=goog.events.KeyCodes.DOWN;menuButton.handleKeyEvent(e);assertEquals("Highlighted menu item must have hanged by Down keypress",1,menuButton.getMenu().getHighlightedIndex());menuButton.getMenu().setHighlightedIndex(0);e=new goog.events.Event(goog.events.EventType.KEYUP,menuButton);e.keyCode=goog.events.KeyCodes.DOWN;menuButton.handleKeyEvent(e);assertEquals("Highlighted menu item must not have changed by Down keyup",0,menuButton.getMenu().getHighlightedIndex())}function testPreventHide(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);menuButton.setDispatchTransitionEvents(goog.ui.Component.State.OPENED,!0);menuButton.setOpen(!0);assertTrue("Menu button should be open.",menuButton.isOpen());assertTrue("Menu should be visible.",menuButton.getMenu().isVisible());var key=goog.events.listen(menuButton,goog.ui.Component.EventType.CLOSE,function(event){event.preventDefault()});menuButton.setOpen(!1);assertTrue("Menu button should still be open.",menuButton.isOpen());assertTrue("Menu should still be visible.",menuButton.getMenu().isVisible());goog.events.unlistenByKey(key);menuButton.setOpen(!1);assertFalse("Menu button should not be open.",menuButton.isOpen());assertFalse("Menu should not be visible.",menuButton.getMenu().isVisible())}function testResizeOnItemAddOrRemove(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);var menu=menuButton.getMenu();menuButton.setOpen(!0);var originalSize=goog.style.getSize(menu.getElement()),item=menu.removeChildAt(0,!0),afterRemoveSize=goog.style.getSize(menu.getElement());assertTrue("Height of menu must decrease after removing a menu item.",afterRemoveSize.height<originalSize.height);menuButton.setOpen(!1);var item2=menu.removeChildAt(0,!0);menuButton.setOpen(!0);var afterRemoveAgainSize=goog.style.getSize(menu.getElement());assertTrue("Height of menu must decrease after removing a second menu item.",afterRemoveAgainSize.height<afterRemoveSize.height);menuButton.setOpen(!0);menuButton.addItem(item2);menuButton.setOpen(!1);menuButton.setOpen(!0);var afterAddSize=goog.style.getSize(menu.getElement());assertTrue("Height of menu must increase after adding a menu item.",afterRemoveAgainSize.height<afterAddSize.height);assertEquals("Removing and adding back items must not change the height of a menu.",afterRemoveSize.height,afterAddSize.height);menuButton.addItem(item)}function testResizeOnItemAddOrRemoveWithScrollOnOverflow(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);var menu=menuButton.getMenu();menuButton.setScrollOnOverflow(!0);menuButton.setOpen(!0);var originalSize=goog.style.getSize(menu.getElement()),item=menu.removeChildAt(0,!0);menuButton.invalidateMenuSize();menuButton.positionMenu();var afterRemoveSize=goog.style.getSize(menu.getElement());assertTrue("Height of menu must decrease after removing a menu item.",afterRemoveSize.height<originalSize.height);var item2=menu.removeChildAt(0,!0);menuButton.invalidateMenuSize();menuButton.positionMenu();var afterRemoveAgainSize=goog.style.getSize(menu.getElement());assertTrue("Height of menu must decrease after removing a second menu item.",afterRemoveAgainSize.height<afterRemoveSize.height);menuButton.addItem(item2);menuButton.invalidateMenuSize();menuButton.positionMenu();var afterAddSize=goog.style.getSize(menu.getElement());assertTrue("Height of menu must increase after adding a menu item.",afterRemoveAgainSize.height<afterAddSize.height);assertEquals("Removing and adding back items must not change the height of a menu.",afterRemoveSize.height,afterAddSize.height)}function testRenderMenuAsSibling(){menuButton.setRenderMenuAsSibling(!0);menuButton.addItem(new goog.ui.MenuItem("Menu item 1"));menuButton.addItem(new goog.ui.MenuItem("Menu item 2"));menuButton.render(goog.dom.getElement("siblingTest"));menuButton.setOpen(!0);assertEquals(menuButton.getElement().parentNode,menuButton.getMenu().getElement().parentNode)}function testRenderMenuAsSiblingForDecoratedButton(){var menu=new goog.ui.Menu;menu.addChild(new goog.ui.MenuItem("Menu item 1"),!0);menu.addChild(new goog.ui.MenuItem("Menu item 2"),!0);menu.addChild(new goog.ui.MenuItem("Menu item 3"),!0);var menuButton=new goog.ui.MenuButton;menuButton.setMenu(menu);menuButton.setRenderMenuAsSibling(!0);var node=goog.dom.getElement("button1");menuButton.decorate(node);menuButton.setOpen(!0);assertEquals("The menu should be rendered immediately after the menu button",goog.dom.getNextElementSibling(menuButton.getElement()),menu.getElement());assertEquals("The menu should be rendered immediately before the next button",goog.dom.getNextElementSibling(menu.getElement()),goog.dom.getElement("button2"))}function testAlignToStartSetter(){assertTrue(menuButton.isAlignMenuToStart());menuButton.setAlignMenuToStart(!1);assertFalse(menuButton.isAlignMenuToStart());menuButton.setAlignMenuToStart(!0);assertTrue(menuButton.isAlignMenuToStart())}function testScrollOnOverflowSetter(){assertFalse(menuButton.isScrollOnOverflow());menuButton.setScrollOnOverflow(!0);assertTrue(menuButton.isScrollOnOverflow());menuButton.setScrollOnOverflow(!1);assertFalse(menuButton.isScrollOnOverflow())}function testSetOpenUnsetsAriaHidden(){var node=goog.dom.getElement("demoMenuButton");menuButton.decorate(node);var menuElem=menuButton.getMenu().getElementStrict();goog.a11y.aria.setState(menuElem,goog.a11y.aria.State.HIDDEN,!0);menuButton.setOpen(!0);assertEquals("",goog.a11y.aria.getState(menuElem,goog.a11y.aria.State.HIDDEN))}