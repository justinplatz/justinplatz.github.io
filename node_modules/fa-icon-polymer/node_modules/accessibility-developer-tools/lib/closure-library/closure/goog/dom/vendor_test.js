goog.provide("goog.dom.vendorTest");goog.setTestOnly("goog.dom.vendorTest");goog.require("goog.array");goog.require("goog.dom.vendor");goog.require("goog.labs.userAgent.util");goog.require("goog.testing.MockUserAgent");goog.require("goog.testing.PropertyReplacer");goog.require("goog.testing.jsunit");goog.require("goog.userAgent");goog.require("goog.userAgentTestUtil");var documentMode,mockUserAgent,propertyReplacer=new goog.testing.PropertyReplacer;function setUp(){mockUserAgent=new goog.testing.MockUserAgent;mockUserAgent.install()}function tearDown(){goog.dispose(mockUserAgent);documentMode=void 0;propertyReplacer.reset()}goog.userAgent.getDocumentMode_=function(){return documentMode};var UserAgents={GECKO:"GECKO",IE:"IE",OPERA:"OPERA",WEBKIT:"WEBKIT"};function getUserAgentDetected_(agent){switch(agent){case UserAgents.GECKO:return goog.userAgent.GECKO;case UserAgents.IE:return goog.userAgent.IE;case UserAgents.OPERA:return goog.userAgent.OPERA;case UserAgents.WEBKIT:return goog.userAgent.WEBKIT;}return null}function assertUserAgent(expectedAgents,uaString,opt_product,opt_vendor){var mockNavigator={userAgent:uaString,product:opt_product,vendor:opt_vendor};mockUserAgent.setNavigator(mockNavigator);mockUserAgent.setUserAgentString(uaString);goog.labs.userAgent.util.setUserAgent(null);goog.userAgentTestUtil.reinitializeUserAgent();for(var ua in UserAgents){var isExpected=goog.array.contains(expectedAgents,UserAgents[ua]);assertEquals(isExpected,getUserAgentDetected_(UserAgents[ua]))}}function testVendorPrefixWebkit(){assertUserAgent([UserAgents.WEBKIT],"WebKit");assertEquals("-webkit",goog.dom.vendor.getVendorPrefix())}function testVendorPrefixGecko(){assertUserAgent([UserAgents.GECKO],"Gecko","Gecko");assertEquals("-moz",goog.dom.vendor.getVendorPrefix())}function testVendorPrefixOpera(){assertUserAgent([UserAgents.OPERA],"Opera");assertEquals("-o",goog.dom.vendor.getVendorPrefix())}function testVendorPrefixIE(){assertUserAgent([UserAgents.IE],"MSIE");assertEquals("-ms",goog.dom.vendor.getVendorPrefix())}function testVendorJsPrefixWebkit(){assertUserAgent([UserAgents.WEBKIT],"WebKit");assertEquals("Webkit",goog.dom.vendor.getVendorJsPrefix())}function testVendorJsPrefixGecko(){assertUserAgent([UserAgents.GECKO],"Gecko","Gecko");assertEquals("Moz",goog.dom.vendor.getVendorJsPrefix())}function testVendorJsPrefixOpera(){assertUserAgent([UserAgents.OPERA],"Opera");assertEquals("O",goog.dom.vendor.getVendorJsPrefix())}function testVendorJsPrefixIE(){assertUserAgent([UserAgents.IE],"MSIE");assertEquals("ms",goog.dom.vendor.getVendorJsPrefix())}function testVendorJsPrefixNone(){assertUserAgent([],"");assertNull(goog.dom.vendor.getVendorJsPrefix())}function testPrefixedPropertyNameWebkit(){assertUserAgent([UserAgents.WEBKIT],"WebKit");assertEquals("webkitFoobar",goog.dom.vendor.getPrefixedPropertyName("foobar"))}function testPrefixedPropertyNameWebkitAndObject(){var mockDocument={webkitFoobar:0};assertUserAgent([UserAgents.WEBKIT],"WebKit");assertEquals("webkitFoobar",goog.dom.vendor.getPrefixedPropertyName("foobar",mockDocument))}function testPrefixedPropertyName(){assertUserAgent([],"");assertNull(goog.dom.vendor.getPrefixedPropertyName("foobar"))}function testPrefixedPropertyNameAndObject(){var mockDocument={foobar:0};assertUserAgent([],"");assertEquals("foobar",goog.dom.vendor.getPrefixedPropertyName("foobar",mockDocument))}function testPrefixedPropertyNameAndObjectIsEmpty(){var mockDocument={};assertUserAgent([],"");assertNull(goog.dom.vendor.getPrefixedPropertyName("foobar",mockDocument))}function testPrefixedEventType(){assertUserAgent([],"");assertEquals("foobar",goog.dom.vendor.getPrefixedEventType("foobar"))}function testPrefixedEventTypeForBrowser(){assertUserAgent([UserAgents.WEBKIT],"WebKit");assertEquals("webkitfoobar",goog.dom.vendor.getPrefixedEventType("foobar"))}function assertIe(uaString,expectedVersion){assertUserAgent([UserAgents.IE],uaString);assertEquals("User agent "+uaString+" should have had version "+expectedVersion+" but had "+goog.userAgent.VERSION,expectedVersion,goog.userAgent.VERSION)}function assertGecko(uaString,expectedVersion){assertUserAgent([UserAgents.GECKO],uaString,"Gecko");assertEquals("User agent "+uaString+" should have had version "+expectedVersion+" but had "+goog.userAgent.VERSION,expectedVersion,goog.userAgent.VERSION)}