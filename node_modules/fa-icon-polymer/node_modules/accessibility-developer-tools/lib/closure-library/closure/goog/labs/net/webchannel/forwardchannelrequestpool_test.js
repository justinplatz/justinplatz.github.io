goog.provide("goog.labs.net.webChannel.forwardChannelRequestPoolTest");goog.require("goog.labs.net.webChannel.ChannelRequest");goog.require("goog.labs.net.webChannel.ForwardChannelRequestPool");goog.require("goog.testing.PropertyReplacer");goog.require("goog.testing.asserts");goog.require("goog.testing.jsunit");goog.setTestOnly("goog.labs.net.webChannel.forwardChannelRequestPoolTest");var propertyReplacer=new goog.testing.PropertyReplacer,req=new goog.labs.net.webChannel.ChannelRequest(null,null);function shouldRunTests(){return goog.labs.net.webChannel.ChannelRequest.supportsXhrStreaming()}function setUp(){}function tearDown(){propertyReplacer.reset()}function stubSpdyCheck(spdyEnabled){propertyReplacer.set(goog.labs.net.webChannel.ForwardChannelRequestPool,"isSpdyEnabled_",function(){return spdyEnabled})}function testSpdyEnabled(){stubSpdyCheck(!0);var pool=new goog.labs.net.webChannel.ForwardChannelRequestPool;assertFalse(pool.isFull());assertEquals(0,pool.getRequestCount());pool.addRequest(req);assertTrue(pool.hasPendingRequest());assertTrue(pool.hasRequest(req));pool.removeRequest(req);assertFalse(pool.hasPendingRequest());for(var i=0;i<pool.getMaxSize();i++){pool.addRequest(new goog.labs.net.webChannel.ChannelRequest(null,null))}assertTrue(pool.isFull());pool.addRequest(req);assertTrue(pool.isFull())}function testSpdyNotEnabled(){stubSpdyCheck(!1);var pool=new goog.labs.net.webChannel.ForwardChannelRequestPool;assertFalse(pool.isFull());assertEquals(0,pool.getRequestCount());pool.addRequest(req);assertTrue(pool.hasPendingRequest());assertTrue(pool.hasRequest(req));assertTrue(pool.isFull());pool.removeRequest(req);assertFalse(pool.hasPendingRequest());pool.addRequest(req);assertTrue(pool.isFull())}function testApplyClientProtocol(){stubSpdyCheck(!1);var pool=new goog.labs.net.webChannel.ForwardChannelRequestPool;assertEquals(1,pool.getMaxSize());pool.applyClientProtocol("spdy/3");assertTrue(1<pool.getMaxSize());pool.applyClientProtocol("foo-bar");assertTrue(1<pool.getMaxSize());pool=new goog.labs.net.webChannel.ForwardChannelRequestPool;assertEquals(1,pool.getMaxSize());pool.applyClientProtocol("quic/x");assertTrue(1<pool.getMaxSize());stubSpdyCheck(!0);pool=new goog.labs.net.webChannel.ForwardChannelRequestPool;assertTrue(1<pool.getMaxSize());pool.applyClientProtocol("foo/3");assertTrue(1<pool.getMaxSize())}