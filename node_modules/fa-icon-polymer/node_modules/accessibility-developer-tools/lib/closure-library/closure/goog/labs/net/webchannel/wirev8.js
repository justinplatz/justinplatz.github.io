goog.provide("goog.labs.net.webChannel.WireV8");goog.require("goog.asserts");goog.require("goog.json");goog.require("goog.json.NativeJsonProcessor");goog.require("goog.labs.net.webChannel.Wire");goog.require("goog.structs");goog.labs.net.webChannel.WireV8=function(){this.parser_=new goog.json.NativeJsonProcessor};goog.scope(function(){var WireV8=goog.labs.net.webChannel.WireV8,Wire=goog.labs.net.webChannel.Wire;WireV8.prototype.encodeMessage=function(message,buffer,opt_prefix){var prefix=opt_prefix||"";try{goog.structs.forEach(message,function(value,key){var encodedValue=value;if(goog.isObject(value)){encodedValue=goog.json.serialize(value)}buffer.push(prefix+key+"="+encodeURIComponent(encodedValue))})}catch(ex){buffer.push(prefix+"type"+"="+encodeURIComponent("_badmap"));throw ex}};WireV8.prototype.encodeMessageQueue=function(messageQueue,count,badMapHandler){var sb=["count="+count],offset;if(0<count){offset=messageQueue[0].mapId;sb.push("ofs="+offset)}else{offset=0}for(var i=0;i<count;i++){var mapId=messageQueue[i].mapId,map=messageQueue[i].map;mapId-=offset;try{this.encodeMessage(map,sb,"req"+mapId+"_")}catch(ex){if(badMapHandler){badMapHandler(map)}}}return sb.join("&")};WireV8.prototype.decodeMessage=function(messageText){var response=this.parser_.parse(messageText);goog.asserts.assert(goog.isArray(response));return response}});