goog.provide("goog.net.WebSocketTest");goog.setTestOnly("goog.net.WebSocketTest");goog.require("goog.debug.EntryPointMonitor");goog.require("goog.debug.ErrorHandler");goog.require("goog.debug.entryPointRegistry");goog.require("goog.events");goog.require("goog.functions");goog.require("goog.net.WebSocket");goog.require("goog.testing.MockClock");goog.require("goog.testing.PropertyReplacer");goog.require("goog.testing.jsunit");goog.require("goog.testing.recordFunction");var webSocket,mockClock,pr,testUrl,originalOnOpen=goog.net.WebSocket.prototype.onOpen_,originalOnClose=goog.net.WebSocket.prototype.onClose_,originalOnMessage=goog.net.WebSocket.prototype.onMessage_,originalOnError=goog.net.WebSocket.prototype.onError_;function setUp(){pr=new goog.testing.PropertyReplacer;pr.set(goog.global,"WebSocket",MockWebSocket);mockClock=new goog.testing.MockClock(!0);testUrl="ws://127.0.0.1:4200";testProtocol="xmpp"}function tearDown(){pr.reset();goog.net.WebSocket.prototype.onOpen_=originalOnOpen;goog.net.WebSocket.prototype.onClose_=originalOnClose;goog.net.WebSocket.prototype.onMessage_=originalOnMessage;goog.net.WebSocket.prototype.onError_=originalOnError;goog.dispose(mockClock);goog.dispose(webSocket)}function testOpenInUnsupportingBrowserThrowsException(){if(goog.global.WebSocket){goog.global.WebSocket=null}webSocket=new goog.net.WebSocket;assertThrows("Open should fail if WebSocket is not defined.",function(){webSocket.open(testUrl)})}function testOpenTwiceThrowsException(){webSocket=new goog.net.WebSocket;webSocket.open(testUrl);simulateOpenEvent(webSocket.webSocket_);assertThrows("Attempting to open a second time should fail.",function(){webSocket.open(testUrl)})}function testSendWithoutOpeningThrowsException(){webSocket=new goog.net.WebSocket;assertThrows("Send should fail if the web socket was not first opened.",function(){webSocket.send("test message")})}function testOpenWithProtocol(){webSocket=new goog.net.WebSocket;webSocket.open(testUrl,testProtocol);var ws=webSocket.webSocket_;simulateOpenEvent(ws);assertEquals(testUrl,ws.url);assertEquals(testProtocol,ws.protocol)}function testOpenAndClose(){webSocket=new goog.net.WebSocket;assertFalse(webSocket.isOpen());webSocket.open(testUrl);var ws=webSocket.webSocket_;simulateOpenEvent(ws);assertTrue(webSocket.isOpen());assertEquals(testUrl,ws.url);webSocket.close();simulateCloseEvent(ws);assertFalse(webSocket.isOpen())}function testReconnectionDisabled(){webSocket=new goog.net.WebSocket(!1);pr.set(webSocket,"open",goog.testing.recordFunction(webSocket.open));webSocket.open(testUrl);assertEquals(0,webSocket.reconnectAttempt_);assertEquals(1,webSocket.open.getCallCount());assertFalse(webSocket.isOpen());var ws=webSocket.webSocket_;simulateCloseEvent(ws);assertFalse(webSocket.isOpen());assertEquals(0,webSocket.reconnectAttempt_);assertEquals(1,webSocket.open.getCallCount());mockClock.tick(1e5);assertEquals(0,webSocket.reconnectAttempt_);assertEquals(1,webSocket.open.getCallCount())}function testReconnectionWithFailureOnFirstOpen(){webSocket=new goog.net.WebSocket(!0,linearBackOff);pr.set(webSocket,"open",goog.testing.recordFunction(webSocket.open));webSocket.open(testUrl,testProtocol);assertEquals(0,webSocket.reconnectAttempt_);assertEquals(1,webSocket.open.getCallCount());assertFalse(webSocket.isOpen());var ws=webSocket.webSocket_;simulateCloseEvent(ws);assertFalse(webSocket.isOpen());assertEquals(1,webSocket.reconnectAttempt_);assertEquals(1,webSocket.open.getCallCount());mockClock.tick(linearBackOff(0)-1);assertEquals(1,webSocket.open.getCallCount());mockClock.tick(1);assertEquals(2,webSocket.open.getCallCount());simulateCloseEvent(ws);assertFalse(webSocket.isOpen());assertEquals(2,webSocket.reconnectAttempt_);assertEquals(2,webSocket.open.getCallCount());mockClock.tick(linearBackOff(1)-1);assertEquals(2,webSocket.open.getCallCount());mockClock.tick(1);assertEquals(3,webSocket.open.getCallCount());simulateOpenEvent(ws);assertEquals(0,webSocket.reconnectAttempt_);assertEquals(3,webSocket.open.getCallCount());assertEquals(testUrl,ws.url);assertEquals(testProtocol,ws.protocol);mockClock.tick(linearBackOff(10));assertEquals(3,webSocket.open.getCallCount())}function testReconnectionWithFailureAfterOpen(){webSocket=new goog.net.WebSocket(!0,fibonacciBackOff);pr.set(webSocket,"open",goog.testing.recordFunction(webSocket.open));webSocket.open(testUrl);assertEquals(0,webSocket.reconnectAttempt_);assertEquals(1,webSocket.open.getCallCount());assertFalse(webSocket.isOpen());var ws=webSocket.webSocket_;simulateOpenEvent(ws);assertEquals(0,webSocket.reconnectAttempt_);assertEquals(1,webSocket.open.getCallCount());mockClock.tick(1e5);simulateCloseEvent(ws);assertFalse(webSocket.isOpen());assertEquals(1,webSocket.reconnectAttempt_);assertEquals(1,webSocket.open.getCallCount());mockClock.tick(fibonacciBackOff(0)-1);assertEquals(1,webSocket.open.getCallCount());mockClock.tick(1);assertEquals(2,webSocket.open.getCallCount());ws=webSocket.webSocket_;simulateOpenEvent(ws);assertEquals(0,webSocket.reconnectAttempt_);assertEquals(2,webSocket.open.getCallCount());mockClock.tick(fibonacciBackOff(10));assertEquals(2,webSocket.open.getCallCount())}function testExponentialBackOff(){assertEquals(1e3,goog.net.WebSocket.EXPONENTIAL_BACKOFF_(0));assertEquals(2e3,goog.net.WebSocket.EXPONENTIAL_BACKOFF_(1));assertEquals(4e3,goog.net.WebSocket.EXPONENTIAL_BACKOFF_(2));assertEquals(6e4,goog.net.WebSocket.EXPONENTIAL_BACKOFF_(6));assertEquals(6e4,goog.net.WebSocket.EXPONENTIAL_BACKOFF_(7))}function testEntryPointRegistry(){var monitor=new goog.debug.EntryPointMonitor,replacement=function(){};monitor.wrap=goog.testing.recordFunction(goog.functions.constant(replacement));goog.debug.entryPointRegistry.monitorAll(monitor);assertTrue(1<=monitor.wrap.getCallCount());assertEquals(replacement,goog.net.WebSocket.prototype.onOpen_);assertEquals(replacement,goog.net.WebSocket.prototype.onClose_);assertEquals(replacement,goog.net.WebSocket.prototype.onMessage_);assertEquals(replacement,goog.net.WebSocket.prototype.onError_)}function testErrorHandlerCalled(){var errorHandlerCalled=!1,errorHandler=new goog.debug.ErrorHandler(function(){errorHandlerCalled=!0});goog.net.WebSocket.protectEntryPoints(errorHandler);webSocket=new goog.net.WebSocket;goog.events.listenOnce(webSocket,goog.net.WebSocket.EventType.OPENED,function(){throw Error()});webSocket.open(testUrl);var ws=webSocket.webSocket_;assertThrows(function(){simulateOpenEvent(ws)});assertTrue("Error handler callback should be called when registered as "+"protecting the entry points.",errorHandlerCalled)}function simulateOpenEvent(ws){ws.readyState=goog.net.WebSocket.ReadyState_.OPEN;ws.onopen()}function simulateCloseEvent(ws){ws.readyState=goog.net.WebSocket.ReadyState_.CLOSED;ws.onclose({data:"mock close event"})}function linearBackOff(attempt){return 1e3*attempt+1e3}function fibonacciBackOff(attempt){return 1e3*fibonacci(attempt)+5e3}function fibonacci(n){if(0==n){return 0}else if(1==n){return 1}else{return fibonacci(n-2)+fibonacci(n-1)}}MockWebSocket=function(url,protocol){this.url=url;this.protocol=protocol;this.readyState=goog.net.WebSocket.ReadyState_.CONNECTING};MockWebSocket.prototype.close=function(){this.readyState=goog.net.WebSocket.ReadyState_.CLOSING};MockWebSocket.prototype.send=function(){};