goog.provide("goog.events.KeyCodesTest");goog.setTestOnly("goog.events.KeyCodesTest");goog.require("goog.events.BrowserEvent");goog.require("goog.events.KeyCodes");goog.require("goog.object");goog.require("goog.testing.PropertyReplacer");goog.require("goog.testing.jsunit");goog.require("goog.userAgent");var KeyCodes,stubs;function setUpPage(){KeyCodes=goog.events.KeyCodes;stubs=new goog.testing.PropertyReplacer}function tearDown(){stubs.reset()}function testTextModifyingKeys(){var specialTextModifiers=goog.object.createSet(KeyCodes.BACKSPACE,KeyCodes.DELETE,KeyCodes.ENTER,KeyCodes.MAC_ENTER,KeyCodes.TAB,KeyCodes.WIN_IME);if(!goog.userAgent.GECKO){specialTextModifiers[KeyCodes.WIN_KEY_FF_LINUX]=1}for(var keyId in KeyCodes){var key=KeyCodes[keyId];if(goog.isFunction(key)){continue}var fakeEvent=createEventWithKeyCode(key);if(KeyCodes.isCharacterKey(key)||key in specialTextModifiers){assertTrue("Expected key to modify text: "+keyId,KeyCodes.isTextModifyingKeyEvent(fakeEvent))}else{assertFalse("Expected key to not modify text: "+keyId,KeyCodes.isTextModifyingKeyEvent(fakeEvent))}}for(var i=KeyCodes.FIRST_MEDIA_KEY,fakeEvent;i<=KeyCodes.LAST_MEDIA_KEY;i++){fakeEvent=createEventWithKeyCode(i);assertFalse("Expected key to not modify text: "+i,KeyCodes.isTextModifyingKeyEvent(fakeEvent))}}function testKeyCodeZero(){var zeroEvent=createEventWithKeyCode(0);assertEquals(!goog.userAgent.GECKO,KeyCodes.isTextModifyingKeyEvent(zeroEvent));assertEquals(goog.userAgent.WEBKIT||goog.userAgent.EDGE,KeyCodes.isCharacterKey(0))}function testPhantomKey(){var fakeEvent=createEventWithKeyCode(goog.events.KeyCodes.PHANTOM);assertFalse("Expected phantom key to not modify text",KeyCodes.isTextModifyingKeyEvent(fakeEvent));assertFalse(KeyCodes.isCharacterKey(fakeEvent))}function testNonUsKeyboards(){var fakeEvent=createEventWithKeyCode(1092);assertTrue("Expected key to not modify text: 1092",KeyCodes.isTextModifyingKeyEvent(fakeEvent))}function createEventWithKeyCode(i){var fakeEvent=new goog.events.BrowserEvent("keydown");fakeEvent.keyCode=i;return fakeEvent}function testNormalizeGeckoKeyCode(){stubs.set(goog.userAgent,"GECKO",!0);assertEquals(goog.events.KeyCodes.normalizeGeckoKeyCode(KeyCodes.FF_EQUALS),KeyCodes.EQUALS);assertEquals(goog.events.KeyCodes.normalizeKeyCode(KeyCodes.FF_EQUALS),KeyCodes.EQUALS);assertEquals(goog.events.KeyCodes.normalizeGeckoKeyCode(KeyCodes.FF_SEMICOLON),KeyCodes.SEMICOLON);assertEquals(goog.events.KeyCodes.normalizeKeyCode(KeyCodes.FF_SEMICOLON),KeyCodes.SEMICOLON);assertEquals(goog.events.KeyCodes.normalizeGeckoKeyCode(KeyCodes.MAC_FF_META),KeyCodes.META);assertEquals(goog.events.KeyCodes.normalizeKeyCode(KeyCodes.MAC_FF_META),KeyCodes.META);assertEquals(goog.events.KeyCodes.normalizeGeckoKeyCode(KeyCodes.WIN_KEY_FF_LINUX),KeyCodes.WIN_KEY);assertEquals(goog.events.KeyCodes.normalizeKeyCode(KeyCodes.WIN_KEY_FF_LINUX),KeyCodes.WIN_KEY);assertEquals(goog.events.KeyCodes.normalizeGeckoKeyCode(KeyCodes.COMMA),KeyCodes.COMMA);assertEquals(goog.events.KeyCodes.normalizeKeyCode(KeyCodes.COMMA),KeyCodes.COMMA)}function testNormalizeMacWebKitKeyCode(){stubs.set(goog.userAgent,"GECKO",!1);stubs.set(goog.userAgent,"MAC",!0);stubs.set(goog.userAgent,"WEBKIT",!0);assertEquals(goog.events.KeyCodes.normalizeMacWebKitKeyCode(KeyCodes.MAC_WK_CMD_LEFT),KeyCodes.META);assertEquals(goog.events.KeyCodes.normalizeKeyCode(KeyCodes.MAC_WK_CMD_LEFT),KeyCodes.META);assertEquals(goog.events.KeyCodes.normalizeMacWebKitKeyCode(KeyCodes.MAC_WK_CMD_RIGHT),KeyCodes.META);assertEquals(goog.events.KeyCodes.normalizeKeyCode(KeyCodes.MAC_WK_CMD_RIGHT),KeyCodes.META);assertEquals(goog.events.KeyCodes.normalizeMacWebKitKeyCode(KeyCodes.COMMA),KeyCodes.COMMA);assertEquals(goog.events.KeyCodes.normalizeKeyCode(KeyCodes.COMMA),KeyCodes.COMMA)}