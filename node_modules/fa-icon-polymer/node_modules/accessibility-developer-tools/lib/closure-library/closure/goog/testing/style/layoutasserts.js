goog.setTestOnly("goog.testing.style.layoutasserts");goog.provide("goog.testing.style.layoutasserts");goog.require("goog.style");goog.require("goog.testing.asserts");goog.require("goog.testing.style");var assertIsVisible=function(a,opt_b){_validateArguments(1,arguments);var element=nonCommentArg(1,1,arguments);_assert(commentArg(1,arguments),goog.testing.style.isVisible(element)&&goog.testing.style.hasVisibleDimensions(element),"Specified element should be visible.")},assertNotVisible=function(a,opt_b){_validateArguments(1,arguments);var element=nonCommentArg(1,1,arguments);if(!element){return}_assert(commentArg(1,arguments),!goog.testing.style.isVisible(element)||!goog.testing.style.hasVisibleDimensions(element),"Specified element should not be visible.")},assertIntersect=function(a,b,opt_c){_validateArguments(2,arguments);var element=nonCommentArg(1,2,arguments),otherElement=nonCommentArg(2,2,arguments);_assert(commentArg(1,arguments),goog.testing.style.intersects(element,otherElement),"Elements should intersect.")},assertNoIntersect=function(a,b,opt_c){_validateArguments(2,arguments);var element=nonCommentArg(1,2,arguments),otherElement=nonCommentArg(2,2,arguments);_assert(commentArg(1,arguments),!goog.testing.style.intersects(element,otherElement),"Elements should not intersect.")},assertWidth=function(a,b,opt_c){_validateArguments(2,arguments);var element=nonCommentArg(1,2,arguments),width=nonCommentArg(2,2,arguments),size=goog.style.getSize(element),elementWidth=size.width;_assert(commentArg(1,arguments),goog.testing.style.layoutasserts.isWithinThreshold_(width,elementWidth,0),"Element should have width "+width+" but was "+elementWidth+".")},assertWidthWithinTolerance=function(a,b,c,opt_d){_validateArguments(3,arguments);var element=nonCommentArg(1,3,arguments),width=nonCommentArg(2,3,arguments),tolerance=nonCommentArg(3,3,arguments),size=goog.style.getSize(element),elementWidth=size.width;_assert(commentArg(1,arguments),goog.testing.style.layoutasserts.isWithinThreshold_(width,elementWidth,tolerance),"Element width("+elementWidth+") should be within given width("+width+") with tolerance value of "+tolerance+".")},assertHeight=function(a,b,opt_c){_validateArguments(2,arguments);var element=nonCommentArg(1,2,arguments),height=nonCommentArg(2,2,arguments),size=goog.style.getSize(element),elementHeight=size.height;_assert(commentArg(1,arguments),goog.testing.style.layoutasserts.isWithinThreshold_(height,elementHeight,0),"Element should have height "+height+".")},assertHeightWithinTolerance=function(a,b,c,opt_d){_validateArguments(3,arguments);var element=nonCommentArg(1,3,arguments),height=nonCommentArg(2,3,arguments),tolerance=nonCommentArg(3,3,arguments),size=goog.style.getSize(element),elementHeight=size.height;_assert(commentArg(1,arguments),goog.testing.style.layoutasserts.isWithinThreshold_(height,elementHeight,tolerance),"Element width("+elementHeight+") should be within given width("+height+") with tolerance value of "+tolerance+".")},assertIsLeftOf=function(a,b,opt_c){_validateArguments(2,arguments);var element=nonCommentArg(1,2,arguments),otherElement=nonCommentArg(2,2,arguments),elementRect=goog.style.getBounds(element),otherElementRect=goog.style.getBounds(otherElement);_assert(commentArg(1,arguments),elementRect.left<otherElementRect.left,"Elements should be left to right.")},assertIsStrictlyLeftOf=function(a,b,opt_c){_validateArguments(2,arguments);var element=nonCommentArg(1,2,arguments),otherElement=nonCommentArg(2,2,arguments),elementRect=goog.style.getBounds(element),otherElementRect=goog.style.getBounds(otherElement);_assert(commentArg(1,arguments),elementRect.left+elementRect.width<otherElementRect.left,"Elements should be strictly left to right.")},assertIsAbove=function(a,b,opt_c){_validateArguments(2,arguments);var element=nonCommentArg(1,2,arguments),otherElement=nonCommentArg(2,2,arguments),elementRect=goog.style.getBounds(element),otherElementRect=goog.style.getBounds(otherElement);_assert(commentArg(1,arguments),elementRect.top<otherElementRect.top,"Elements should be top to bottom.")},assertIsStrictlyAbove=function(a,b,opt_c){_validateArguments(2,arguments);var element=nonCommentArg(1,2,arguments),otherElement=nonCommentArg(2,2,arguments),elementRect=goog.style.getBounds(element),otherElementRect=goog.style.getBounds(otherElement);_assert(commentArg(1,arguments),elementRect.top+elementRect.height<otherElementRect.top,"Elements should be strictly top to bottom.")},assertContained=function(a,b,opt_c){_validateArguments(2,arguments);var element=nonCommentArg(1,2,arguments),otherElement=nonCommentArg(2,2,arguments),elementRect=goog.style.getBounds(element),otherElementRect=goog.style.getBounds(otherElement);_assert(commentArg(1,arguments),elementRect.contains(otherElementRect),"Element should be contained within the other element.")};goog.testing.style.layoutasserts.isWithinThreshold_=function(val1,val2,threshold){return Math.abs(val1-val2)<=threshold};