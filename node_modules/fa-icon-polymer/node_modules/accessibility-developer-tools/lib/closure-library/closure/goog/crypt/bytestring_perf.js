goog.provide("goog.crypt.byteArrayToStringPerf");goog.require("goog.array");goog.require("goog.dom");goog.require("goog.testing.PerformanceTable");goog.setTestOnly("goog.crypt.byteArrayToStringPerf");var table=new goog.testing.PerformanceTable(goog.dom.getElement("perfTable")),BYTES_LENGTH=1048576,CHUNK_SIZE=8192;function getBytes(){for(var bytes=[],i=0;i<BYTES_LENGTH;i++){bytes.push("A".charCodeAt(0))}return bytes}function copyAndSpliceByteArray(bytes){var remainingBytes=goog.array.clone(bytes),strings=[];while(remainingBytes.length){var chunk=goog.array.splice(remainingBytes,0,CHUNK_SIZE);strings.push(String.fromCharCode.apply(null,chunk))}return strings.join("")}function sliceByteArrayConcat(bytes){for(var str="",i=0,chunk;i<bytes.length;i+=CHUNK_SIZE){chunk=goog.array.slice(bytes,i,i+CHUNK_SIZE);str+=String.fromCharCode.apply(null,chunk)}return str}function sliceByteArrayJoin(bytes){for(var strings=[],i=0,chunk;i<bytes.length;i+=CHUNK_SIZE){chunk=goog.array.slice(bytes,i,i+CHUNK_SIZE);strings.push(String.fromCharCode.apply(null,chunk))}return strings.join("")}function mapByteArray(bytes){var strings=goog.array.map(bytes,String.fromCharCode);return strings.join("")}function forLoopByteArrayConcat(bytes){for(var str="",i=0;i<bytes.length;i++){str+=String.fromCharCode(bytes[i])}return str}function forLoopByteArrayJoin(bytes){for(var strs=[],i=0;i<bytes.length;i++){strs.push(String.fromCharCode(bytes[i]))}return strs.join("")}function run(){var bytes=getBytes();table.run(goog.partial(copyAndSpliceByteArray,getBytes()),"Copy array and splice out chunks.");table.run(goog.partial(sliceByteArrayConcat,getBytes()),"Slice out copies of the byte array, concatenating results");table.run(goog.partial(sliceByteArrayJoin,getBytes()),"Slice out copies of the byte array, joining results");table.run(goog.partial(forLoopByteArrayConcat,getBytes()),"Use for loop with concat.");table.run(goog.partial(forLoopByteArrayJoin,getBytes()),"Use for loop with join.")}run();