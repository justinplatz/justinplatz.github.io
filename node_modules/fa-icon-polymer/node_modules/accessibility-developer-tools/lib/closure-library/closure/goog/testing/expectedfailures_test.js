goog.provide("goog.testing.ExpectedFailuresTest");goog.setTestOnly("goog.testing.ExpectedFailuresTest");goog.require("goog.debug.Logger");goog.require("goog.testing.ExpectedFailures");goog.require("goog.testing.JsUnitException");goog.require("goog.testing.TestCase");goog.require("goog.testing.jsunit");var count,expectedFailures,lastLevel,lastMessage;goog.testing.ExpectedFailures.prototype.logger_.log=function(level,message){lastLevel=level;lastMessage=message;count++};function setUp(){goog.testing.TestCase.getActiveTestCase().failOnUnreportedAsserts=!1;expectedFailures=new goog.testing.ExpectedFailures;count=0;lastLevel=lastMessage=""}function testNoExpectedFailure(){expectedFailures.handleTearDown()}function testPreventExpectedFailure(){expectedFailures.expectFailureFor(!0);expectedFailures.handleException(new goog.testing.JsUnitException("",""));assertEquals("Should have logged a message",1,count);assertEquals("Should have logged an info message",goog.debug.Logger.Level.INFO,lastLevel);assertContains("Should log a suppression message","Suppressing test failure",lastMessage);expectedFailures.handleTearDown();assertEquals("Should not have logged another message",1,count)}function testDoNotPreventException(){var ex="exception";expectedFailures.expectFailureFor(!1);var e=assertThrows("Should have rethrown exception",function(){expectedFailures.handleException(ex)});assertEquals("Should rethrow same exception",ex,e)}function testExpectedFailureDidNotOccur(){expectedFailures.expectFailureFor(!0);expectedFailures.handleTearDown();assertEquals("Should have logged a message",1,count);assertEquals("Should have logged a warning",goog.debug.Logger.Level.WARNING,lastLevel);assertContains("Should log a suppression message","Expected a test failure",lastMessage)}function testRun(){expectedFailures.expectFailureFor(!0);expectedFailures.run(function(){fail("Expected failure")});assertEquals("Should have logged a message",1,count);assertEquals("Should have logged an info message",goog.debug.Logger.Level.INFO,lastLevel);assertContains("Should log a suppression message","Suppressing test failure",lastMessage);expectedFailures.handleTearDown();assertEquals("Should not have logged another message",1,count)}function testRunStrict(){expectedFailures.expectFailureFor(!0);var ex=assertThrows(function(){expectedFailures.run(function(){})});assertContains("Expected a test failure in 'testRunStrict' but the test passed.",ex.message)}function testRunLenient(){expectedFailures.expectFailureFor(!0);expectedFailures.run(function(){},!0);expectedFailures.handleTearDown();assertEquals("Should have logged a message",1,count);assertEquals("Should have logged a warning",goog.debug.Logger.Level.WARNING,lastLevel);assertContains("Should log a suppression message","Expected a test failure",lastMessage)}