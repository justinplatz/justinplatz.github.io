goog.provide("goog.messaging.AbstractChannelTest");goog.setTestOnly("goog.messaging.AbstractChannelTest");goog.require("goog.messaging.AbstractChannel");goog.require("goog.testing.MockControl");goog.require("goog.testing.async.MockControl");goog.require("goog.testing.jsunit");var mockControl,mockWorker,asyncMockControl,channel;function setUp(){mockControl=new goog.testing.MockControl;asyncMockControl=new goog.testing.async.MockControl(mockControl);channel=new goog.messaging.AbstractChannel}function tearDown(){channel.dispose();mockControl.$verifyAll()}function testConnect(){channel.connect(asyncMockControl.createCallbackMock("connectCallback",function(){}))}function testIsConnected(){assertTrue("Channel should be connected by default",channel.isConnected())}function testDeliverString(){channel.registerService("foo",asyncMockControl.asyncAssertEquals("should pass string to service","bar"),!1);channel.deliver("foo","bar")}function testDeliverDeserializedString(){channel.registerService("foo",asyncMockControl.asyncAssertEquals("should pass string to service","{\"bar\":\"baz\"}"),!1);channel.deliver("foo",{bar:"baz"})}function testDeliverObject(){channel.registerService("foo",asyncMockControl.asyncAssertEquals("should pass string to service",{bar:"baz"}),!0);channel.deliver("foo",{bar:"baz"})}function testDeliverSerializedObject(){channel.registerService("foo",asyncMockControl.asyncAssertEquals("should pass string to service",{bar:"baz"}),!0);channel.deliver("foo","{\"bar\":\"baz\"}")}