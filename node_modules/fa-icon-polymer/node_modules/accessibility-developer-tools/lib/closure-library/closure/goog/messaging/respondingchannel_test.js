goog.provide("goog.messaging.RespondingChannelTest");goog.setTestOnly("goog.messaging.RespondingChannelTest");goog.require("goog.messaging.RespondingChannel");goog.require("goog.testing.MockControl");goog.require("goog.testing.jsunit");goog.require("goog.testing.messaging.MockMessageChannel");var CH1_REQUEST={request:"quux1"},CH2_REQUEST={request:"quux2"},CH1_RESPONSE={response:"baz1"},CH2_RESPONSE={response:"baz2"},SERVICE_NAME="serviceName",mockControl,ch1,ch2,respondingCh1,respondingCh2;function setUp(){mockControl=new goog.testing.MockControl;ch1=new goog.testing.messaging.MockMessageChannel(mockControl);ch2=new goog.testing.messaging.MockMessageChannel(mockControl);respondingCh1=new goog.messaging.RespondingChannel(ch1);respondingCh2=new goog.messaging.RespondingChannel(ch2)}function tearDown(){respondingCh1.dispose();respondingCh2.dispose();mockControl.$verifyAll()}function testSendWithSignature(){var message1Ch1Request={data:CH1_REQUEST,signature:0},message1Ch2Response={data:CH2_RESPONSE,signature:0},message2Ch1Request={data:CH1_REQUEST,signature:1},message2Ch2Response={data:CH2_RESPONSE,signature:1},message3Ch2Request={data:CH2_REQUEST,signature:0},message3Ch1Response={data:CH1_RESPONSE,signature:0},message4Ch2Request={data:CH2_REQUEST,signature:1},message4Ch1Response={data:CH1_RESPONSE,signature:1};ch1.send("public:"+SERVICE_NAME,message1Ch1Request);ch2.send("private:mics",message1Ch2Response);ch1.send("public:"+SERVICE_NAME,message2Ch1Request);ch2.send("private:mics",message2Ch2Response);ch2.send("public:"+SERVICE_NAME,message3Ch2Request);ch1.send("private:mics",message3Ch1Response);ch2.send("public:"+SERVICE_NAME,message4Ch2Request);ch1.send("private:mics",message4Ch1Response);mockControl.$replayAll();var hasInvokedCh1=!1,hasInvokedCh2=!1,hasReturnedFromCh1=!1,hasReturnedFromCh2=!1,serviceCallback1=function(message){hasInvokedCh1=!0;assertObjectEquals(CH2_REQUEST,message);return CH1_RESPONSE},serviceCallback2=function(message){hasInvokedCh2=!0;assertObjectEquals(CH1_REQUEST,message);return CH2_RESPONSE},invocationCallback1=function(message){hasReturnedFromCh2=!0;assertObjectEquals(CH2_RESPONSE,message)},invocationCallback2=function(message){hasReturnedFromCh1=!0;assertObjectEquals(CH1_RESPONSE,message)};respondingCh1.registerService(SERVICE_NAME,serviceCallback1);respondingCh2.registerService(SERVICE_NAME,serviceCallback2);respondingCh1.send(SERVICE_NAME,CH1_REQUEST,invocationCallback1);ch2.receive("public:"+SERVICE_NAME,message1Ch1Request);ch1.receive("private:mics",message1Ch2Response);respondingCh1.send(SERVICE_NAME,CH1_REQUEST,invocationCallback1);ch2.receive("public:"+SERVICE_NAME,message2Ch1Request);ch1.receive("private:mics",message2Ch2Response);respondingCh2.send(SERVICE_NAME,CH2_REQUEST,invocationCallback2);ch1.receive("public:"+SERVICE_NAME,message3Ch2Request);ch2.receive("private:mics",message3Ch1Response);respondingCh2.send(SERVICE_NAME,CH2_REQUEST,invocationCallback2);ch1.receive("public:"+SERVICE_NAME,message4Ch2Request);ch2.receive("private:mics",message4Ch1Response);assertTrue(hasInvokedCh1&&hasInvokedCh2&&hasReturnedFromCh1&&hasReturnedFromCh2)}