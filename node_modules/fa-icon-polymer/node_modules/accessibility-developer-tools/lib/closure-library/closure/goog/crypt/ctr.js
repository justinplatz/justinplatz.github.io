goog.provide("goog.crypt.Ctr");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.crypt");goog.crypt.Ctr=function(cipher){this.cipher_=cipher};goog.crypt.Ctr.prototype.encrypt=function(plainText,initialVector){goog.asserts.assert(initialVector.length==this.cipher_.BLOCK_SIZE,"Initial vector must be size of one block.");var counter=goog.array.clone(initialVector),keyStreamBlock=[],encryptedArray=[],plainTextBlock=[];while(encryptedArray.length<plainText.length){keyStreamBlock=this.cipher_.encrypt(counter);goog.crypt.Ctr.incrementBigEndianCounter_(counter);plainTextBlock=goog.array.slice(plainText,encryptedArray.length,encryptedArray.length+this.cipher_.BLOCK_SIZE);goog.array.extend(encryptedArray,goog.crypt.xorByteArray(plainTextBlock,goog.array.slice(keyStreamBlock,0,plainTextBlock.length)))}return encryptedArray};goog.crypt.Ctr.prototype.decrypt=goog.crypt.Ctr.prototype.encrypt;goog.crypt.Ctr.incrementBigEndianCounter_=function(counter){for(var i=counter.length-1,currentByte;0<=i;i--){currentByte=counter[i];currentByte=255&currentByte+1;counter[i]=currentByte;if(0!=currentByte){return}}};