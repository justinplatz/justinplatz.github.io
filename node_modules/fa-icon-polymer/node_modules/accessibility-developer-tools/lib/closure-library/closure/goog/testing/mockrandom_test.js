goog.provide("goog.testing.MockRandomTest");goog.setTestOnly("goog.testing.MockRandomTest");goog.require("goog.testing.MockRandom");goog.require("goog.testing.jsunit");function testMockRandomInstall(){var random=new goog.testing.MockRandom([]),originalRandom=Math.random;assertFalse(!!random.installed_);random.install();assertTrue(random.installed_);assertNotEquals(Math.random,originalRandom);random.uninstall();assertFalse(random.installed_);assertEquals(originalRandom,Math.random)}function testMockRandomRandom(){var random=new goog.testing.MockRandom([],!0);assertFalse(random.hasMoreValues());random.inject(2);assertTrue(random.hasMoreValues());assertEquals(2,Math.random());random.inject([1,2,3]);assertTrue(random.hasMoreValues());assertEquals(1,Math.random());assertEquals(2,Math.random());assertEquals(3,Math.random());assertFalse(random.hasMoreValues());assertNotUndefined(Math.random())}function testRandomStrictlyFromSequence(){var random=new goog.testing.MockRandom([],!0);random.setStrictlyFromSequence(!0);assertFalse(random.hasMoreValues());assertThrows(function(){Math.random()});random.inject(3);assertTrue(random.hasMoreValues());assertNotThrows(function(){Math.random()});random.setStrictlyFromSequence(!1);assertFalse(random.hasMoreValues());assertNotThrows(function(){Math.random()})}