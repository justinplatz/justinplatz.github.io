goog.provide("goog.format.InternationalizedEmailAddressTest");goog.setTestOnly("goog.format.InternationalizedEmailAddressTest");goog.require("goog.array");goog.require("goog.format.InternationalizedEmailAddress");goog.require("goog.testing.jsunit");function doIsValidTest(testFunc,valid,invalid){goog.array.forEach(valid,function(str){assertTrue("\""+str+"\" should be valid.",testFunc(str))});goog.array.forEach(invalid,function(str){assertFalse("\""+str+"\" should be invalid.",testFunc(str))})}function assertParsedList(inputString,expectedList,opt_message){var message=opt_message||"Should parse address correctly",result=goog.format.InternationalizedEmailAddress.parseList(inputString);assertEquals("Should have correct # of addresses",expectedList.length,result.length);for(var i=0;i<expectedList.length;++i){assertEquals(message,expectedList[i],result[i].getAddress())}return result}function testParseList(){assertParsedList("<me.\u307F\u3093\u3042@me.xn--l8jtg9b>",["me.\u307F\u3093\u3042@me.xn--l8jtg9b"])}function testIsEaiValid(){var valid=["e@b.eu","<a.b+foo@c.com>","eric <e@b.com>","\"e\" <e@b.com>","a@FOO.MUSEUM","bla@b.co.ac.uk","bla@a.b.com","o'hara@gm.com","plus+is+allowed@gmail.com","!/#$%&'*+-=~|`{}?^_@expample.com","confirm-bhk=modulo.org@yahoogroups.com","\u307F.\u3093-\u3042@\u307F\u3093\u3042.\u307F\u3093\u3042","\u307F\u3093\u3042@test.com","test@test.\u307F\u3093\u3042","test@\u307F\u3093\u3042.com","me.\u307F\u3093\u3042@me.xn--l8jtg9b","\u307F\u3093\u3042@me.xn--l8jtg9b","fullwidthfullstop@sld"+"\uFF0E"+"tld","ideographicfullstop@sld"+"\u3002"+"tld","halfwidthideographicfullstop@sld"+"\uFF61"+"tld"],invalid=[null,void 0,"e","","e @c.com","a@b","foo.com","foo@c..com","test@gma=il.com","aaa@gmail","has some spaces@gmail.com","has@three@at@signs.com","@no-local-part.com"];doIsValidTest(goog.format.InternationalizedEmailAddress.isValidAddress,valid,invalid)}function testIsValidLocalPart(){var valid=["e","a.b+foo","o'hara","user+someone","!/#$%&'*+-=~|`{}?^_","confirm-bhk=modulo.org","me.\u307F\u3093\u3042","\u307F\u3093\u3042"],invalid=[null,void 0,"A@b@c","a\"b(c)d,e:f;g<h>i[j\\k]l","just\"not\"right","this is\"not\\allowed","this\\ still\"not\\\\allowed","has some spaces"];doIsValidTest(goog.format.InternationalizedEmailAddress.isValidLocalPartSpec,valid,invalid)}function testIsValidDomainPart(){var valid=["example.com","dept.example.org","long.domain.with.lots.of.dots","me.xn--l8jtg9b","me.\u307F\u3093\u3042","sld.looooooongtld","sld"+"\uFF0E"+"tld","sld"+"\u3002"+"tld","sld"+"\uFF61"+"tld"],invalid=[null,void 0,"","@has.an.at.sign","..has.leading.dots","gma=il.com","DoesNotHaveADot","aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeeffffffffffgggggggggg"];doIsValidTest(goog.format.InternationalizedEmailAddress.isValidDomainPartSpec,valid,invalid)}function testparseListWithAdditionalSeparators(){assertParsedList("<foo@gmail.com>\u055D <bar@gmail.com>",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with U+055D");assertParsedList("<foo@gmail.com>\u055D <bar@gmail.com>\u055D",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with trailing U+055D");assertParsedList("<foo@gmail.com>\u060C <bar@gmail.com>",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with U+060C");assertParsedList("<foo@gmail.com>\u060C <bar@gmail.com>\u060C",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with trailing U+060C");assertParsedList("<foo@gmail.com>\u1363 <bar@gmail.com>",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with U+1363");assertParsedList("<foo@gmail.com>\u1363 <bar@gmail.com>\u1363",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with trailing U+1363");assertParsedList("<foo@gmail.com>\u1802 <bar@gmail.com>",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with U+1802");assertParsedList("<foo@gmail.com>\u1802 <bar@gmail.com>\u1802",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with trailing U+1802");assertParsedList("<foo@gmail.com>\u1808 <bar@gmail.com>",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with U+1808");assertParsedList("<foo@gmail.com>\u1808 <bar@gmail.com>\u1808",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with trailing U+1808");assertParsedList("<foo@gmail.com>\u2E41 <bar@gmail.com>",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with U+2E41");assertParsedList("<foo@gmail.com>\u2E41 <bar@gmail.com>\u2E41",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with trailing U+2E41");assertParsedList("<foo@gmail.com>\u3001 <bar@gmail.com>",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with U+3001");assertParsedList("<foo@gmail.com>\u3001 <bar@gmail.com>\u3001",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with trailing U+3001");assertParsedList("<foo@gmail.com>\uFF0C <bar@gmail.com>",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with U+FF0C");assertParsedList("<foo@gmail.com>\uFF0C <bar@gmail.com>\uFF0C",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with trailing U+FF0C");assertParsedList("<foo@gmail.com>\u0613 <bar@gmail.com>",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with U+0613");assertParsedList("<foo@gmail.com>\u0613 <bar@gmail.com>\u0613",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with trailing U+0613");assertParsedList("<foo@gmail.com>\u1364 <bar@gmail.com>",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with U+1364");assertParsedList("<foo@gmail.com>\u1364 <bar@gmail.com>\u1364",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with trailing U+1364");assertParsedList("<foo@gmail.com>\uFF1B <bar@gmail.com>",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with U+FF1B");assertParsedList("<foo@gmail.com>\uFF1B <bar@gmail.com>\uFF1B",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with trailing U+FF1B");assertParsedList("<foo@gmail.com>\uFF64 <bar@gmail.com>",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with U+FF64");assertParsedList("<foo@gmail.com>\uFF64 <bar@gmail.com>\uFF64",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with trailing U+FF64");assertParsedList("<foo@gmail.com>\u104A <bar@gmail.com>",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with U+104A");assertParsedList("<foo@gmail.com>\u104A <bar@gmail.com>\u104A",["foo@gmail.com","bar@gmail.com"],"Failed to parse 2 email addresses with trailing U+104A")}function testToString(){var f=function(str){return goog.format.InternationalizedEmailAddress.parse(str).toString()};assertEquals("JOHN Doe <john@gmail.com>",f("JOHN Doe <john@gmail.com>"));assertEquals("JOHN Doe <john@gmail.com>",f(" JOHN  Doe  <john@gmail.com> "));assertEquals("john@gmail.com",f("<john@gmail.com>"));assertEquals("john@gmail.com",f("john@gmail.com"));assertEquals("JOHN Doe",f("JOHN Doe <>"));assertEquals("\"JOHN, Doe\" <john@gmail.com>",f("\"JOHN, Doe\" <john@gmail.com>"));assertEquals("JOHN Doe <john@gmail.com>",f("\"JOHN Doe\" <john@gmail.com>"));assertEquals("\"JOHN, Doe\" <john@gmail.com>",f("JOHN, \"Doe\" <john@gmail.com>"));assertEquals("JOHN Doe <john@gmail.com>",f("JOHN \"Doe\" <john@gmail.com>"));assertEquals("\"JOHN, Doe\" <john@gmail.com>",f("JOHN, \\\"Doe\\\" <john@gmail.com>"));assertEquals("\"JOHN, Doe\" <john@gmail.com>",f("JOHN, Doe <john@gmail.com>"));assertEquals("\"JOHN; Doe\" <john@gmail.com>",f("JOHN; Doe <john@gmail.com>"));assertEquals("\"JOHN\u055D Doe\" <john@gmail.com>",f("JOHN\u055D Doe <john@gmail.com>"));assertEquals("\"JOHN\u060C Doe\" <john@gmail.com>",f("JOHN\u060C Doe <john@gmail.com>"));assertEquals("\"JOHN\u1363 Doe\" <john@gmail.com>",f("JOHN\u1363 Doe <john@gmail.com>"));assertEquals("\"JOHN\u1802 Doe\" <john@gmail.com>",f("JOHN\u1802 Doe <john@gmail.com>"));assertEquals("\"JOHN\u1808 Doe\" <john@gmail.com>",f("JOHN\u1808 Doe <john@gmail.com>"));assertEquals("\"JOHN\u2E41 Doe\" <john@gmail.com>",f("JOHN\u2E41 Doe <john@gmail.com>"));assertEquals("\"JOHN\u3001 Doe\" <john@gmail.com>",f("JOHN\u3001 Doe <john@gmail.com>"));assertEquals("\"JOHN\uFF0C Doe\" <john@gmail.com>",f("JOHN\uFF0C Doe <john@gmail.com>"));assertEquals("\"JOHN\u061B Doe\" <john@gmail.com>",f("JOHN\u061B Doe <john@gmail.com>"));assertEquals("\"JOHN\u1364 Doe\" <john@gmail.com>",f("JOHN\u1364 Doe <john@gmail.com>"));assertEquals("\"JOHN\uFF1B Doe\" <john@gmail.com>",f("JOHN\uFF1B Doe <john@gmail.com>"));assertEquals("\"JOHN\uFF64 Doe\" <john@gmail.com>",f("JOHN\uFF64 Doe <john@gmail.com>"));assertEquals("\"JOHN(Johnny) Doe\" <john@gmail.com>",f("JOHN(Johnny) Doe <john@gmail.com>"));assertEquals("\"JOHN[Johnny] Doe\" <john@gmail.com>",f("JOHN[Johnny] Doe <john@gmail.com>"));assertEquals("\"JOHN@work Doe\" <john@gmail.com>",f("JOHN@work Doe <john@gmail.com>"));assertEquals("\"JOHN:theking Doe\" <john@gmail.com>",f("JOHN:theking Doe <john@gmail.com>"));assertEquals("\"JOHN\\\\ Doe\" <john@gmail.com>",f("JOHN\\ Doe <john@gmail.com>"));assertEquals("\"JOHN.com Doe\" <john@gmail.com>",f("JOHN.com Doe <john@gmail.com>"))}