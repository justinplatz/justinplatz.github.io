goog.provide("goog.labs.net.webChannel.WebChannelBaseTransport");goog.require("goog.asserts");goog.require("goog.events.EventTarget");goog.require("goog.json");goog.require("goog.labs.net.webChannel.ChannelRequest");goog.require("goog.labs.net.webChannel.WebChannelBase");goog.require("goog.log");goog.require("goog.net.WebChannel");goog.require("goog.net.WebChannelTransport");goog.require("goog.object");goog.require("goog.string");goog.require("goog.string.path");goog.labs.net.webChannel.WebChannelBaseTransport=function(){if(!goog.labs.net.webChannel.ChannelRequest.supportsXhrStreaming()){throw new Error("Environmental error: no available transport.")}};goog.scope(function(){var WebChannelBaseTransport=goog.labs.net.webChannel.WebChannelBaseTransport,WebChannelBase=goog.labs.net.webChannel.WebChannelBase;WebChannelBaseTransport.prototype.createWebChannel=function(url,opt_options){return new WebChannelBaseTransport.Channel(url,opt_options)};WebChannelBaseTransport.Channel=function(url,opt_options){WebChannelBaseTransport.Channel.base(this,"constructor");this.channel_=new WebChannelBase(opt_options);this.url_=url;this.testUrl_=opt_options&&opt_options.testUrl?opt_options.testUrl:goog.string.path.join(this.url_,"test");this.logger_=goog.log.getLogger("goog.labs.net.webChannel.WebChannelBaseTransport");this.messageUrlParams_=opt_options&&opt_options.messageUrlParams||null;var messageHeaders=opt_options&&opt_options.messageHeaders||null;if(opt_options&&opt_options.clientProtocolHeaderRequired){if(messageHeaders){goog.object.set(messageHeaders,goog.net.WebChannel.X_CLIENT_PROTOCOL,goog.net.WebChannel.X_CLIENT_PROTOCOL_WEB_CHANNEL)}else{messageHeaders=goog.object.create(goog.net.WebChannel.X_CLIENT_PROTOCOL,goog.net.WebChannel.X_CLIENT_PROTOCOL_WEB_CHANNEL)}}this.channel_.setExtraHeaders(messageHeaders);this.supportsCrossDomainXhr_=opt_options&&opt_options.supportsCrossDomainXhr||!1;this.sendRawJson_=opt_options&&opt_options.sendRawJson||!1;var httpSessionIdParam=opt_options&&opt_options.httpSessionIdParam;if(httpSessionIdParam&&!goog.string.isEmptyOrWhitespace(httpSessionIdParam)){this.channel_.setHttpSessionIdParam(httpSessionIdParam);if(goog.object.containsKey(this.messageUrlParams_,httpSessionIdParam)){goog.object.remove(this.messageUrlParams_,httpSessionIdParam);goog.log.warning(this.logger_,"Ignore httpSessionIdParam also specified with messageUrlParams: "+httpSessionIdParam)}}this.channelHandler_=new WebChannelBaseTransport.Channel.Handler_(this)};goog.inherits(WebChannelBaseTransport.Channel,goog.events.EventTarget);WebChannelBaseTransport.Channel.prototype.open=function(){this.channel_.setHandler(this.channelHandler_);if(this.supportsCrossDomainXhr_){this.channel_.setSupportsCrossDomainXhrs(!0)}this.channel_.connect(this.testUrl_,this.url_,this.messageUrlParams_||void 0)};WebChannelBaseTransport.Channel.prototype.close=function(){this.channel_.disconnect()};WebChannelBaseTransport.Channel.prototype.send=function(message){goog.asserts.assert(goog.isObject(message),"only object type expected");if(this.sendRawJson_){var rawJson={__data__:goog.json.serialize(message)};this.channel_.sendMap(rawJson)}else{this.channel_.sendMap(message)}};WebChannelBaseTransport.Channel.prototype.disposeInternal=function(){this.channel_.setHandler(null);delete this.channelHandler_;this.channel_.disconnect();delete this.channel_;WebChannelBaseTransport.Channel.base(this,"disposeInternal")};WebChannelBaseTransport.Channel.MessageEvent=function(array){WebChannelBaseTransport.Channel.MessageEvent.base(this,"constructor");this.data=array};goog.inherits(WebChannelBaseTransport.Channel.MessageEvent,goog.net.WebChannel.MessageEvent);WebChannelBaseTransport.Channel.ErrorEvent=function(error){WebChannelBaseTransport.Channel.ErrorEvent.base(this,"constructor");this.status=goog.net.WebChannel.ErrorStatus.NETWORK_ERROR};goog.inherits(WebChannelBaseTransport.Channel.ErrorEvent,goog.net.WebChannel.ErrorEvent);WebChannelBaseTransport.Channel.Handler_=function(channel){WebChannelBaseTransport.Channel.Handler_.base(this,"constructor");this.channel_=channel};goog.inherits(WebChannelBaseTransport.Channel.Handler_,WebChannelBase.Handler);WebChannelBaseTransport.Channel.Handler_.prototype.channelOpened=function(channel){goog.log.info(this.channel_.logger_,"WebChannel opened on "+this.channel_.url_);this.channel_.dispatchEvent(goog.net.WebChannel.EventType.OPEN)};WebChannelBaseTransport.Channel.Handler_.prototype.channelHandleArray=function(channel,array){goog.asserts.assert(array,"array expected to be defined");this.channel_.dispatchEvent(new WebChannelBaseTransport.Channel.MessageEvent(array))};WebChannelBaseTransport.Channel.Handler_.prototype.channelError=function(channel,error){goog.log.info(this.channel_.logger_,"WebChannel aborted on "+this.channel_.url_+" due to channel error: "+error);this.channel_.dispatchEvent(new WebChannelBaseTransport.Channel.ErrorEvent(error))};WebChannelBaseTransport.Channel.Handler_.prototype.channelClosed=function(channel,opt_pendingMaps,opt_undeliveredMaps){goog.log.info(this.channel_.logger_,"WebChannel closed on "+this.channel_.url_);this.channel_.dispatchEvent(goog.net.WebChannel.EventType.CLOSE)};WebChannelBaseTransport.Channel.prototype.getRuntimeProperties=function(){return new WebChannelBaseTransport.ChannelProperties(this.channel_)};WebChannelBaseTransport.ChannelProperties=function(channel){this.channel_=channel};WebChannelBaseTransport.ChannelProperties.prototype.getConcurrentRequestLimit=function(){return this.channel_.getForwardChannelRequestPool().getMaxSize()};WebChannelBaseTransport.ChannelProperties.prototype.isSpdyEnabled=function(){return 1<this.getConcurrentRequestLimit()};WebChannelBaseTransport.ChannelProperties.prototype.getHttpSessionId=function(){return this.channel_.getHttpSessionId()};WebChannelBaseTransport.ChannelProperties.prototype.commit=goog.abstractMethod;WebChannelBaseTransport.ChannelProperties.prototype.getNonAckedMessageCount=goog.abstractMethod;WebChannelBaseTransport.ChannelProperties.prototype.onCommit=goog.abstractMethod;WebChannelBaseTransport.ChannelProperties.prototype.ackCommit=goog.abstractMethod;WebChannelBaseTransport.ChannelProperties.prototype.getLastStatusCode=function(){return this.channel_.getLastStatusCode()}});