goog.provide("goog.fxTest");goog.setTestOnly("goog.fxTest");goog.require("goog.fx.Animation");goog.require("goog.object");goog.require("goog.testing.MockClock");goog.require("goog.testing.PropertyReplacer");goog.require("goog.testing.jsunit");var clock,replacer,anim,anim2,Animation=goog.fx.Animation;function setUpPage(){clock=new goog.testing.MockClock(!0)}function tearDownPage(){clock.dispose()}function setUp(){replacer=new goog.testing.PropertyReplacer}function tearDown(){replacer.reset();if(anim&&anim.dispose){anim.dispose()}if(anim2&&anim2.dispose){anim2.dispose()}}function testAnimationConstructor(){assertThrows("Should throw since first arg is not an array",function(){new Animation(1,[2],3)});assertThrows("Should throw since second arg is not an array",function(){new Animation([1],2,3)});assertThrows("Should throw since the length are different",function(){new Animation([0,1],[2],3)})}function testPlayAndStopDoesNotLeaveAnyActiveAnimations(){anim=new Animation([0],[1],1e3);assertTrue("There should be no active animations",goog.object.isEmpty(goog.fx.anim.activeAnimations_));anim.play();assertEquals("There should be one active animations",1,goog.object.getCount(goog.fx.anim.activeAnimations_));anim.stop();assertTrue("There should be no active animations",goog.object.isEmpty(goog.fx.anim.activeAnimations_));anim.play();assertEquals("There should be one active animations",1,goog.object.getCount(goog.fx.anim.activeAnimations_));anim.pause();assertTrue("There should be no active animations",goog.object.isEmpty(goog.fx.anim.activeAnimations_))}