goog.provide("goog.labs.testing.ContainsStringMatcher");goog.provide("goog.labs.testing.EndsWithMatcher");goog.provide("goog.labs.testing.EqualToIgnoringWhitespaceMatcher");goog.provide("goog.labs.testing.EqualsMatcher");goog.provide("goog.labs.testing.RegexMatcher");goog.provide("goog.labs.testing.StartsWithMatcher");goog.provide("goog.labs.testing.StringContainsInOrderMatcher");goog.require("goog.asserts");goog.require("goog.labs.testing.Matcher");goog.require("goog.string");goog.labs.testing.ContainsStringMatcher=function(value){this.value_=value};goog.labs.testing.ContainsStringMatcher.prototype.matches=function(actualValue){goog.asserts.assertString(actualValue);return goog.string.contains(actualValue,this.value_)};goog.labs.testing.ContainsStringMatcher.prototype.describe=function(actualValue){return actualValue+" does not contain "+this.value_};goog.labs.testing.EndsWithMatcher=function(value){this.value_=value};goog.labs.testing.EndsWithMatcher.prototype.matches=function(actualValue){goog.asserts.assertString(actualValue);return goog.string.endsWith(actualValue,this.value_)};goog.labs.testing.EndsWithMatcher.prototype.describe=function(actualValue){return actualValue+" does not end with "+this.value_};goog.labs.testing.EqualToIgnoringWhitespaceMatcher=function(value){this.value_=value};goog.labs.testing.EqualToIgnoringWhitespaceMatcher.prototype.matches=function(actualValue){goog.asserts.assertString(actualValue);var string1=goog.string.collapseWhitespace(actualValue);return 0===goog.string.caseInsensitiveCompare(this.value_,string1)};goog.labs.testing.EqualToIgnoringWhitespaceMatcher.prototype.describe=function(actualValue){return actualValue+" is not equal(ignoring whitespace) to "+this.value_};goog.labs.testing.EqualsMatcher=function(value){this.value_=value};goog.labs.testing.EqualsMatcher.prototype.matches=function(actualValue){goog.asserts.assertString(actualValue);return this.value_===actualValue};goog.labs.testing.EqualsMatcher.prototype.describe=function(actualValue){return actualValue+" is not equal to "+this.value_};goog.labs.testing.RegexMatcher=function(regex){this.regex_=regex};goog.labs.testing.RegexMatcher.prototype.matches=function(actualValue){goog.asserts.assertString(actualValue);return this.regex_.test(actualValue)};goog.labs.testing.RegexMatcher.prototype.describe=function(actualValue){return actualValue+" does not match "+this.regex_};goog.labs.testing.StartsWithMatcher=function(value){this.value_=value};goog.labs.testing.StartsWithMatcher.prototype.matches=function(actualValue){goog.asserts.assertString(actualValue);return goog.string.startsWith(actualValue,this.value_)};goog.labs.testing.StartsWithMatcher.prototype.describe=function(actualValue){return actualValue+" does not start with "+this.value_};goog.labs.testing.StringContainsInOrderMatcher=function(values){this.values_=values};goog.labs.testing.StringContainsInOrderMatcher.prototype.matches=function(actualValue){goog.asserts.assertString(actualValue);for(var currentIndex,previousIndex=0,i=0;i<this.values_.length;i++){currentIndex=goog.string.contains(actualValue,this.values_[i]);if(0>currentIndex||currentIndex<previousIndex){return!1}previousIndex=currentIndex}return!0};goog.labs.testing.StringContainsInOrderMatcher.prototype.describe=function(actualValue){return actualValue+" does not contain the expected values in order."};function containsString(value){return new goog.labs.testing.ContainsStringMatcher(value)}function endsWith(value){return new goog.labs.testing.EndsWithMatcher(value)}function equalToIgnoringWhitespace(value){return new goog.labs.testing.EqualToIgnoringWhitespaceMatcher(value)}function equals(value){return new goog.labs.testing.EqualsMatcher(value)}function matchesRegex(regex){return new goog.labs.testing.RegexMatcher(regex)}function startsWith(value){return new goog.labs.testing.StartsWithMatcher(value)}function stringContainsInOrder(values){return new goog.labs.testing.StringContainsInOrderMatcher(values)}