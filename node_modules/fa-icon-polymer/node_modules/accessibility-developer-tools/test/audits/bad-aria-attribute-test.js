(function(){module("BadAriaAttribute");var RULE_NAME="badAriaAttribute";test("Element with role and global, supported and required attributes",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("div"));widget.setAttribute("role","spinbutton");widget.setAttribute("aria-hidden","false");widget.setAttribute("aria-required","true");widget.setAttribute("aria-valuemax","79");widget.setAttribute("aria-valuemin","10");widget.setAttribute("aria-valuenow","50");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config,"Test should pass with global, supported and required attributes for role")});test("Element with role and global but missing supported and required attributes",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("div"));widget.setAttribute("role","spinbutton");widget.setAttribute("aria-hidden","false");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config,"This rule shouldn't care if required and/or supported roles are missing.")});test("Element with role and known but unsupported attributes",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("div"));widget.setAttribute("role","group");widget.setAttribute("aria-required","true");widget.setAttribute("aria-valuemax","79");widget.setAttribute("aria-valuemin","10");widget.setAttribute("aria-valuenow","50");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config,"This rule shouldn't care if known ARIA attributes are used with the wrong role.")});test("Element with role and global but missing supported and required attributes",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("meta"));widget.setAttribute("role","spinbutton");widget.setAttribute("aria-hidden","false");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config,"This rule shouldn't care if we put ARIA attributes on elements that shouldn't have them.")});test("Element with a role and unknown aria- attribute",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("div"));widget.setAttribute("role","spinbutton");widget.setAttribute("aria-labeledby","false");widget.setAttribute("aria-hidden","false");widget.setAttribute("aria-required","true");widget.setAttribute("aria-valuemax","79");widget.setAttribute("aria-valuemin","10");widget.setAttribute("aria-valuenow","50");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.FAIL,elements:[widget]};assert.runRule(config,"This rule should detect unknown \"aria-\" attributes on elements with role")});test("Element with no role and unknown aria- attribute",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("div"));widget.setAttribute("aria-bananapeel","oops");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.FAIL,elements:[widget]};assert.runRule(config,"This rule should detect unknown \"aria-\" attributes on elements without role")});test("Element with role but no aria- attributes",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("div"));widget.setAttribute("role","spinbutton");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.NA};assert.runRule(config,"This rule should ignore elements with no aria- attributes.")});test("Element with no role and some known, some unknown aria- attributes",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("div"));widget.setAttribute("aria-busy","false");widget.setAttribute("aria-hidden","false");widget.setAttribute("aria-awards","true");widget.setAttribute("aria-singer","true");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.FAIL,elements:[widget]};assert.runRule(config,"This rule should detect unknown \"aria-\" attributes amongst known ones")})})();