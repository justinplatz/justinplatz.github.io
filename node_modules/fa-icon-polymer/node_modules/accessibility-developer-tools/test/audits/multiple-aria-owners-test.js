(function(){var RULE_NAME="multipleAriaOwners";module("MultipleAriaOwners");function setup(ownedIds,ownerIds,attributeValue){var fixture=document.getElementById("qunit-fixture"),value=attributeValue||ownedIds.join(" ");ownedIds.forEach(function(id){var element=document.createElement("div");element.id=id;fixture.appendChild(element)});ownerIds=ownerIds||[""];ownerIds.forEach(function(id){var element=document.createElement("div");if(id){element.id=id}element.setAttribute("aria-owns",value);fixture.appendChild(element)});return fixture}test("Element owned once only",function(assert){var fixture=setup(["theOwned"]),config={scope:fixture,ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config)});test("Multiple elements owned once only",function(assert){var fixture=setup(["theOwnedElement","theOtherOwnedElement"]),config={scope:fixture,ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config)});test("Element owned once only but not found in DOM",function(assert){var id="theOwnedElement",fixture=setup([id]),element=document.getElementById(id);element.parentNode.removeChild(element);var config={scope:fixture,ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config)});test("Element owned multiple times",function(assert){var ownerIds=["owner1","owner2"],fixture=setup(["theOwned"],ownerIds),elements=ownerIds.map(function(id){return document.getElementById(id)}),config={scope:fixture,ruleName:RULE_NAME,expected:axs.constants.AuditResult.FAIL,elements:elements};assert.runRule(config)});test("Multiple elements owned multiple times",function(assert){var ownerIds=["owner1","owner2","owner3"],fixture=setup(["theOwnedElement","theOtherOwnedElement"],ownerIds),elements=ownerIds.map(function(id){return document.getElementById(id)}),config={scope:fixture,ruleName:RULE_NAME,expected:axs.constants.AuditResult.FAIL,elements:elements};assert.runRule(config)});test("Multiple elements one owned multiple times",function(assert){var ownerIds=["owner1","owner2"],ownedElements=["theOwnedElement","theOtherOwnedElement"],fixture=setup(ownedElements,ownerIds,ownedElements[0]),elements=ownerIds.map(function(id){return document.getElementById(id)}),config={scope:fixture,ruleName:RULE_NAME,expected:axs.constants.AuditResult.FAIL,elements:elements};assert.runRule(config)});test("Using ignoreSelectors",function(assert){var fixture=setup(["theOwned"],["owner1","owner2"]),ignoreSelectors=["#owner1","#owner2"],config={ignoreSelectors:ignoreSelectors,scope:fixture,ruleName:RULE_NAME,expected:axs.constants.AuditResult.NA};assert.runRule(config)})})();