(function(){module("UnupportedAriaAttribute");var RULE_NAME="unsupportedAriaAttribute";test("Element with role and global, supported and required attributes",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("div"));widget.setAttribute("role","spinbutton");widget.setAttribute("aria-hidden","false");widget.setAttribute("aria-required","true");widget.setAttribute("aria-valuemax","79");widget.setAttribute("aria-valuemin","10");widget.setAttribute("aria-valuenow","50");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config)});test("Element with no role and global attributes only",function(assert){var fixture=document.getElementById("qunit-fixture"),div=fixture.appendChild(document.createElement("div"));div.setAttribute("aria-hidden","false");div.setAttribute("aria-label","bananas");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config)});test("Element with role and global but missing supported and required attributes",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("div"));widget.setAttribute("role","spinbutton");widget.setAttribute("aria-hidden","false");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config)});test("Element with role and known but unsupported attributes",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("div"));widget.setAttribute("role","group");widget.setAttribute("aria-required","true");widget.setAttribute("aria-valuemax","79");widget.setAttribute("aria-valuemin","10");widget.setAttribute("aria-valuenow","50");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.FAIL,elements:[widget]};assert.runRule(config)});test("Element with role and global but missing supported and required attributes",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("meta"));widget.setAttribute("role","spinbutton");widget.setAttribute("aria-hidden","false");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config)});test("Element with a role and unknown aria- attribute",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("div"));widget.setAttribute("role","spinbutton");widget.setAttribute("aria-labeledby","false");widget.setAttribute("aria-hidden","false");widget.setAttribute("aria-required","true");widget.setAttribute("aria-valuemax","79");widget.setAttribute("aria-valuemin","10");widget.setAttribute("aria-valuenow","50");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config)});test("Element with no role and unknown aria- attribute",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("div"));widget.setAttribute("aria-required","true");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.FAIL,elements:[widget]};assert.runRule(config)});test("Element with role but no aria- attributes",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("div"));widget.setAttribute("role","spinbutton");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.NA};assert.runRule(config)});test("Element with role but no aria- attributes",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("div"));widget.setAttribute("role","spinbutton");widget.setAttribute("aria-cucumber","true");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.NA};assert.runRule(config)});test("Element with no role and some global, some unsupported aria- attributes",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("div"));widget.setAttribute("aria-busy","false");widget.setAttribute("aria-hidden","false");widget.setAttribute("aria-posinset","10");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.FAIL,elements:[widget]};assert.runRule(config)});test("Element with no role and global aria- attributes",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("input"));widget.type="text";widget.setAttribute("aria-label","This is my label");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config)});test("Input with no type attribute with no role and aria-required",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("input"));widget.setAttribute("aria-required","true");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config,"An input with no type is a textbox")});test("Input with type=text attribute with no role and aria-required",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("input"));widget.setAttribute("type","text");widget.setAttribute("aria-required","true");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config,"A text input is a textbox")});test("Input with type=text property with no role and aria-required",function(assert){var fixture=document.getElementById("qunit-fixture"),widget=fixture.appendChild(document.createElement("input"));widget.type="text";widget.setAttribute("aria-required","true");var config={ruleName:RULE_NAME,expected:axs.constants.AuditResult.PASS,elements:[]};assert.runRule(config,"A text input is a textbox")})})();