(function(window){var QUnit,config,testId=0,toString=Object.prototype.toString,hasOwn=Object.prototype.hasOwnProperty,defined={setTimeout:"undefined"!==typeof window.setTimeout,sessionStorage:function(){var x="qunit-test-string";try{sessionStorage.setItem(x,x);sessionStorage.removeItem(x);return!0}catch(e){return!1}}()};function Test(settings){extend(this,settings);this.assertions=[];this.testNumber=++Test.count}Test.count=0;Test.prototype={init:function(){var a,b,li,tests=id("qunit-tests");if(tests){b=document.createElement("strong");b.innerHTML=this.name;a=document.createElement("a");a.innerHTML="Rerun";a.href=QUnit.url({testNumber:this.testNumber});li=document.createElement("li");li.appendChild(b);li.appendChild(a);li.className="running";li.id=this.id="qunit-test-output"+testId++;tests.appendChild(li)}},setup:function(){if(this.module!==config.previousModule){if(config.previousModule){runLoggingCallbacks("moduleDone",QUnit,{name:config.previousModule,failed:config.moduleStats.bad,passed:config.moduleStats.all-config.moduleStats.bad,total:config.moduleStats.all})}config.previousModule=this.module;config.moduleStats={all:0,bad:0};runLoggingCallbacks("moduleStart",QUnit,{name:this.module})}else if(config.autorun){runLoggingCallbacks("moduleStart",QUnit,{name:this.module})}config.current=this;this.testEnvironment=extend({setup:function(){},teardown:function(){}},this.moduleTestEnvironment);runLoggingCallbacks("testStart",QUnit,{name:this.testName,module:this.module});QUnit.current_testEnvironment=this.testEnvironment;if(!config.pollution){saveGlobal()}if(config.notrycatch){this.testEnvironment.setup.call(this.testEnvironment);return}try{this.testEnvironment.setup.call(this.testEnvironment)}catch(e){QUnit.pushFailure("Setup failed on "+this.testName+": "+e.message,extractStacktrace(e,1))}},run:function(){config.current=this;var running=id("qunit-testresult");if(running){running.innerHTML="Running: <br/>"+this.name}if(this.async){QUnit.stop()}if(config.notrycatch){this.callback.call(this.testEnvironment,QUnit.assert);return}try{this.callback.call(this.testEnvironment,QUnit.assert)}catch(e){QUnit.pushFailure("Died on test #"+(this.assertions.length+1)+": "+e.message,extractStacktrace(e,1));saveGlobal();if(config.blocking){QUnit.start()}}},teardown:function(){config.current=this;if(config.notrycatch){this.testEnvironment.teardown.call(this.testEnvironment);return}else{try{this.testEnvironment.teardown.call(this.testEnvironment)}catch(e){QUnit.pushFailure("Teardown failed on "+this.testName+": "+e.message,extractStacktrace(e,1))}}checkPollution()},finish:function(){config.current=this;if(null!=this.expected&&this.expected!=this.assertions.length){QUnit.pushFailure("Expected "+this.expected+" assertions, but "+this.assertions.length+" were run",this.stack)}else if(null==this.expected&&!this.assertions.length){QUnit.pushFailure("Expected at least one assertion, but none were run - call expect(0) to accept zero assertions.",this.stack)}var assertion,a,b,i,li,ol,test=this,good=0,bad=0,tests=id("qunit-tests");config.stats.all+=this.assertions.length;config.moduleStats.all+=this.assertions.length;if(tests){ol=document.createElement("ol");for(i=0;i<this.assertions.length;i++){assertion=this.assertions[i];li=document.createElement("li");li.className=assertion.result?"pass":"fail";li.innerHTML=assertion.message||(assertion.result?"okay":"failed");ol.appendChild(li);if(assertion.result){good++}else{bad++;config.stats.bad++;config.moduleStats.bad++}}if(QUnit.config.reorder&&defined.sessionStorage){if(bad){sessionStorage.setItem("qunit-test-"+this.module+"-"+this.testName,bad)}else{sessionStorage.removeItem("qunit-test-"+this.module+"-"+this.testName)}}if(0===bad){ol.style.display="none"}b=document.createElement("strong");b.innerHTML=this.name+" <b class='counts'>(<b class='failed'>"+bad+"</b>, <b class='passed'>"+good+"</b>, "+this.assertions.length+")</b>";addEvent(b,"click",function(){var next=b.nextSibling.nextSibling,display=next.style.display;next.style.display="none"===display?"block":"none"});addEvent(b,"dblclick",function(e){var target=e&&e.target?e.target:window.event.srcElement;if("span"==target.nodeName.toLowerCase()||"b"==target.nodeName.toLowerCase()){target=target.parentNode}if(window.location&&"strong"===target.nodeName.toLowerCase()){window.location=QUnit.url({testNumber:test.testNumber})}});li=id(this.id);li.className=bad?"fail":"pass";li.removeChild(li.firstChild);a=li.firstChild;li.appendChild(b);li.appendChild(a);li.appendChild(ol)}else{for(i=0;i<this.assertions.length;i++){if(!this.assertions[i].result){bad++;config.stats.bad++;config.moduleStats.bad++}}}runLoggingCallbacks("testDone",QUnit,{name:this.testName,module:this.module,failed:bad,passed:this.assertions.length-bad,total:this.assertions.length});QUnit.reset()},queue:function(){var bad,test=this;synchronize(function(){test.init()});function run(){synchronize(function(){test.setup()});synchronize(function(){test.run()});synchronize(function(){test.teardown()});synchronize(function(){test.finish()})}bad=QUnit.config.reorder&&defined.sessionStorage&&+sessionStorage.getItem("qunit-test-"+this.module+"-"+this.testName);if(bad){run()}else{synchronize(run,!0)}}};QUnit={module:function(name,testEnvironment){config.currentModule=name;config.currentModuleTestEnviroment=testEnvironment},asyncTest:function(testName,expected,callback){if(2===arguments.length){callback=expected;expected=null}QUnit.test(testName,expected,callback,!0)},test:function(testName,expected,callback,async){var test,name="<span class='test-name'>"+escapeInnerText(testName)+"</span>";if(2===arguments.length){callback=expected;expected=null}if(config.currentModule){name="<span class='module-name'>"+config.currentModule+"</span>: "+name}test=new Test({name:name,testName:testName,expected:expected,async:async,callback:callback,module:config.currentModule,moduleTestEnvironment:config.currentModuleTestEnviroment,stack:sourceFromStacktrace(2)});if(!validTest(test)){return}test.queue()},expect:function(asserts){config.current.expected=asserts},start:function(count){config.semaphore-=count||1;if(0<config.semaphore){return}if(0>config.semaphore){config.semaphore=0}if(defined.setTimeout){window.setTimeout(function(){if(0<config.semaphore){return}if(config.timeout){clearTimeout(config.timeout)}config.blocking=!1;process(!0)},13)}else{config.blocking=!1;process(!0)}},stop:function(count){config.semaphore+=count||1;config.blocking=!0;if(config.testTimeout&&defined.setTimeout){clearTimeout(config.timeout);config.timeout=window.setTimeout(function(){QUnit.ok(!1,"Test timed out");config.semaphore=1;QUnit.start()},config.testTimeout)}}};QUnit.assert={ok:function(result,msg){if(!config.current){throw new Error("ok() assertion outside test context, was "+sourceFromStacktrace(2))}result=!!result;var source,details={result:result,message:msg};msg=escapeInnerText(msg||(result?"okay":"failed"));msg="<span class='test-message'>"+msg+"</span>";if(!result){source=sourceFromStacktrace(2);if(source){details.source=source;msg+="<table><tr class='test-source'><th>Source: </th><td><pre>"+escapeInnerText(source)+"</pre></td></tr></table>"}}runLoggingCallbacks("log",QUnit,details);config.current.assertions.push({result:result,message:msg})},equal:function(actual,expected,message){QUnit.push(expected==actual,actual,expected,message)},notEqual:function(actual,expected,message){QUnit.push(expected!=actual,actual,expected,message)},deepEqual:function(actual,expected,message){QUnit.push(QUnit.equiv(actual,expected),actual,expected,message)},notDeepEqual:function(actual,expected,message){QUnit.push(!QUnit.equiv(actual,expected),actual,expected,message)},strictEqual:function(actual,expected,message){QUnit.push(expected===actual,actual,expected,message)},notStrictEqual:function(actual,expected,message){QUnit.push(expected!==actual,actual,expected,message)},raises:function(block,expected,message){var actual,ok=!1;if("string"===typeof expected){message=expected;expected=null}try{block.call(config.current.testEnvironment)}catch(e){actual=e}if(actual){if(!expected){ok=!0}else if("regexp"===QUnit.objectType(expected)){ok=expected.test(actual)}else if(actual instanceof expected){ok=!0}else if(!0===expected.call({},actual)){ok=!0}}QUnit.push(ok,actual,null,message)}};extend(QUnit,QUnit.assert);QUnit.equals=function(){QUnit.push(!1,!1,!1,"QUnit.equals has been deprecated since 2009 (e88049a0), use QUnit.equal instead")};QUnit.same=function(){QUnit.push(!1,!1,!1,"QUnit.same has been deprecated since 2009 (e88049a0), use QUnit.deepEqual instead")};(function(){function F(){}F.prototype=QUnit;QUnit=new F;QUnit.constructor=F})();config={queue:[],blocking:!0,hidepassed:!1,reorder:!0,altertitle:!0,urlConfig:["noglobals","notrycatch"],begin:[],done:[],log:[],testStart:[],testDone:[],moduleStart:[],moduleDone:[]};(function(){var i,location=window.location||{search:"",protocol:"file:"},params=location.search.slice(1).split("&"),length=params.length,urlParams={},current;if(params[0]){for(i=0;i<length;i++){current=params[i].split("=");current[0]=decodeURIComponent(current[0]);current[1]=current[1]?decodeURIComponent(current[1]):!0;urlParams[current[0]]=current[1]}}QUnit.urlParams=urlParams;config.filter=urlParams.filter;config.testNumber=parseInt(urlParams.testNumber,10)||null;QUnit.isLocal="file:"===location.protocol})();if("undefined"===typeof exports){extend(window,QUnit);window.QUnit=QUnit}extend(QUnit,{config:config,init:function(){extend(config,{stats:{all:0,bad:0},moduleStats:{all:0,bad:0},started:+new Date,updateRate:1e3,blocking:!1,autostart:!0,autorun:!1,filter:"",queue:[],semaphore:0});var tests,banner,result,qunit=id("qunit");if(qunit){qunit.innerHTML="<h1 id='qunit-header'>"+escapeInnerText(document.title)+"</h1>"+"<h2 id='qunit-banner'></h2>"+"<div id='qunit-testrunner-toolbar'></div>"+"<h2 id='qunit-userAgent'></h2>"+"<ol id='qunit-tests'></ol>"}tests=id("qunit-tests");banner=id("qunit-banner");result=id("qunit-testresult");if(tests){tests.innerHTML=""}if(banner){banner.className=""}if(result){result.parentNode.removeChild(result)}if(tests){result=document.createElement("p");result.id="qunit-testresult";result.className="result";tests.parentNode.insertBefore(result,tests);result.innerHTML="Running...<br/>&nbsp;"}},reset:function(){var fixture;if(window.jQuery){jQuery("#qunit-fixture").html(config.fixture)}else{fixture=id("qunit-fixture");if(fixture){fixture.innerHTML=config.fixture}}},triggerEvent:function(elem,type,event){if(document.createEvent){event=document.createEvent("MouseEvents");event.initMouseEvent(type,!0,!0,elem.ownerDocument.defaultView,0,0,0,0,0,!1,!1,!1,!1,0,null);elem.dispatchEvent(event)}else if(elem.fireEvent){elem.fireEvent("on"+type)}},is:function(type,obj){return QUnit.objectType(obj)==type},objectType:function(obj){if("undefined"===typeof obj){return"undefined"}if(null===obj){return"null"}var type=toString.call(obj).match(/^\[object\s(.*)\]$/)[1]||"";switch(type){case"Number":if(isNaN(obj)){return"nan"}return"number";case"String":case"Boolean":case"Array":case"Date":case"RegExp":case"Function":return type.toLowerCase();}if("object"===typeof obj){return"object"}return},push:function(result,actual,expected,message){if(!config.current){throw new Error("assertion outside test context, was "+sourceFromStacktrace())}var output,source,details={result:result,message:message,actual:actual,expected:expected};message=escapeInnerText(message)||(result?"okay":"failed");message="<span class='test-message'>"+message+"</span>";output=message;if(!result){expected=escapeInnerText(QUnit.jsDump.parse(expected));actual=escapeInnerText(QUnit.jsDump.parse(actual));output+="<table><tr class='test-expected'><th>Expected: </th><td><pre>"+expected+"</pre></td></tr>";if(actual!=expected){output+="<tr class='test-actual'><th>Result: </th><td><pre>"+actual+"</pre></td></tr>";output+="<tr class='test-diff'><th>Diff: </th><td><pre>"+QUnit.diff(expected,actual)+"</pre></td></tr>"}source=sourceFromStacktrace();if(source){details.source=source;output+="<tr class='test-source'><th>Source: </th><td><pre>"+escapeInnerText(source)+"</pre></td></tr>"}output+="</table>"}runLoggingCallbacks("log",QUnit,details);config.current.assertions.push({result:!!result,message:output})},pushFailure:function(message,source){var output,details={result:!1,message:message};message=escapeInnerText(message)||"error";message="<span class='test-message'>"+message+"</span>";output=message;if(source){details.source=source;output+="<table><tr class='test-source'><th>Source: </th><td><pre>"+escapeInnerText(source)+"</pre></td></tr></table>"}runLoggingCallbacks("log",QUnit,details);config.current.assertions.push({result:!1,message:output})},url:function(params){params=extend(extend({},QUnit.urlParams),params);var key,querystring="?";for(key in params){if(!hasOwn.call(params,key)){continue}querystring+=encodeURIComponent(key)+"="+encodeURIComponent(params[key])+"&"}return window.location.pathname+querystring.slice(0,-1)},extend:extend,id:id,addEvent:addEvent});extend(QUnit.constructor.prototype,{begin:registerLoggingCallback("begin"),done:registerLoggingCallback("done"),log:registerLoggingCallback("log"),testStart:registerLoggingCallback("testStart"),testDone:registerLoggingCallback("testDone"),moduleStart:registerLoggingCallback("moduleStart"),moduleDone:registerLoggingCallback("moduleDone")});if("undefined"===typeof document||"complete"===document.readyState){config.autorun=!0}QUnit.load=function(){runLoggingCallbacks("begin",QUnit,{});var banner,filter,i,label,len,main,ol,toolbar,userAgent,val,urlConfigHtml="",oldconfig=extend({},config);QUnit.init();extend(config,oldconfig);config.blocking=!1;len=config.urlConfig.length;for(i=0;i<len;i++){val=config.urlConfig[i];config[val]=QUnit.urlParams[val];urlConfigHtml+="<label><input name='"+val+"' type='checkbox'"+(config[val]?" checked='checked'":"")+">"+val+"</label>"}userAgent=id("qunit-userAgent");if(userAgent){userAgent.innerHTML=navigator.userAgent}banner=id("qunit-header");if(banner){banner.innerHTML="<a href='"+QUnit.url({filter:void 0})+"'>"+banner.innerHTML+"</a> "+urlConfigHtml;addEvent(banner,"change",function(event){var params={};params[event.target.name]=event.target.checked?!0:void 0;window.location=QUnit.url(params)})}toolbar=id("qunit-testrunner-toolbar");if(toolbar){filter=document.createElement("input");filter.type="checkbox";filter.id="qunit-filter-pass";addEvent(filter,"click",function(){var tmp,ol=document.getElementById("qunit-tests");if(filter.checked){ol.className=ol.className+" hidepass"}else{tmp=" "+ol.className.replace(/[\n\t\r]/g," ")+" ";ol.className=tmp.replace(/ hidepass /," ")}if(defined.sessionStorage){if(filter.checked){sessionStorage.setItem("qunit-filter-passed-tests","true")}else{sessionStorage.removeItem("qunit-filter-passed-tests")}}});if(config.hidepassed||defined.sessionStorage&&sessionStorage.getItem("qunit-filter-passed-tests")){filter.checked=!0;ol=document.getElementById("qunit-tests");ol.className=ol.className+" hidepass"}toolbar.appendChild(filter);label=document.createElement("label");label.setAttribute("for","qunit-filter-pass");label.innerHTML="Hide passed tests";toolbar.appendChild(label)}main=id("qunit-fixture");if(main){config.fixture=main.innerHTML}if(config.autostart){QUnit.start()}};addEvent(window,"load",QUnit.load);window.onerror=function(message,file,line){if(QUnit.config.current){QUnit.pushFailure(message,file+":"+line)}else{QUnit.test("global failure",function(){QUnit.pushFailure(message,file+":"+line)})}};function done(){config.autorun=!0;if(config.currentModule){runLoggingCallbacks("moduleDone",QUnit,{name:config.currentModule,failed:config.moduleStats.bad,passed:config.moduleStats.all-config.moduleStats.bad,total:config.moduleStats.all})}var i,key,banner=id("qunit-banner"),tests=id("qunit-tests"),runtime=+new Date-config.started,passed=config.stats.all-config.stats.bad,html=["Tests completed in ",runtime," milliseconds.<br/>","<span class='passed'>",passed,"</span> tests of <span class='total'>",config.stats.all,"</span> passed, <span class='failed'>",config.stats.bad,"</span> failed."].join("");if(banner){banner.className=config.stats.bad?"qunit-fail":"qunit-pass"}if(tests){id("qunit-testresult").innerHTML=html}if(config.altertitle&&"undefined"!==typeof document&&document.title){document.title=[config.stats.bad?"\u2716":"\u2714",document.title.replace(/^[\u2714\u2716] /i,"")].join(" ")}if(config.reorder&&defined.sessionStorage&&0===config.stats.bad){for(i=0;i<sessionStorage.length;i++){key=sessionStorage.key(i++);if(0===key.indexOf("qunit-test-")){sessionStorage.removeItem(key)}}}runLoggingCallbacks("done",QUnit,{failed:config.stats.bad,passed:passed,total:config.stats.all,runtime:runtime})}function validTest(test){var include,filter=config.filter,fullName=test.module+": "+test.testName;if(config.testNumber){return test.testNumber===config.testNumber}if(!filter){return!0}include="!"!==filter.charAt(0);if(!include){filter=filter.slice(1)}if(-1!==fullName.indexOf(filter)){return include}return!include}function extractStacktrace(e,offset){offset=offset||3;var stack;if(e.stacktrace){return e.stacktrace.split("\n")[offset+3]}else if(e.stack){stack=e.stack.split("\n");if(/^error$/i.test(stack[0])){stack.shift()}return stack[offset]}else if(e.sourceURL){if(/qunit.js$/.test(e.sourceURL)){return}return e.sourceURL+":"+e.line}}function sourceFromStacktrace(offset){try{throw new Error}catch(e){return extractStacktrace(e,offset)}}function escapeInnerText(s){if(!s){return""}s=s+"";return s.replace(/[\&<>]/g,function(s){switch(s){case"&":return"&amp;";case"<":return"&lt;";case">":return"&gt;";default:return s;}})}function synchronize(callback,last){config.queue.push(callback);if(config.autorun&&!config.blocking){process(last)}}function process(last){function next(){process(last)}var start=new Date().getTime();config.depth=config.depth?config.depth+1:1;while(config.queue.length&&!config.blocking){if(!defined.setTimeout||0>=config.updateRate||new Date().getTime()-start<config.updateRate){config.queue.shift()()}else{window.setTimeout(next,13);break}}config.depth--;if(last&&!config.blocking&&!config.queue.length&&0===config.depth){done()}}function saveGlobal(){config.pollution=[];if(config.noglobals){for(var key in window){if(!hasOwn.call(window,key)||/^qunit-test-output/.test(key)){continue}config.pollution.push(key)}}}function checkPollution(name){var newGlobals,deletedGlobals,old=config.pollution;saveGlobal();newGlobals=diff(config.pollution,old);if(0<newGlobals.length){QUnit.pushFailure("Introduced global variable(s): "+newGlobals.join(", "))}deletedGlobals=diff(old,config.pollution);if(0<deletedGlobals.length){QUnit.pushFailure("Deleted global variable(s): "+deletedGlobals.join(", "))}}function diff(a,b){var i,j,result=a.slice();for(i=0;i<result.length;i++){for(j=0;j<b.length;j++){if(result[i]===b[j]){result.splice(i,1);i--;break}}}return result}function extend(a,b){for(var prop in b){if(b[prop]===void 0){delete a[prop]}else if("constructor"!==prop||a!==window){a[prop]=b[prop]}}return a}function addEvent(elem,type,fn){if(elem.addEventListener){elem.addEventListener(type,fn,!1)}else if(elem.attachEvent){elem.attachEvent("on"+type,fn)}else{fn()}}function id(name){return!!("undefined"!==typeof document&&document&&document.getElementById)&&document.getElementById(name)}function registerLoggingCallback(key){return function(callback){config[key].push(callback)}}function runLoggingCallbacks(key,scope,args){var i,callbacks;if(QUnit.hasOwnProperty(key)){QUnit[key].call(scope,args)}else{callbacks=config[key];for(i=0;i<callbacks.length;i++){callbacks[i].call(scope,args)}}}QUnit.equiv=function(){function bindCallbacks(o,callbacks,args){var prop=QUnit.objectType(o);if(prop){if("function"===QUnit.objectType(callbacks[prop])){return callbacks[prop].apply(callbacks,args)}else{return callbacks[prop]}}}var innerEquiv,callers=[],parents=[],getProto=Object.getPrototypeOf||function(obj){return obj.__proto__},callbacks=function(){function useStrictEquality(b,a){if(b instanceof a.constructor||a instanceof b.constructor){return a==b}else{return a===b}}return{string:useStrictEquality,boolean:useStrictEquality,number:useStrictEquality,null:useStrictEquality,undefined:useStrictEquality,nan:function(b){return isNaN(b)},date:function(b,a){return"date"===QUnit.objectType(b)&&a.valueOf()===b.valueOf()},regexp:function(b,a){return"regexp"===QUnit.objectType(b)&&a.source===b.source&&a.global===b.global&&a.ignoreCase===b.ignoreCase&&a.multiline===b.multiline},function:function(){var caller=callers[callers.length-1];return caller!==Object&&"undefined"!==typeof caller},array:function(b,a){var i,j,len,loop;if("array"!==QUnit.objectType(b)){return!1}len=a.length;if(len!==b.length){return!1}parents.push(a);for(i=0;i<len;i++){loop=!1;for(j=0;j<parents.length;j++){if(parents[j]===a[i]){loop=!0}}if(!loop&&!innerEquiv(a[i],b[i])){parents.pop();return!1}}parents.pop();return!0},object:function(b,a){var i,j,loop,eq=!0,aProperties=[],bProperties=[];if(a.constructor!==b.constructor){if(!(null===getProto(a)&&getProto(b)===Object.prototype||null===getProto(b)&&getProto(a)===Object.prototype)){return!1}}callers.push(a.constructor);parents.push(a);for(i in a){loop=!1;for(j=0;j<parents.length;j++){if(parents[j]===a[i]){loop=!0}}aProperties.push(i);if(!loop&&!innerEquiv(a[i],b[i])){eq=!1;break}}callers.pop();parents.pop();for(i in b){bProperties.push(i)}return eq&&innerEquiv(aProperties.sort(),bProperties.sort())}}}();innerEquiv=function(){var args=[].slice.apply(arguments);if(2>args.length){return!0}return function(a,b){if(a===b){return!0}else if(null===a||null===b||"undefined"===typeof a||"undefined"===typeof b||QUnit.objectType(a)!==QUnit.objectType(b)){return!1}else{return bindCallbacks(a,callbacks,[b,a])}}(args[0],args[1])&&arguments.callee.apply(this,args.splice(1,args.length-1))};return innerEquiv}();QUnit.jsDump=function(){function quote(str){return"\""+str.toString().replace(/"/g,"\\\"")+"\""}function literal(o){return o+""}function join(pre,arr,post){var s=jsDump.separator(),base=jsDump.indent(),inner=jsDump.indent(1);if(arr.join){arr=arr.join(","+s+inner)}if(!arr){return pre+post}return[pre,inner+arr,base+post].join(s)}function array(arr,stack){var i=arr.length,ret=Array(i);this.up();while(i--){ret[i]=this.parse(arr[i],void 0,stack)}this.down();return join("[",ret,"]")}var reName=/^function (\w+)/,jsDump={parse:function(obj,type,stack){stack=stack||[];var inStack,res,parser=this.parsers[type||this.typeOf(obj)];type=typeof parser;inStack=inArray(obj,stack);if(-1!=inStack){return"recursion("+(inStack-stack.length)+")"}if("function"==type){stack.push(obj);res=parser.call(this,obj,stack);stack.pop();return res}return"string"==type?parser:this.parsers.error},typeOf:function(obj){var type;if(null===obj){type="null"}else if("undefined"===typeof obj){type="undefined"}else if(QUnit.is("RegExp",obj)){type="regexp"}else if(QUnit.is("Date",obj)){type="date"}else if(QUnit.is("Function",obj)){type="function"}else if(typeof obj.setInterval!==void 0&&"undefined"!==typeof obj.document&&"undefined"===typeof obj.nodeType){type="window"}else if(9===obj.nodeType){type="document"}else if(obj.nodeType){type="node"}else if("[object Array]"===toString.call(obj)||"number"===typeof obj.length&&"undefined"!==typeof obj.item&&(obj.length?obj.item(0)===obj[0]:null===obj.item(0)&&"undefined"===typeof obj[0])){type="array"}else{type=typeof obj}return type},separator:function(){return this.multiline?this.HTML?"<br />":"\n":this.HTML?"&nbsp;":" "},indent:function(extra){if(!this.multiline){return""}var chr=this.indentChar;if(this.HTML){chr=chr.replace(/\t/g,"   ").replace(/ /g,"&nbsp;")}return Array(this._depth_+(extra||0)).join(chr)},up:function(a){this._depth_+=a||1},down:function(a){this._depth_-=a||1},setParser:function(name,parser){this.parsers[name]=parser},quote:quote,literal:literal,join:join,_depth_:1,parsers:{window:"[Window]",document:"[Document]",error:"[ERROR]",unknown:"[Unknown]",null:"null",undefined:"undefined",function:function(fn){var ret="function",name="name"in fn?fn.name:(reName.exec(fn)||[])[1];if(name){ret+=" "+name}ret+="( ";ret=[ret,QUnit.jsDump.parse(fn,"functionArgs"),"){"].join("");return join(ret,QUnit.jsDump.parse(fn,"functionCode"),"}")},array:array,nodelist:array,arguments:array,object:function(map,stack){var ret=[],keys,key,val,i;QUnit.jsDump.up();if(Object.keys){keys=Object.keys(map)}else{keys=[];for(key in map){keys.push(key)}}keys.sort();for(i=0;i<keys.length;i++){key=keys[i];val=map[key];ret.push(QUnit.jsDump.parse(key,"key")+": "+QUnit.jsDump.parse(val,void 0,stack))}QUnit.jsDump.down();return join("{",ret,"}")},node:function(node){var a,val,open=QUnit.jsDump.HTML?"&lt;":"<",close=QUnit.jsDump.HTML?"&gt;":">",tag=node.nodeName.toLowerCase(),ret=open+tag;for(a in QUnit.jsDump.DOMAttrs){val=node[QUnit.jsDump.DOMAttrs[a]];if(val){ret+=" "+a+"="+QUnit.jsDump.parse(val,"attribute")}}var textContent=node.textContent,maxLength=25;if(textContent.length>maxLength){textContent=textContent.substr(0,maxLength-3)+"..."}return ret+close+textContent+open+"/"+tag+close},functionArgs:function(fn){var args,l=fn.length;if(!l){return""}args=Array(l);while(l--){args[l]=String.fromCharCode(97+l)}return" "+args.join(", ")+" "},key:quote,functionCode:"[code]",attribute:quote,string:quote,date:quote,regexp:literal,number:literal,boolean:literal},DOMAttrs:{id:"id",name:"name",class:"className"},HTML:!1,indentChar:"  ",multiline:!0};return jsDump}();function getText(elems){var i,elem,ret="";for(i=0;elems[i];i++){elem=elems[i];if(3===elem.nodeType||4===elem.nodeType){ret+=elem.nodeValue}else if(8!==elem.nodeType){ret+=getText(elem.childNodes)}}return ret}function inArray(elem,array){if(array.indexOf){return array.indexOf(elem)}for(var i=0,length=array.length;i<length;i++){if(array[i]===elem){return i}}return-1}QUnit.diff=function(){function diff(o,n){var i,ns={},os={};for(i=0;i<n.length;i++){if(null==ns[n[i]]){ns[n[i]]={rows:[],o:null}}ns[n[i]].rows.push(i)}for(i=0;i<o.length;i++){if(null==os[o[i]]){os[o[i]]={rows:[],n:null}}os[o[i]].rows.push(i)}for(i in ns){if(!hasOwn.call(ns,i)){continue}if(1==ns[i].rows.length&&"undefined"!=typeof os[i]&&1==os[i].rows.length){n[ns[i].rows[0]]={text:n[ns[i].rows[0]],row:os[i].rows[0]};o[os[i].rows[0]]={text:o[os[i].rows[0]],row:ns[i].rows[0]}}}for(i=0;i<n.length-1;i++){if(null!=n[i].text&&null==n[i+1].text&&n[i].row+1<o.length&&null==o[n[i].row+1].text&&n[i+1]==o[n[i].row+1]){n[i+1]={text:n[i+1],row:n[i].row+1};o[n[i].row+1]={text:o[n[i].row+1],row:i+1}}}for(i=n.length-1;0<i;i--){if(null!=n[i].text&&null==n[i-1].text&&0<n[i].row&&null==o[n[i].row-1].text&&n[i-1]==o[n[i].row-1]){n[i-1]={text:n[i-1],row:n[i].row-1};o[n[i].row-1]={text:o[n[i].row-1],row:i-1}}}return{o:o,n:n}}return function(o,n){o=o.replace(/\s+$/,"");n=n.replace(/\s+$/,"");var i,pre,str="",out=diff(""===o?[]:o.split(/\s+/),""===n?[]:n.split(/\s+/)),oSpace=o.match(/\s+/g),nSpace=n.match(/\s+/g);if(null==oSpace){oSpace=[" "]}else{oSpace.push(" ")}if(null==nSpace){nSpace=[" "]}else{nSpace.push(" ")}if(0===out.n.length){for(i=0;i<out.o.length;i++){str+="<del>"+out.o[i]+oSpace[i]+"</del>"}}else{if(null==out.n[0].text){for(n=0;n<out.o.length&&null==out.o[n].text;n++){str+="<del>"+out.o[n]+oSpace[n]+"</del>"}}for(i=0;i<out.n.length;i++){if(null==out.n[i].text){str+="<ins>"+out.n[i]+nSpace[i]+"</ins>"}else{pre="";for(n=out.n[i].row+1;n<out.o.length&&null==out.o[n].text;n++){pre+="<del>"+out.o[n]+oSpace[n]+"</del>"}str+=" "+out.n[i].text+nSpace[i]+pre}}}return str}}();if("undefined"!==typeof exports){extend(exports,QUnit)}})(function(){return this}.call());