(function(f){if("object"===typeof exports&&"undefined"!==typeof module){module.exports=f()}else if("function"===typeof define&&define.amd){define([],f)}else{var g;if("undefined"!==typeof window){g=window}else if("undefined"!==typeof global){g=global}else if("undefined"!==typeof self){g=self}else{g=this}g.Stacky=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){(function(scope){'use strict';var parse=scope.parse||require("./parsing").parse;scope.defaults={maxMethodPadding:40,indent:"",methodPlaceholder:"<unknown>",locationStrip:[],unimportantLocation:[],filter:function(){return!1},styles:{method:passthrough,location:passthrough,line:passthrough,column:passthrough,unimportant:passthrough}};var isNode=new Function("try {return this===global;}catch(e){return false;}");if(isNode()){var chalk=require("chalk");scope.defaults.styles={method:chalk.magenta,location:chalk.blue,line:chalk.cyan,column:chalk.cyan,unimportant:chalk.dim}}function pretty(stackOrParsed,options){options=mergeDefaults(options||{},scope.defaults);var lines=Array.isArray(stackOrParsed)?stackOrParsed:parse(stackOrParsed);lines=clean(lines,options);var padSize=methodPadding(lines,options),parts=lines.map(function(line){var method=line.method||options.methodPlaceholder,pad=options.indent+padding(padSize-method.length),locationBits=[options.styles.location(line.location),options.styles.line(line.line)];if("column"in line){locationBits.push(options.styles.column(line.column))}var location=locationBits.join(":"),text=pad+options.styles.method(method)+" at "+location;if(!line.important){text=options.styles.unimportant(text)}return text});return parts.join("\n")}function clean(lines,options){for(var result=[],i=0,line;line=lines[i];i++){if(options.filter(line))continue;line.location=cleanLocation(line.location,options);line.important=isImportant(line,options);result.push(line)}return result}function passthrough(string){return string}function mergeDefaults(options,defaults){var result=Object.create(defaults);Object.keys(options).forEach(function(key){var value=options[key];if("object"===typeof value&&!Array.isArray(value)){value=mergeDefaults(value,defaults[key])}result[key]=value});return result}function methodPadding(lines,options){for(var size=options.methodPlaceholder.length,i=0,line;line=lines[i];i++){size=Math.min(options.maxMethodPadding,Math.max(size,line.method.length))}return size}function padding(length){for(var result="",i=0;i<length;i++){result=result+" "}return result}function cleanLocation(location,options){if(options.locationStrip){for(var i=0,matcher;matcher=options.locationStrip[i];i++){location=location.replace(matcher,"")}}return location}function isImportant(line,options){if(options.unimportantLocation){for(var i=0,matcher;matcher=options.unimportantLocation[i];i++){if(line.location.match(matcher))return!1}}return!0}scope.clean=clean;scope.pretty=pretty})("undefined"!==typeof module?module.exports:this.Stacky=this.Stacky||{})},{"./parsing":4,chalk:void 0}],2:[function(require,module,exports){'use strict';var formatting=require("./formatting"),normalization=require("./normalization"),parsing=require("./parsing");module.exports={normalize:normalization.normalize,parse:parsing.parse,pretty:formatting.pretty,formatting:formatting,normalization:normalization,parsing:parsing}},{"./formatting":1,"./normalization":3,"./parsing":4}],3:[function(require,module,exports){(function(scope){'use strict';var parse=scope.parse||require("./parsing").parse,pretty=scope.pretty||require("./formatting").pretty;function normalize(error,prettyOptions){if(error.parsedStack)return error;var message=error.message||error.description||error||"<unknown error>",parsedStack=[];try{parsedStack=parse(error.stack||error.toString())}catch(error){}if(0===parsedStack.length&&error.fileName){parsedStack.push({method:"",location:error.fileName,line:error.lineNumber,column:error.columnNumber})}if(!prettyOptions||!prettyOptions.showColumns){for(var i=0,line;line=parsedStack[i];i++){delete line.column}}var prettyStack=message;if(0<parsedStack.length){prettyStack=prettyStack+"\n"+pretty(parsedStack,prettyOptions)}var cleanErr=Object.create(Error.prototype);cleanErr.message=message;cleanErr.stack=prettyStack;cleanErr.parsedStack=parsedStack;return cleanErr}scope.normalize=normalize})("undefined"!==typeof module?module.exports:this.Stacky=this.Stacky||{})},{"./formatting":1,"./parsing":4}],4:[function(require,module,exports){(function(scope){'use strict';function parse(stack){var rawLines=stack.split("\n"),stackyLines=compact(rawLines.map(parseStackyLine));if(stackyLines.length===rawLines.length)return stackyLines;var v8Lines=compact(rawLines.map(parseV8Line));if(0<v8Lines.length)return v8Lines;var geckoLines=compact(rawLines.map(parseGeckoLine));if(0<geckoLines.length)return geckoLines;throw new Error("Unknown stack format: "+stack)}var GECKO_LINE=/^(?:([^@]*)@)?(.*?):(\d+)(?::(\d+))?$/;function parseGeckoLine(line){var match=line.match(GECKO_LINE);if(!match)return null;return{method:match[1]||"",location:match[2]||"",line:parseInt(match[3])||0,column:parseInt(match[4])||0}}var V8_OUTER1=/^\s*(eval )?at (.*) \((.*)\)$/,V8_OUTER2=/^\s*at()() (\S+)$/,V8_INNER=/^\(?([^\(]+):(\d+):(\d+)\)?$/;function parseV8Line(line){var outer=line.match(V8_OUTER1)||line.match(V8_OUTER2);if(!outer)return null;var inner=outer[3].match(V8_INNER);if(!inner)return null;var method=outer[2]||"";if(outer[1])method="eval at "+method;return{method:method,location:inner[1]||"",line:parseInt(inner[2])||0,column:parseInt(inner[3])||0}}var STACKY_LINE=/^\s*(.+) at (.+):(\d+):(\d+)$/;function parseStackyLine(line){var match=line.match(STACKY_LINE);if(!match)return null;return{method:match[1]||"",location:match[2]||"",line:parseInt(match[3])||0,column:parseInt(match[4])||0}}function compact(array){var result=[];array.forEach(function(value){if(value){result.push(value)}});return result}scope.parse=parse;scope.parseGeckoLine=parseGeckoLine;scope.parseV8Line=parseV8Line;scope.parseStackyLine=parseStackyLine})("undefined"!==typeof module?module.exports:this.Stacky=this.Stacky||{})},{}]},{},[2])(2)});