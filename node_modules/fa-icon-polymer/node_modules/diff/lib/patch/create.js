'use strict';exports.__esModule=!0;exports.structuredPatch=structuredPatch;exports.createTwoFilesPatch=createTwoFilesPatch;exports.createPatch=createPatch;var _line=require("../diff/line");function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i]}return arr2}else{return Array.from(arr)}}function structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){if(!options){options={}}if("undefined"===typeof options.context){options.context=4}var diff=(0,_line.diffLines)(oldStr,newStr,options);diff.push({value:"",lines:[]});function contextLines(lines){return lines.map(function(entry){return" "+entry})}for(var hunks=[],oldRangeStart=0,newRangeStart=0,curRange=[],oldLine=1,newLine=1,_loop=function _loop(i){var current=diff[i],lines=current.lines||current.value.replace(/\n$/,"").split("\n");current.lines=lines;if(current.added||current.removed){var _curRange;if(!oldRangeStart){var prev=diff[i-1];oldRangeStart=oldLine;newRangeStart=newLine;if(prev){curRange=0<options.context?contextLines(prev.lines.slice(-options.context)):[];oldRangeStart-=curRange.length;newRangeStart-=curRange.length}}(_curRange=curRange).push.apply(_curRange,_toConsumableArray(lines.map(function(entry){return(current.added?"+":"-")+entry})));if(current.added){newLine+=lines.length}else{oldLine+=lines.length}}else{if(oldRangeStart){if(lines.length<=2*options.context&&i<diff.length-2){var _curRange2;(_curRange2=curRange).push.apply(_curRange2,_toConsumableArray(contextLines(lines)))}else{var _curRange3,contextSize=Math.min(lines.length,options.context);(_curRange3=curRange).push.apply(_curRange3,_toConsumableArray(contextLines(lines.slice(0,contextSize))));var hunk={oldStart:oldRangeStart,oldLines:oldLine-oldRangeStart+contextSize,newStart:newRangeStart,newLines:newLine-newRangeStart+contextSize,lines:curRange};if(i>=diff.length-2&&lines.length<=options.context){var oldEOFNewline=/\n$/.test(oldStr),newEOFNewline=/\n$/.test(newStr);if(0==lines.length&&!oldEOFNewline){curRange.splice(hunk.oldLines,0,"\\ No newline at end of file")}else if(!oldEOFNewline||!newEOFNewline){curRange.push("\\ No newline at end of file")}}hunks.push(hunk);oldRangeStart=0;newRangeStart=0;curRange=[]}}oldLine+=lines.length;newLine+=lines.length}},i=0;i<diff.length;i++){_loop(i)}return{oldFileName:oldFileName,newFileName:newFileName,oldHeader:oldHeader,newHeader:newHeader,hunks:hunks}}function createTwoFilesPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){var diff=structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options),ret=[];if(oldFileName==newFileName){ret.push("Index: "+oldFileName)}ret.push("===================================================================");ret.push("--- "+diff.oldFileName+("undefined"===typeof diff.oldHeader?"":"\t"+diff.oldHeader));ret.push("+++ "+diff.newFileName+("undefined"===typeof diff.newHeader?"":"\t"+diff.newHeader));for(var i=0,hunk;i<diff.hunks.length;i++){hunk=diff.hunks[i];ret.push("@@ -"+hunk.oldStart+","+hunk.oldLines+" +"+hunk.newStart+","+hunk.newLines+" @@");ret.push.apply(ret,hunk.lines)}return ret.join("\n")+"\n"}function createPatch(fileName,oldStr,newStr,oldHeader,newHeader,options){return createTwoFilesPatch(fileName,fileName,oldStr,newStr,oldHeader,newHeader,options)}