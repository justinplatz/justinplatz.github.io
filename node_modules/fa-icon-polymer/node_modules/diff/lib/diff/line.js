'use strict';exports.__esModule=!0;exports.lineDiff=void 0;exports.diffLines=diffLines;exports.diffTrimmedLines=diffTrimmedLines;var _base=require("./base"),_base2=_interopRequireDefault(_base),_params=require("../util/params");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var lineDiff=exports.lineDiff=new _base2["default"];lineDiff.tokenize=function(value){var retLines=[],linesAndNewlines=value.split(/(\n|\r\n)/);if(!linesAndNewlines[linesAndNewlines.length-1]){linesAndNewlines.pop()}for(var i=0,line;i<linesAndNewlines.length;i++){line=linesAndNewlines[i];if(i%2&&!this.options.newlineIsToken){retLines[retLines.length-1]+=line}else{if(this.options.ignoreWhitespace){line=line.trim()}retLines.push(line)}}return retLines};function diffLines(oldStr,newStr,callback){return lineDiff.diff(oldStr,newStr,callback)}function diffTrimmedLines(oldStr,newStr,callback){var options=(0,_params.generateOptions)(callback,{ignoreWhitespace:!0});return lineDiff.diff(oldStr,newStr,options)}