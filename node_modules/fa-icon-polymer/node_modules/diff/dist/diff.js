(function webpackUniversalModuleDefinition(root,factory){if("object"===typeof exports&&"object"===typeof module)module.exports=factory();else if("function"===typeof define&&define.amd)define([],factory);else if("object"===typeof exports)exports.JsDiff=factory();else root.JsDiff=factory()})(this,function(){return function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.loaded=!0;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.p="";return __webpack_require__(0)}([function(module,exports,__webpack_require__){'use strict';exports.__esModule=!0;exports.canonicalize=exports.convertChangesToXML=exports.convertChangesToDMP=exports.parsePatch=exports.applyPatches=exports.applyPatch=exports.createPatch=exports.createTwoFilesPatch=exports.structuredPatch=exports.diffArrays=exports.diffJson=exports.diffCss=exports.diffSentences=exports.diffTrimmedLines=exports.diffLines=exports.diffWordsWithSpace=exports.diffWords=exports.diffChars=exports.Diff=void 0;var _base=__webpack_require__(1),_base2=_interopRequireDefault(_base),_character=__webpack_require__(2),_word=__webpack_require__(3),_line=__webpack_require__(5),_sentence=__webpack_require__(6),_css=__webpack_require__(7),_json=__webpack_require__(8),_array=__webpack_require__(9),_apply=__webpack_require__(10),_parse=__webpack_require__(11),_create=__webpack_require__(13),_dmp=__webpack_require__(14),_xml=__webpack_require__(15);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.Diff=_base2["default"];exports.diffChars=_character.diffChars;exports.diffWords=_word.diffWords;exports.diffWordsWithSpace=_word.diffWordsWithSpace;exports.diffLines=_line.diffLines;exports.diffTrimmedLines=_line.diffTrimmedLines;exports.diffSentences=_sentence.diffSentences;exports.diffCss=_css.diffCss;exports.diffJson=_json.diffJson;exports.diffArrays=_array.diffArrays;exports.structuredPatch=_create.structuredPatch;exports.createTwoFilesPatch=_create.createTwoFilesPatch;exports.createPatch=_create.createPatch;exports.applyPatch=_apply.applyPatch;exports.applyPatches=_apply.applyPatches;exports.parsePatch=_parse.parsePatch;exports.convertChangesToDMP=_dmp.convertChangesToDMP;exports.convertChangesToXML=_xml.convertChangesToXML;exports.canonicalize=_json.canonicalize},function(module,exports){'use strict';exports.__esModule=!0;exports["default"]=Diff;function Diff(){}Diff.prototype={diff:function diff(oldString,newString){var options=2>=arguments.length||arguments[2]===void 0?{}:arguments[2],callback=options.callback;if("function"===typeof options){callback=options;options={}}this.options=options;var self=this;function done(value){if(callback){setTimeout(function(){callback(void 0,value)},0);return!0}else{return value}}oldString=this.castInput(oldString);newString=this.castInput(newString);oldString=this.removeEmpty(this.tokenize(oldString));newString=this.removeEmpty(this.tokenize(newString));var newLen=newString.length,oldLen=oldString.length,editLength=1,maxEditLength=newLen+oldLen,bestPath=[{newPos:-1,components:[]}],oldPos=this.extractCommon(bestPath[0],newString,oldString,0);if(bestPath[0].newPos+1>=newLen&&oldPos+1>=oldLen){return done([{value:this.join(newString),count:newString.length}])}function execEditLength(){for(var diagonalPath=-1*editLength;diagonalPath<=editLength;diagonalPath+=2){var basePath=void 0,addPath=bestPath[diagonalPath-1],removePath=bestPath[diagonalPath+1],_oldPos=(removePath?removePath.newPos:0)-diagonalPath;if(addPath){bestPath[diagonalPath-1]=void 0}var canAdd=addPath&&addPath.newPos+1<newLen,canRemove=removePath&&0<=_oldPos&&_oldPos<oldLen;if(!canAdd&&!canRemove){bestPath[diagonalPath]=void 0;continue}if(!canAdd||canRemove&&addPath.newPos<removePath.newPos){basePath=clonePath(removePath);self.pushComponent(basePath.components,void 0,!0)}else{basePath=addPath;basePath.newPos++;self.pushComponent(basePath.components,!0,void 0)}_oldPos=self.extractCommon(basePath,newString,oldString,diagonalPath);if(basePath.newPos+1>=newLen&&_oldPos+1>=oldLen){return done(buildValues(self,basePath.components,newString,oldString,self.useLongestToken))}else{bestPath[diagonalPath]=basePath}}editLength++}if(callback){(function exec(){setTimeout(function(){if(editLength>maxEditLength){return callback()}if(!execEditLength()){exec()}},0)})()}else{while(editLength<=maxEditLength){var ret=execEditLength();if(ret){return ret}}}},pushComponent:function pushComponent(components,added,removed){var last=components[components.length-1];if(last&&last.added===added&&last.removed===removed){components[components.length-1]={count:last.count+1,added:added,removed:removed}}else{components.push({count:1,added:added,removed:removed})}},extractCommon:function extractCommon(basePath,newString,oldString,diagonalPath){var newLen=newString.length,oldLen=oldString.length,newPos=basePath.newPos,oldPos=newPos-diagonalPath,commonCount=0;while(newPos+1<newLen&&oldPos+1<oldLen&&this.equals(newString[newPos+1],oldString[oldPos+1])){newPos++;oldPos++;commonCount++}if(commonCount){basePath.components.push({count:commonCount})}basePath.newPos=newPos;return oldPos},equals:function equals(left,right){return left===right},removeEmpty:function removeEmpty(array){for(var ret=[],i=0;i<array.length;i++){if(array[i]){ret.push(array[i])}}return ret},castInput:function castInput(value){return value},tokenize:function tokenize(value){return value.split("")},join:function join(chars){return chars.join("")}};function buildValues(diff,components,newString,oldString,useLongestToken){var componentPos=0,componentLen=components.length,newPos=0,oldPos=0;for(;componentPos<componentLen;componentPos++){var component=components[componentPos];if(!component.removed){if(!component.added&&useLongestToken){var value=newString.slice(newPos,newPos+component.count);value=value.map(function(value,i){var oldValue=oldString[oldPos+i];return oldValue.length>value.length?oldValue:value});component.value=diff.join(value)}else{component.value=diff.join(newString.slice(newPos,newPos+component.count))}newPos+=component.count;if(!component.added){oldPos+=component.count}}else{component.value=diff.join(oldString.slice(oldPos,oldPos+component.count));oldPos+=component.count;if(componentPos&&components[componentPos-1].added){var tmp=components[componentPos-1];components[componentPos-1]=components[componentPos];components[componentPos]=tmp}}}var lastComponent=components[componentLen-1];if(1<componentLen&&(lastComponent.added||lastComponent.removed)&&diff.equals("",lastComponent.value)){components[componentLen-2].value+=lastComponent.value;components.pop()}return components}function clonePath(path){return{newPos:path.newPos,components:path.components.slice(0)}}},function(module,exports,__webpack_require__){'use strict';exports.__esModule=!0;exports.characterDiff=void 0;exports.diffChars=diffChars;var _base=__webpack_require__(1),_base2=_interopRequireDefault(_base);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var characterDiff=exports.characterDiff=new _base2["default"];function diffChars(oldStr,newStr,callback){return characterDiff.diff(oldStr,newStr,callback)}},function(module,exports,__webpack_require__){'use strict';exports.__esModule=!0;exports.wordDiff=void 0;exports.diffWords=diffWords;exports.diffWordsWithSpace=diffWordsWithSpace;var _base=__webpack_require__(1),_base2=_interopRequireDefault(_base),_params=__webpack_require__(4);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var extendedWordChars=/^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/,reWhitespace=/\S/,wordDiff=exports.wordDiff=new _base2["default"];wordDiff.equals=function(left,right){return left===right||this.options.ignoreWhitespace&&!reWhitespace.test(left)&&!reWhitespace.test(right)};wordDiff.tokenize=function(value){for(var tokens=value.split(/(\s+|\b)/),i=0;i<tokens.length-1;i++){if(!tokens[i+1]&&tokens[i+2]&&extendedWordChars.test(tokens[i])&&extendedWordChars.test(tokens[i+2])){tokens[i]+=tokens[i+2];tokens.splice(i+1,2);i--}}return tokens};function diffWords(oldStr,newStr,callback){var options=(0,_params.generateOptions)(callback,{ignoreWhitespace:!0});return wordDiff.diff(oldStr,newStr,options)}function diffWordsWithSpace(oldStr,newStr,callback){return wordDiff.diff(oldStr,newStr,callback)}},function(module,exports){'use strict';exports.__esModule=!0;exports.generateOptions=generateOptions;function generateOptions(options,defaults){if("function"===typeof options){defaults.callback=options}else if(options){for(var name in options){if(options.hasOwnProperty(name)){defaults[name]=options[name]}}}return defaults}},function(module,exports,__webpack_require__){'use strict';exports.__esModule=!0;exports.lineDiff=void 0;exports.diffLines=diffLines;exports.diffTrimmedLines=diffTrimmedLines;var _base=__webpack_require__(1),_base2=_interopRequireDefault(_base),_params=__webpack_require__(4);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var lineDiff=exports.lineDiff=new _base2["default"];lineDiff.tokenize=function(value){var retLines=[],linesAndNewlines=value.split(/(\n|\r\n)/);if(!linesAndNewlines[linesAndNewlines.length-1]){linesAndNewlines.pop()}for(var i=0,line;i<linesAndNewlines.length;i++){line=linesAndNewlines[i];if(i%2&&!this.options.newlineIsToken){retLines[retLines.length-1]+=line}else{if(this.options.ignoreWhitespace){line=line.trim()}retLines.push(line)}}return retLines};function diffLines(oldStr,newStr,callback){return lineDiff.diff(oldStr,newStr,callback)}function diffTrimmedLines(oldStr,newStr,callback){var options=(0,_params.generateOptions)(callback,{ignoreWhitespace:!0});return lineDiff.diff(oldStr,newStr,options)}},function(module,exports,__webpack_require__){'use strict';exports.__esModule=!0;exports.sentenceDiff=void 0;exports.diffSentences=diffSentences;var _base=__webpack_require__(1),_base2=_interopRequireDefault(_base);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var sentenceDiff=exports.sentenceDiff=new _base2["default"];sentenceDiff.tokenize=function(value){return value.split(/(\S.+?[.!?])(?=\s+|$)/)};function diffSentences(oldStr,newStr,callback){return sentenceDiff.diff(oldStr,newStr,callback)}},function(module,exports,__webpack_require__){'use strict';exports.__esModule=!0;exports.cssDiff=void 0;exports.diffCss=diffCss;var _base=__webpack_require__(1),_base2=_interopRequireDefault(_base);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var cssDiff=exports.cssDiff=new _base2["default"];cssDiff.tokenize=function(value){return value.split(/([{}:;,]|\s+)/)};function diffCss(oldStr,newStr,callback){return cssDiff.diff(oldStr,newStr,callback)}},function(module,exports,__webpack_require__){'use strict';exports.__esModule=!0;exports.jsonDiff=void 0;var _typeof="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"===typeof Symbol&&obj.constructor===Symbol?"symbol":typeof obj};exports.diffJson=diffJson;exports.canonicalize=canonicalize;var _base=__webpack_require__(1),_base2=_interopRequireDefault(_base),_line=__webpack_require__(5);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var objectPrototypeToString=Object.prototype.toString,jsonDiff=exports.jsonDiff=new _base2["default"];jsonDiff.useLongestToken=!0;jsonDiff.tokenize=_line.lineDiff.tokenize;jsonDiff.castInput=function(value){var undefinedReplacement=this.options.undefinedReplacement;return"string"===typeof value?value:JSON.stringify(canonicalize(value),function(k,v){if("undefined"===typeof v){return undefinedReplacement}return v},"  ")};jsonDiff.equals=function(left,right){return _base2["default"].prototype.equals(left.replace(/,([\r\n])/g,"$1"),right.replace(/,([\r\n])/g,"$1"))};function diffJson(oldObj,newObj,options){return jsonDiff.diff(oldObj,newObj,options)}function canonicalize(obj,stack,replacementStack){stack=stack||[];replacementStack=replacementStack||[];var i;for(i=0;i<stack.length;i+=1){if(stack[i]===obj){return replacementStack[i]}}var canonicalizedObj;if("[object Array]"===objectPrototypeToString.call(obj)){stack.push(obj);canonicalizedObj=Array(obj.length);replacementStack.push(canonicalizedObj);for(i=0;i<obj.length;i+=1){canonicalizedObj[i]=canonicalize(obj[i],stack,replacementStack)}stack.pop();replacementStack.pop();return canonicalizedObj}if(obj&&obj.toJSON){obj=obj.toJSON()}if("object"===("undefined"===typeof obj?"undefined":_typeof(obj))&&null!==obj){stack.push(obj);canonicalizedObj={};replacementStack.push(canonicalizedObj);var sortedKeys=[],key;for(key in obj){if(obj.hasOwnProperty(key)){sortedKeys.push(key)}}sortedKeys.sort();for(i=0;i<sortedKeys.length;i+=1){key=sortedKeys[i];canonicalizedObj[key]=canonicalize(obj[key],stack,replacementStack)}stack.pop();replacementStack.pop()}else{canonicalizedObj=obj}return canonicalizedObj}},function(module,exports,__webpack_require__){'use strict';exports.__esModule=!0;exports.arrayDiff=void 0;exports.diffArrays=diffArrays;var _base=__webpack_require__(1),_base2=_interopRequireDefault(_base);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var arrayDiff=exports.arrayDiff=new _base2["default"];arrayDiff.tokenize=arrayDiff.join=function(value){return value.slice()};function diffArrays(oldArr,newArr,callback){return arrayDiff.diff(oldArr,newArr,callback)}},function(module,exports,__webpack_require__){'use strict';exports.__esModule=!0;exports.applyPatch=applyPatch;exports.applyPatches=applyPatches;var _parse=__webpack_require__(11),_distanceIterator=__webpack_require__(12),_distanceIterator2=_interopRequireDefault(_distanceIterator);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function applyPatch(source,uniDiff){var options=2>=arguments.length||arguments[2]===void 0?{}:arguments[2];if("string"===typeof uniDiff){uniDiff=(0,_parse.parsePatch)(uniDiff)}if(Array.isArray(uniDiff)){if(1<uniDiff.length){throw new Error("applyPatch only works with a single input.")}uniDiff=uniDiff[0]}var lines=source.split(/\r\n|[\n\v\f\r\x85]/),delimiters=source.match(/\r\n|[\n\v\f\r\x85]/g)||[],hunks=uniDiff.hunks,compareLine=options.compareLine||function(lineNumber,line,operation,patchContent){return line===patchContent},errorCount=0,fuzzFactor=options.fuzzFactor||0,minLine=0,offset=0,removeEOFNL,addEOFNL;function hunkFits(hunk,toPos){for(var j=0;j<hunk.lines.length;j++){var line=hunk.lines[j],operation=line[0],content=line.substr(1);if(" "===operation||"-"===operation){if(!compareLine(toPos+1,lines[toPos],operation,content)){errorCount++;if(errorCount>fuzzFactor){return!1}}toPos++}}return!0}for(var i=0;i<hunks.length;i++){var hunk=hunks[i],maxLine=lines.length-hunk.oldLines,localOffset=0,toPos=offset+hunk.oldStart-1,iterator=(0,_distanceIterator2["default"])(toPos,minLine,maxLine);for(;localOffset!==void 0;localOffset=iterator()){if(hunkFits(hunk,toPos+localOffset)){hunk.offset=offset+=localOffset;break}}if(localOffset===void 0){return!1}minLine=hunk.offset+hunk.oldStart+hunk.oldLines}for(var _i=0;_i<hunks.length;_i++){var _hunk=hunks[_i],_toPos=_hunk.offset+_hunk.newStart-1;if(0==_hunk.newLines){_toPos++}for(var j=0;j<_hunk.lines.length;j++){var line=_hunk.lines[j],operation=line[0],content=line.substr(1),delimiter=_hunk.linedelimiters[j];if(" "===operation){_toPos++}else if("-"===operation){lines.splice(_toPos,1);delimiters.splice(_toPos,1)}else if("+"===operation){lines.splice(_toPos,0,content);delimiters.splice(_toPos,0,delimiter);_toPos++}else if("\\"===operation){var previousOperation=_hunk.lines[j-1]?_hunk.lines[j-1][0]:null;if("+"===previousOperation){removeEOFNL=!0}else if("-"===previousOperation){addEOFNL=!0}}}}if(removeEOFNL){while(!lines[lines.length-1]){lines.pop();delimiters.pop()}}else if(addEOFNL){lines.push("");delimiters.push("\n")}for(var _k=0;_k<lines.length-1;_k++){lines[_k]=lines[_k]+delimiters[_k]}return lines.join("")}function applyPatches(uniDiff,options){if("string"===typeof uniDiff){uniDiff=(0,_parse.parsePatch)(uniDiff)}var currentIndex=0;function processIndex(){var index=uniDiff[currentIndex++];if(!index){return options.complete()}options.loadFile(index,function(err,data){if(err){return options.complete(err)}var updatedContent=applyPatch(data,index,options);options.patched(index,updatedContent,function(err){if(err){return options.complete(err)}processIndex()})})}processIndex()}},function(module,exports){'use strict';exports.__esModule=!0;exports.parsePatch=parsePatch;function parsePatch(uniDiff){var options=1>=arguments.length||arguments[1]===void 0?{}:arguments[1],diffstr=uniDiff.split(/\r\n|[\n\v\f\r\x85]/),delimiters=uniDiff.match(/\r\n|[\n\v\f\r\x85]/g)||[],list=[],i=0;function parseIndex(){var index={};list.push(index);while(i<diffstr.length){var line=diffstr[i];if(/^(\-\-\-|\+\+\+|@@)\s/.test(line)){break}var header=/^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(line);if(header){index.index=header[1]}i++}parseFileHeader(index);parseFileHeader(index);index.hunks=[];while(i<diffstr.length){var _line=diffstr[i];if(/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(_line)){break}else if(/^@@/.test(_line)){index.hunks.push(parseHunk())}else if(_line&&options.strict){throw new Error("Unknown line "+(i+1)+" "+JSON.stringify(_line))}else{i++}}}function parseFileHeader(index){var headerPattern=/^(---|\+\+\+)\s+([\S ]*)(?:\t(.*?)\s*)?$/,fileHeader=headerPattern.exec(diffstr[i]);if(fileHeader){var keyPrefix="---"===fileHeader[1]?"old":"new";index[keyPrefix+"FileName"]=fileHeader[2];index[keyPrefix+"Header"]=fileHeader[3];i++}}function parseHunk(){var chunkHeaderIndex=i,chunkHeaderLine=diffstr[i++],chunkHeader=chunkHeaderLine.split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/),hunk={oldStart:+chunkHeader[1],oldLines:+chunkHeader[2]||1,newStart:+chunkHeader[3],newLines:+chunkHeader[4]||1,lines:[],linedelimiters:[]},addCount=0,removeCount=0;for(;i<diffstr.length;i++){if(0===diffstr[i].indexOf("--- ")&&i+2<diffstr.length&&0===diffstr[i+1].indexOf("+++ ")&&0===diffstr[i+2].indexOf("@@")){break}var operation=diffstr[i][0];if("+"===operation||"-"===operation||" "===operation||"\\"===operation){hunk.lines.push(diffstr[i]);hunk.linedelimiters.push(delimiters[i]||"\n");if("+"===operation){addCount++}else if("-"===operation){removeCount++}else if(" "===operation){addCount++;removeCount++}}else{break}}if(!addCount&&1===hunk.newLines){hunk.newLines=0}if(!removeCount&&1===hunk.oldLines){hunk.oldLines=0}if(options.strict){if(addCount!==hunk.newLines){throw new Error("Added line count did not match for hunk at line "+(chunkHeaderIndex+1))}if(removeCount!==hunk.oldLines){throw new Error("Removed line count did not match for hunk at line "+(chunkHeaderIndex+1))}}return hunk}while(i<diffstr.length){parseIndex()}return list}},function(module,exports){"use strict";exports.__esModule=!0;exports["default"]=function(start,minLine,maxLine){var wantForward=!0,backwardExhausted=!1,forwardExhausted=!1,localOffset=1;return function iterator(){if(wantForward&&!forwardExhausted){if(backwardExhausted){localOffset++}else{wantForward=!1}if(start+localOffset<=maxLine){return localOffset}forwardExhausted=!0}if(!backwardExhausted){if(!forwardExhausted){wantForward=!0}if(minLine<=start-localOffset){return-localOffset++}backwardExhausted=!0;return iterator()}}}},function(module,exports,__webpack_require__){'use strict';exports.__esModule=!0;exports.structuredPatch=structuredPatch;exports.createTwoFilesPatch=createTwoFilesPatch;exports.createPatch=createPatch;var _line=__webpack_require__(5);function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i]}return arr2}else{return Array.from(arr)}}function structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){if(!options){options={}}if("undefined"===typeof options.context){options.context=4}var diff=(0,_line.diffLines)(oldStr,newStr,options);diff.push({value:"",lines:[]});function contextLines(lines){return lines.map(function(entry){return" "+entry})}for(var hunks=[],oldRangeStart=0,newRangeStart=0,curRange=[],oldLine=1,newLine=1,_loop=function _loop(i){var current=diff[i],lines=current.lines||current.value.replace(/\n$/,"").split("\n");current.lines=lines;if(current.added||current.removed){var _curRange;if(!oldRangeStart){var prev=diff[i-1];oldRangeStart=oldLine;newRangeStart=newLine;if(prev){curRange=0<options.context?contextLines(prev.lines.slice(-options.context)):[];oldRangeStart-=curRange.length;newRangeStart-=curRange.length}}(_curRange=curRange).push.apply(_curRange,_toConsumableArray(lines.map(function(entry){return(current.added?"+":"-")+entry})));if(current.added){newLine+=lines.length}else{oldLine+=lines.length}}else{if(oldRangeStart){if(lines.length<=2*options.context&&i<diff.length-2){var _curRange2;(_curRange2=curRange).push.apply(_curRange2,_toConsumableArray(contextLines(lines)))}else{var _curRange3,contextSize=Math.min(lines.length,options.context);(_curRange3=curRange).push.apply(_curRange3,_toConsumableArray(contextLines(lines.slice(0,contextSize))));var hunk={oldStart:oldRangeStart,oldLines:oldLine-oldRangeStart+contextSize,newStart:newRangeStart,newLines:newLine-newRangeStart+contextSize,lines:curRange};if(i>=diff.length-2&&lines.length<=options.context){var oldEOFNewline=/\n$/.test(oldStr),newEOFNewline=/\n$/.test(newStr);if(0==lines.length&&!oldEOFNewline){curRange.splice(hunk.oldLines,0,"\\ No newline at end of file")}else if(!oldEOFNewline||!newEOFNewline){curRange.push("\\ No newline at end of file")}}hunks.push(hunk);oldRangeStart=0;newRangeStart=0;curRange=[]}}oldLine+=lines.length;newLine+=lines.length}},i=0;i<diff.length;i++){_loop(i)}return{oldFileName:oldFileName,newFileName:newFileName,oldHeader:oldHeader,newHeader:newHeader,hunks:hunks}}function createTwoFilesPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){var diff=structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options),ret=[];if(oldFileName==newFileName){ret.push("Index: "+oldFileName)}ret.push("===================================================================");ret.push("--- "+diff.oldFileName+("undefined"===typeof diff.oldHeader?"":"\t"+diff.oldHeader));ret.push("+++ "+diff.newFileName+("undefined"===typeof diff.newHeader?"":"\t"+diff.newHeader));for(var i=0,hunk;i<diff.hunks.length;i++){hunk=diff.hunks[i];ret.push("@@ -"+hunk.oldStart+","+hunk.oldLines+" +"+hunk.newStart+","+hunk.newLines+" @@");ret.push.apply(ret,hunk.lines)}return ret.join("\n")+"\n"}function createPatch(fileName,oldStr,newStr,oldHeader,newHeader,options){return createTwoFilesPatch(fileName,fileName,oldStr,newStr,oldHeader,newHeader,options)}},function(module,exports){"use strict";exports.__esModule=!0;exports.convertChangesToDMP=convertChangesToDMP;function convertChangesToDMP(changes){for(var ret=[],change=void 0,operation=void 0,i=0;i<changes.length;i++){change=changes[i];if(change.added){operation=1}else if(change.removed){operation=-1}else{operation=0}ret.push([operation,change.value])}return ret}},function(module,exports){'use strict';exports.__esModule=!0;exports.convertChangesToXML=convertChangesToXML;function convertChangesToXML(changes){for(var ret=[],i=0,change;i<changes.length;i++){change=changes[i];if(change.added){ret.push("<ins>")}else if(change.removed){ret.push("<del>")}ret.push(escapeHTML(change.value));if(change.added){ret.push("</ins>")}else if(change.removed){ret.push("</del>")}}return ret.join("")}function escapeHTML(s){var n=s;n=n.replace(/&/g,"&amp;");n=n.replace(/</g,"&lt;");n=n.replace(/>/g,"&gt;");n=n.replace(/"/g,"&quot;");return n}}])});;