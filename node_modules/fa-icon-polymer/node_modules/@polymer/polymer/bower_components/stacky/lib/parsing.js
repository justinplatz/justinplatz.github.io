(function(scope){'use strict';function parse(stack){var rawLines=stack.split("\n"),stackyLines=compact(rawLines.map(parseStackyLine));if(stackyLines.length===rawLines.length)return stackyLines;var v8Lines=compact(rawLines.map(parseV8Line));if(0<v8Lines.length)return v8Lines;var geckoLines=compact(rawLines.map(parseGeckoLine));if(0<geckoLines.length)return geckoLines;throw new Error("Unknown stack format: "+stack)}var GECKO_LINE=/^(?:([^@]*)@)?(.*?):(\d+)(?::(\d+))?$/;function parseGeckoLine(line){var match=line.match(GECKO_LINE);if(!match)return null;return{method:match[1]||"",location:match[2]||"",line:parseInt(match[3])||0,column:parseInt(match[4])||0}}var V8_OUTER1=/^\s*(eval )?at (.*) \((.*)\)$/,V8_OUTER2=/^\s*at()() (\S+)$/,V8_INNER=/^\(?([^\(]+):(\d+):(\d+)\)?$/;function parseV8Line(line){var outer=line.match(V8_OUTER1)||line.match(V8_OUTER2);if(!outer)return null;var inner=outer[3].match(V8_INNER);if(!inner)return null;var method=outer[2]||"";if(outer[1])method="eval at "+method;return{method:method,location:inner[1]||"",line:parseInt(inner[2])||0,column:parseInt(inner[3])||0}}var STACKY_LINE=/^\s*(.+) at (.+):(\d+):(\d+)$/;function parseStackyLine(line){var match=line.match(STACKY_LINE);if(!match)return null;return{method:match[1]||"",location:match[2]||"",line:parseInt(match[3])||0,column:parseInt(match[4])||0}}function compact(array){var result=[];array.forEach(function(value){if(value){result.push(value)}});return result}scope.parse=parse;scope.parseGeckoLine=parseGeckoLine;scope.parseV8Line=parseV8Line;scope.parseStackyLine=parseStackyLine})("undefined"!==typeof module?module.exports:this.Stacky=this.Stacky||{});